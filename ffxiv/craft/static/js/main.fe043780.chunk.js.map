{"version":3,"sources":["components/Sim/Icons.tsx","components/Sim/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Icons","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","276","277","278","279","283","284","285","286","287","4574","4575","4576","4577","4578","4579","4580","4581","4597","4598","4599","4600","4601","4602","4603","4604","4607","4608","4609","4610","4611","4612","4613","4614","4615","4616","4617","4618","4619","4620","4621","4622","100001","100002","100003","100004","100005","100007","100008","100010","100015","100016","100017","100018","100019","100021","100022","100023","100030","100031","100032","100033","100034","100035","100037","100038","100039","100040","100045","100046","100047","100048","100049","100051","100052","100053","100060","100061","100062","100063","100064","100065","100067","100068","100069","100070","100075","100076","100077","100078","100079","100080","100081","100082","100083","100090","100091","100092","100093","100094","100096","100097","100098","100099","100105","100106","100107","100108","100109","100110","100111","100112","100113","100128","100129","100130","100131","100132","100133","100134","100135","100136","100137","100138","100139","100140","100141","100142","100143","100144","100145","100146","100147","100148","100149","100150","100151","100152","100153","100154","100156","100157","100158","100159","100160","100161","100162","100163","100164","100165","100166","100167","100168","100169","100170","100171","100172","100174","100175","100176","100178","100179","100180","100181","100182","100183","100184","100185","100186","100187","100188","100189","100190","100192","100193","100194","100195","100196","100197","100198","100199","100200","100201","100202","100203","100204","100205","100206","100207","100208","100209","100210","100211","100212","100213","100214","100215","100216","100217","100218","100219","100220","100221","100222","100223","100224","100225","100226","100227","100228","100229","100230","100231","100232","100233","100234","100235","100236","100237","100238","100239","100240","100241","100242","100243","100244","100245","100246","100247","100248","100249","100250","100251","100252","100253","100254","100255","100256","100257","100258","100259","100260","100261","100262","100263","100264","100265","100266","100267","100268","100269","100270","100271","100272","100273","100274","100275","100276","100277","100278","100279","100280","100281","100282","100283","100284","100285","100286","100287","100288","100289","100290","100291","100292","100293","100294","100295","100296","100297","100298","100299","100300","100301","100302","100303","100304","100305","100306","100307","100308","100309","100310","100311","100312","100313","100314","100315","100316","100317","100318","100319","100320","100321","100322","100323","100324","100325","100326","100327","100328","100329","100330","100331","100332","100333","100334","100335","100336","100337","100338","100339","100340","100341","100342","100343","100344","100345","100346","jobs","buffLineColors","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","buffLineNames","actionsByType","ActionType","PROGRESSION","CP_RECOVERY","OTHER","QUALITY","REPAIR","BUFF","SPECIALTY","map","type","CraftingActionsRegistry","getActionsByType","allActions","ALL_ACTIONS","act","action","JobButton","styled","div","withConfig","displayName","componentId","_ref","active","css","_templateObject","GenericBar","_ref2","color","_templateObject2","rotate","keyframes","_templateObject3","ActionBar","BuffLines","IQLine","BuffLineTooltip","DraggedImage","img","_ref3","isDragged","_templateObject4","_ref4","isFailed","_templateObject5","ChartBar","ScrollingBar","ActionTypeSet","ActionPalletteImage","_ref5","_templateObject6","ShareInput","input","SimComponent","props","location","_useState","useState","_useState2","Object","slicedToArray","recipeRLvl","set_recipeRLvl","_useState3","_useState4","recipeLvl","set_recipeLvl","_useState5","_useState6","recipeProg","set_recipeProg","_useState7","_useState8","recipeQual","set_recipeQual","_useState9","_useState10","recipeDur","set_recipeDur","_useState11","_useState12","recipeSugCraft","set_recipeSugCraft","_useState13","_useState14","recipeSugControl","set_recipeSugControl","_useState15","_useState16","jobId","set_jobId","_useState17","_useState18","jobCraftsmanship","set_jobCraftsmanship","_useState19","_useState20","jobControl","set_jobControl","_useState21","_useState22","jobCP","set_jobCP","_useState23","_useState24","jobLvl","set_jobLvl","_useState25","_useState26","jobIsSpecialist","set_jobIsSpecialist","stats","CrafterStats","_useState27","progress","quality","cp","durability","buffs","_useState28","defaultState","set_defaultState","_useState29","_useState30","actions","set_actions","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","scrollingBarRef","useRef","undefined","useEffect","values","queryString","parse","search","arrayFormat","rrl","parseInt","isNaN","rl","rp","rq","rd","df","objectSpread","rscr","rsco","ji","jcr","jco","jcp","jl","jis","yact","passedActions","split","actIndex","zact","acts","createFromIds","_useState37","job","lvl","rlvl","materialQualityFactor","id","suggestedControl","suggestedCraftsmanship","quickSynth","ingredients","hq","_useState38","testRecipe","set_testRecipe","tr","_useState39","_useState40","states","set_states","_useState41","_useState42","statedActions","set_statedActions","_useState43","_useState44","successStates","set_successStates","length","x","allGood","Math","max","newStatedActions","slice","newStates","y","sim","Simulation","run","progression","availableCP","toConsumableArray","newSuccessStates","steps","step","success","_useState45","_useState46","draggingIndex","set_draggingIndex","_useState47","_useState48","draggedOverIndex","set_draggedOverIndex","clickJobAction","index","concat","clickJobButton","latestState","_useState49","_useState50","newActionDrag","set_newActionDrag","OnActionDragEnd","OnActionDragStart","e","OnActionDragOver","preventDefault","OnActionDrop","newActions","targetIndex","splice","draggedAction","OnNewActionDragEnd","_useState51","_useState52","shareUrl","set_shareUrl","focusShareField","currentTarget","setSelectionRange","value","_useState53","_useState54","exportString","set_exportString","buffLines","forEach","state","stateIndex","filter","buff","buffIndex","filteredBuffs","thisBuff","existingBuff","find","b","buffId","points","push","startX","buffLineThickness","startY","endX","endY","maxBuffHeight","apply","st","_useState55","_useState56","buffLineTooltip","set_buffLineTooltip","_useState57","_useState58","buffLineTooltipPosition","set_buffLineTooltipPosition","hideBuffLineTooltip","IQStacks","IQ","stacks","IQLines","start","stack","stackIndex","end","react_default","a","createElement","style","display","width","min","ref","el","current","verticalAlign","background","height","xmlns","d","others","progressEnd","progressStart","join","fill","bottom","qualityEnd","qualityStart","top","Sim_IQLine","IQStack","IQStackIndex","leaves","j","leafColor","key","stroke","leaf","leafIndex","xx","yy","IQLineIndex","gap","strokeWidth","hasBorderLeft","alt","serializeRotation","title","getId","draggable","onDragStart","onDragOver","onDragEnd","onDrop","src","process","onClick","borderLeft","borderRight","onMouseMove","clientX","clientY","rect","getBoundingClientRect","left","buffLine","point","pointIndex","pointD","prevPoint","buffLineSpacing","onMouseOver","onMouseOut","durEnd","durStart","cpEnd","cpStart","url","window","href","yacts","matchingAction","ac","indexOf","newShareUrl","stringify","readOnly","newExportString","exportToCraftOpt","importString","prompt","importFromCraftOpt","JSON","n","i","someActions","typeIndex","requestAnimationFrame","scrollTo","behavior","scrollWidth","Wrapper","FootNote","App","react_router_dom","react_router","path","component","Sim","target","rel","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kRAAaA,EAAQ,CACnBC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,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","file":"static/js/main.fe043780.chunk.js","sourcesContent":["export const Icons = {\n  \"244\": \"/i/001000/001953.png\",\n  \"245\": \"/i/001000/001953.png\",\n  \"246\": \"/i/001000/001953.png\",\n  \"247\": \"/i/001000/001953.png\",\n  \"248\": \"/i/001000/001953.png\",\n  \"249\": \"/i/001000/001953.png\",\n  \"250\": \"/i/001000/001953.png\",\n  \"251\": \"/i/001000/001953.png\",\n  \"252\": \"/i/001000/001951.png\",\n  \"253\": \"/i/001000/001951.png\",\n  \"254\": \"/i/001000/001951.png\",\n  \"255\": \"/i/001000/001951.png\",\n  \"256\": \"/i/001000/001951.png\",\n  \"257\": \"/i/001000/001951.png\",\n  \"258\": \"/i/001000/001951.png\",\n  \"259\": \"/i/001000/001951.png\",\n  \"260\": \"/i/001000/001955.png\",\n  \"261\": \"/i/001000/001955.png\",\n  \"262\": \"/i/001000/001955.png\",\n  \"263\": \"/i/001000/001955.png\",\n  \"264\": \"/i/001000/001955.png\",\n  \"265\": \"/i/001000/001955.png\",\n  \"266\": \"/i/001000/001955.png\",\n  \"267\": \"/i/001000/001955.png\",\n  \"276\": \"/i/001000/001506.png\",\n  \"277\": \"/i/001000/001556.png\",\n  \"278\": \"/i/001000/001668.png\",\n  \"279\": \"/i/001000/001706.png\",\n  \"283\": \"/i/001000/001571.png\",\n  \"284\": \"/i/001000/001672.png\",\n  \"285\": \"/i/001000/001721.png\",\n  \"286\": \"/i/001000/001822.png\",\n  \"287\": \"/i/001000/001872.png\",\n  \"4574\": \"/i/001000/001971.png\",\n  \"4575\": \"/i/001000/001971.png\",\n  \"4576\": \"/i/001000/001971.png\",\n  \"4577\": \"/i/001000/001971.png\",\n  \"4578\": \"/i/001000/001971.png\",\n  \"4579\": \"/i/001000/001971.png\",\n  \"4580\": \"/i/001000/001971.png\",\n  \"4581\": \"/i/001000/001971.png\",\n  \"4597\": \"/i/001000/001979.png\",\n  \"4598\": \"/i/001000/001979.png\",\n  \"4599\": \"/i/001000/001979.png\",\n  \"4600\": \"/i/001000/001979.png\",\n  \"4601\": \"/i/001000/001979.png\",\n  \"4602\": \"/i/001000/001979.png\",\n  \"4603\": \"/i/001000/001979.png\",\n  \"4604\": \"/i/001000/001979.png\",\n  \"4607\": \"/i/001000/001974.png\",\n  \"4608\": \"/i/001000/001974.png\",\n  \"4609\": \"/i/001000/001974.png\",\n  \"4610\": \"/i/001000/001974.png\",\n  \"4611\": \"/i/001000/001974.png\",\n  \"4612\": \"/i/001000/001974.png\",\n  \"4613\": \"/i/001000/001974.png\",\n  \"4614\": \"/i/001000/001974.png\",\n  \"4615\": \"/i/001000/001978.png\",\n  \"4616\": \"/i/001000/001978.png\",\n  \"4617\": \"/i/001000/001978.png\",\n  \"4618\": \"/i/001000/001978.png\",\n  \"4619\": \"/i/001000/001978.png\",\n  \"4620\": \"/i/001000/001978.png\",\n  \"4621\": \"/i/001000/001978.png\",\n  \"4622\": \"/i/001000/001978.png\",\n  \"100001\": \"/i/001000/001501.png\",\n  \"100002\": \"/i/001000/001502.png\",\n  \"100003\": \"/i/001000/001952.png\",\n  \"100004\": \"/i/001000/001516.png\",\n  \"100005\": \"/i/001000/001956.png\",\n  \"100007\": \"/i/001000/001515.png\",\n  \"100008\": \"/i/001000/001517.png\",\n  \"100010\": \"/i/001000/001954.png\",\n  \"100015\": \"/i/001000/001551.png\",\n  \"100016\": \"/i/001000/001552.png\",\n  \"100017\": \"/i/001000/001952.png\",\n  \"100018\": \"/i/001000/001566.png\",\n  \"100019\": \"/i/001000/001956.png\",\n  \"100021\": \"/i/001000/001565.png\",\n  \"100022\": \"/i/001000/001567.png\",\n  \"100023\": \"/i/001000/001954.png\",\n  \"100030\": \"/i/001000/001601.png\",\n  \"100031\": \"/i/001000/001602.png\",\n  \"100032\": \"/i/001000/001952.png\",\n  \"100033\": \"/i/001000/001619.png\",\n  \"100034\": \"/i/001000/001616.png\",\n  \"100035\": \"/i/001000/001956.png\",\n  \"100037\": \"/i/001000/001615.png\",\n  \"100038\": \"/i/001000/001617.png\",\n  \"100039\": \"/i/001000/001622.png\",\n  \"100040\": \"/i/001000/001954.png\",\n  \"100045\": \"/i/001000/001701.png\",\n  \"100046\": \"/i/001000/001702.png\",\n  \"100047\": \"/i/001000/001952.png\",\n  \"100048\": \"/i/001000/001716.png\",\n  \"100049\": \"/i/001000/001956.png\",\n  \"100051\": \"/i/001000/001715.png\",\n  \"100052\": \"/i/001000/001717.png\",\n  \"100053\": \"/i/001000/001954.png\",\n  \"100060\": \"/i/001000/001751.png\",\n  \"100061\": \"/i/001000/001752.png\",\n  \"100062\": \"/i/001000/001952.png\",\n  \"100063\": \"/i/001000/001768.png\",\n  \"100064\": \"/i/001000/001765.png\",\n  \"100065\": \"/i/001000/001956.png\",\n  \"100067\": \"/i/001000/001764.png\",\n  \"100068\": \"/i/001000/001766.png\",\n  \"100069\": \"/i/001000/001771.png\",\n  \"100070\": \"/i/001000/001954.png\",\n  \"100075\": \"/i/001000/001651.png\",\n  \"100076\": \"/i/001000/001652.png\",\n  \"100077\": \"/i/001000/001952.png\",\n  \"100078\": \"/i/001000/001665.png\",\n  \"100079\": \"/i/001000/001956.png\",\n  \"100080\": \"/i/001000/001664.png\",\n  \"100081\": \"/i/001000/001666.png\",\n  \"100082\": \"/i/001000/001954.png\",\n  \"100083\": \"/i/001000/001673.png\",\n  \"100090\": \"/i/001000/001801.png\",\n  \"100091\": \"/i/001000/001802.png\",\n  \"100092\": \"/i/001000/001952.png\",\n  \"100093\": \"/i/001000/001816.png\",\n  \"100094\": \"/i/001000/001956.png\",\n  \"100096\": \"/i/001000/001815.png\",\n  \"100097\": \"/i/001000/001817.png\",\n  \"100098\": \"/i/001000/001819.png\",\n  \"100099\": \"/i/001000/001954.png\",\n  \"100105\": \"/i/001000/001851.png\",\n  \"100106\": \"/i/001000/001852.png\",\n  \"100107\": \"/i/001000/001952.png\",\n  \"100108\": \"/i/001000/001868.png\",\n  \"100109\": \"/i/001000/001865.png\",\n  \"100110\": \"/i/001000/001956.png\",\n  \"100111\": \"/i/001000/001864.png\",\n  \"100112\": \"/i/001000/001866.png\",\n  \"100113\": \"/i/001000/001954.png\",\n  \"100128\": \"/i/001000/001524.png\",\n  \"100129\": \"/i/001000/001574.png\",\n  \"100130\": \"/i/001000/001625.png\",\n  \"100131\": \"/i/001000/001676.png\",\n  \"100132\": \"/i/001000/001724.png\",\n  \"100133\": \"/i/001000/001774.png\",\n  \"100134\": \"/i/001000/001825.png\",\n  \"100135\": \"/i/001000/001875.png\",\n  \"100136\": \"/i/001000/001876.png\",\n  \"100137\": \"/i/001000/001959.png\",\n  \"100138\": \"/i/001000/001959.png\",\n  \"100139\": \"/i/001000/001959.png\",\n  \"100140\": \"/i/001000/001959.png\",\n  \"100141\": \"/i/001000/001959.png\",\n  \"100142\": \"/i/001000/001959.png\",\n  \"100143\": \"/i/001000/001959.png\",\n  \"100144\": \"/i/001000/001959.png\",\n  \"100145\": \"/i/001000/001960.png\",\n  \"100146\": \"/i/001000/001960.png\",\n  \"100147\": \"/i/001000/001960.png\",\n  \"100148\": \"/i/001000/001960.png\",\n  \"100149\": \"/i/001000/001960.png\",\n  \"100150\": \"/i/001000/001960.png\",\n  \"100151\": \"/i/001000/001960.png\",\n  \"100152\": \"/i/001000/001960.png\",\n  \"100153\": \"/i/001000/001963.png\",\n  \"100154\": \"/i/001000/001963.png\",\n  \"100156\": \"/i/001000/001963.png\",\n  \"100157\": \"/i/001000/001963.png\",\n  \"100158\": \"/i/001000/001963.png\",\n  \"100159\": \"/i/001000/001963.png\",\n  \"100160\": \"/i/001000/001963.png\",\n  \"100161\": \"/i/001000/001964.png\",\n  \"100162\": \"/i/001000/001964.png\",\n  \"100163\": \"/i/001000/001964.png\",\n  \"100164\": \"/i/001000/001964.png\",\n  \"100165\": \"/i/001000/001964.png\",\n  \"100166\": \"/i/001000/001964.png\",\n  \"100167\": \"/i/001000/001964.png\",\n  \"100168\": \"/i/001000/001964.png\",\n  \"100169\": \"/i/001000/001962.png\",\n  \"100170\": \"/i/001000/001962.png\",\n  \"100171\": \"/i/001000/001962.png\",\n  \"100172\": \"/i/001000/001962.png\",\n  \"100174\": \"/i/001000/001962.png\",\n  \"100175\": \"/i/001000/001962.png\",\n  \"100176\": \"/i/001000/001962.png\",\n  \"100178\": \"/i/001000/001677.png\",\n  \"100179\": \"/i/001000/001969.png\",\n  \"100180\": \"/i/001000/001969.png\",\n  \"100181\": \"/i/001000/001969.png\",\n  \"100182\": \"/i/001000/001969.png\",\n  \"100183\": \"/i/001000/001969.png\",\n  \"100184\": \"/i/001000/001969.png\",\n  \"100185\": \"/i/001000/001969.png\",\n  \"100186\": \"/i/001000/001969.png\",\n  \"100187\": \"/i/001000/001961.png\",\n  \"100188\": \"/i/001000/001961.png\",\n  \"100189\": \"/i/001000/001961.png\",\n  \"100190\": \"/i/001000/001961.png\",\n  \"100192\": \"/i/001000/001961.png\",\n  \"100193\": \"/i/001000/001961.png\",\n  \"100194\": \"/i/001000/001961.png\",\n  \"100195\": \"/i/001000/001973.png\",\n  \"100196\": \"/i/001000/001973.png\",\n  \"100197\": \"/i/001000/001973.png\",\n  \"100198\": \"/i/001000/001973.png\",\n  \"100199\": \"/i/001000/001973.png\",\n  \"100200\": \"/i/001000/001973.png\",\n  \"100201\": \"/i/001000/001973.png\",\n  \"100202\": \"/i/001000/001973.png\",\n  \"100203\": \"/i/001000/001972.png\",\n  \"100204\": \"/i/001000/001972.png\",\n  \"100205\": \"/i/001000/001972.png\",\n  \"100206\": \"/i/001000/001972.png\",\n  \"100207\": \"/i/001000/001972.png\",\n  \"100208\": \"/i/001000/001972.png\",\n  \"100209\": \"/i/001000/001972.png\",\n  \"100210\": \"/i/001000/001972.png\",\n  \"100211\": \"/i/001000/001970.png\",\n  \"100212\": \"/i/001000/001970.png\",\n  \"100213\": \"/i/001000/001970.png\",\n  \"100214\": \"/i/001000/001970.png\",\n  \"100215\": \"/i/001000/001970.png\",\n  \"100216\": \"/i/001000/001970.png\",\n  \"100217\": \"/i/001000/001970.png\",\n  \"100218\": \"/i/001000/001970.png\",\n  \"100219\": \"/i/001000/001534.png\",\n  \"100220\": \"/i/001000/001583.png\",\n  \"100221\": \"/i/001000/001634.png\",\n  \"100222\": \"/i/001000/001685.png\",\n  \"100223\": \"/i/001000/001733.png\",\n  \"100224\": \"/i/001000/001783.png\",\n  \"100225\": \"/i/001000/001834.png\",\n  \"100226\": \"/i/001000/001885.png\",\n  \"100227\": \"/i/001000/001535.png\",\n  \"100228\": \"/i/001000/001584.png\",\n  \"100229\": \"/i/001000/001635.png\",\n  \"100230\": \"/i/001000/001686.png\",\n  \"100231\": \"/i/001000/001734.png\",\n  \"100232\": \"/i/001000/001784.png\",\n  \"100233\": \"/i/001000/001835.png\",\n  \"100234\": \"/i/001000/001886.png\",\n  \"100235\": \"/i/001000/001536.png\",\n  \"100236\": \"/i/001000/001585.png\",\n  \"100237\": \"/i/001000/001636.png\",\n  \"100238\": \"/i/001000/001687.png\",\n  \"100239\": \"/i/001000/001735.png\",\n  \"100240\": \"/i/001000/001785.png\",\n  \"100241\": \"/i/001000/001836.png\",\n  \"100242\": \"/i/001000/001887.png\",\n  \"100243\": \"/i/001000/001537.png\",\n  \"100244\": \"/i/001000/001586.png\",\n  \"100245\": \"/i/001000/001637.png\",\n  \"100246\": \"/i/001000/001688.png\",\n  \"100247\": \"/i/001000/001736.png\",\n  \"100248\": \"/i/001000/001786.png\",\n  \"100249\": \"/i/001000/001837.png\",\n  \"100250\": \"/i/001000/001888.png\",\n  \"100251\": \"/i/001000/001965.png\",\n  \"100252\": \"/i/001000/001965.png\",\n  \"100253\": \"/i/001000/001965.png\",\n  \"100254\": \"/i/001000/001965.png\",\n  \"100255\": \"/i/001000/001965.png\",\n  \"100256\": \"/i/001000/001965.png\",\n  \"100257\": \"/i/001000/001965.png\",\n  \"100258\": \"/i/001000/001965.png\",\n  \"100259\": \"/i/001000/001966.png\",\n  \"100260\": \"/i/001000/001966.png\",\n  \"100261\": \"/i/001000/001966.png\",\n  \"100262\": \"/i/001000/001966.png\",\n  \"100263\": \"/i/001000/001966.png\",\n  \"100264\": \"/i/001000/001966.png\",\n  \"100265\": \"/i/001000/001966.png\",\n  \"100266\": \"/i/001000/001966.png\",\n  \"100267\": \"/i/001000/001967.png\",\n  \"100268\": \"/i/001000/001967.png\",\n  \"100269\": \"/i/001000/001967.png\",\n  \"100270\": \"/i/001000/001967.png\",\n  \"100271\": \"/i/001000/001967.png\",\n  \"100272\": \"/i/001000/001967.png\",\n  \"100273\": \"/i/001000/001967.png\",\n  \"100274\": \"/i/001000/001967.png\",\n  \"100275\": \"/i/001000/001968.png\",\n  \"100276\": \"/i/001000/001968.png\",\n  \"100277\": \"/i/001000/001968.png\",\n  \"100278\": \"/i/001000/001968.png\",\n  \"100279\": \"/i/001000/001968.png\",\n  \"100280\": \"/i/001000/001968.png\",\n  \"100281\": \"/i/001000/001968.png\",\n  \"100282\": \"/i/001000/001968.png\",\n  \"100283\": \"/i/001000/001981.png\",\n  \"100284\": \"/i/001000/001981.png\",\n  \"100285\": \"/i/001000/001981.png\",\n  \"100286\": \"/i/001000/001981.png\",\n  \"100287\": \"/i/001000/001981.png\",\n  \"100288\": \"/i/001000/001981.png\",\n  \"100289\": \"/i/001000/001981.png\",\n  \"100290\": \"/i/001000/001981.png\",\n  \"100291\": \"/i/001000/001980.png\",\n  \"100292\": \"/i/001000/001980.png\",\n  \"100293\": \"/i/001000/001980.png\",\n  \"100294\": \"/i/001000/001980.png\",\n  \"100295\": \"/i/001000/001980.png\",\n  \"100296\": \"/i/001000/001980.png\",\n  \"100297\": \"/i/001000/001980.png\",\n  \"100298\": \"/i/001000/001980.png\",\n  \"100299\": \"/i/001000/001507.png\",\n  \"100300\": \"/i/001000/001557.png\",\n  \"100301\": \"/i/001000/001607.png\",\n  \"100302\": \"/i/001000/001657.png\",\n  \"100303\": \"/i/001000/001707.png\",\n  \"100304\": \"/i/001000/001757.png\",\n  \"100305\": \"/i/001000/001807.png\",\n  \"100306\": \"/i/001000/001857.png\",\n  \"100307\": \"/i/001000/001976.png\",\n  \"100308\": \"/i/001000/001976.png\",\n  \"100309\": \"/i/001000/001976.png\",\n  \"100310\": \"/i/001000/001976.png\",\n  \"100311\": \"/i/001000/001976.png\",\n  \"100312\": \"/i/001000/001976.png\",\n  \"100313\": \"/i/001000/001976.png\",\n  \"100314\": \"/i/001000/001976.png\",\n  \"100315\": \"/i/001000/001514.png\",\n  \"100316\": \"/i/001000/001564.png\",\n  \"100317\": \"/i/001000/001614.png\",\n  \"100318\": \"/i/001000/001663.png\",\n  \"100319\": \"/i/001000/001714.png\",\n  \"100320\": \"/i/001000/001763.png\",\n  \"100321\": \"/i/001000/001814.png\",\n  \"100322\": \"/i/001000/001863.png\",\n  \"100323\": \"/i/001000/001503.png\",\n  \"100324\": \"/i/001000/001553.png\",\n  \"100325\": \"/i/001000/001603.png\",\n  \"100326\": \"/i/001000/001653.png\",\n  \"100327\": \"/i/001000/001703.png\",\n  \"100328\": \"/i/001000/001753.png\",\n  \"100329\": \"/i/001000/001803.png\",\n  \"100330\": \"/i/001000/001853.png\",\n  \"100331\": \"/i/001000/001977.png\",\n  \"100332\": \"/i/001000/001977.png\",\n  \"100333\": \"/i/001000/001977.png\",\n  \"100334\": \"/i/001000/001977.png\",\n  \"100335\": \"/i/001000/001977.png\",\n  \"100336\": \"/i/001000/001977.png\",\n  \"100337\": \"/i/001000/001977.png\",\n  \"100338\": \"/i/001000/001977.png\",\n  \"100339\": \"/i/001000/001975.png\",\n  \"100340\": \"/i/001000/001975.png\",\n  \"100341\": \"/i/001000/001975.png\",\n  \"100342\": \"/i/001000/001975.png\",\n  \"100343\": \"/i/001000/001975.png\",\n  \"100344\": \"/i/001000/001975.png\",\n  \"100345\": \"/i/001000/001975.png\",\n  \"100346\": \"/i/001000/001975.png\"\n}","import React, { useEffect, useState, useRef } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport queryString from 'query-string'\n\nimport styled, { css, keyframes } from 'styled-components/macro';\n\nimport {\n  ActionType,\n  CraftingAction,\n  CraftingActionsRegistry,\n  Simulation,\n  Craft,\n  CrafterStats,\n  EffectiveBuff,\n} from '@ffxiv-teamcraft/simulator';\n\nimport { Icons } from './Icons';\n\nconst jobs = [\n  '', '', '', '', '', '', '', '',\n  'CRP',\n  'BSM',\n  'ARM',\n  'GSM',\n  'LTW',\n  'WVR',\n  'ALC',\n  'CUL'\n];\n\nconst buffLineColors: { [key: number]: string } = {\n  /*\n    INNER_QUIET = 0,\n    STEADY_HAND = 1,\n    STEADY_HAND_II = 2,\n    WASTE_NOT = 3,\n    WASTE_NOT_II = 4,\n    STROKE_OF_GENIUS = 5,\n    INITIAL_PREPARATIONS = 6,\n    COMFORT_ZONE = 7,\n    WHISTLE_WHILE_YOU_WORK = 8,\n    HEART_OF_CRAFTER = 9,\n    MANIPULATION = 10,\n    MANIPULATION_II = 11,\n    GREAT_STRIDES = 12,\n    INNOVATION = 13,\n    INGENUITY = 14,\n    INGENUITY_II = 15,\n    MAKERS_MARK = 16,\n    NAME_OF_THE_ELEMENTS = 17,\n    RECLAIM = 18,\n    REUSE = 19\n  */\n  0: '#deae6d',\n  1: '#ab6e59', \n  2: '#ab6e59', \n  3: '#6a6a69',\n  4: '#6a6a69',\n  5: '#6d7d69',\n  6: '#1777da',\n  7: '#db75ed',\n  8: '#e1be4d',\n  9: '#6ee626',\n  10: '#68ccac',\n  11: '#68ccac',\n  12: '#c35289',\n  13: '#2675c5',\n  14: '#c5a666',\n  15: '#c5a666',\n  16: '#2b7d5c',\n  17: '#3bac4a',\n  18: '#72aae7',\n  19: '#f7de63',\n};\nconst buffLineNames: { [key: number]: string } = {\n  0: 'Inner Quiet',\n  1: 'Steady Hand', \n  2: 'Steady Hand II', \n  3: 'Waste Not',\n  4: 'Waste Not II',\n  5: 'Stroke Of Genius',\n  6: 'Initial Preparations',\n  7: 'Comfort Zone',\n  8: 'Whistle While You Work',\n  9: 'Heart Of Crafter',\n  10: 'Manipulation',\n  11: 'Manipulation II',\n  12: 'Great Strides',\n  13: 'Innovation',\n  14: 'Ingenuity',\n  15: 'Ingenuity II',\n  16: 'Maker\\'s Mark',\n  17: 'Name Of The Elements',\n  18: 'Reclaim',\n  19: 'Reuse',\n};\n\nconst actionsByType = [\n  ActionType.PROGRESSION,\n  ActionType.CP_RECOVERY,\n  ActionType.OTHER,\n  ActionType.QUALITY,\n  ActionType.REPAIR,\n  ActionType.BUFF,\n  ActionType.SPECIALTY,\n].map(type => CraftingActionsRegistry.getActionsByType(type));\nconst allActions = CraftingActionsRegistry.ALL_ACTIONS.map(act => act.action);\n\ninterface JobButtonProps {\n  active?: boolean\n}\nconst JobButton = styled.div`\n  padding: 4px 8px;\n  display: inline-block;\n  cursor: pointer;\n  background: #f7f7f7;\n  border-radius: 4px;\n  box-sizing: border-box;\n  margin: 4px;\n  border: solid 1px transparent;\n  margin-top: 20px;\n\n  ${({ active }: JobButtonProps) => active && css`\n  border: solid 1px #ccc;\n  `}\n\n  &:hover {\n    background: #eee;\n  }\n\n  &:active {\n    transform: translateY(1px);\n    user-select: none;\n  }\n`;\n\ninterface GenericBarProps {\n  color?: string\n}\nconst GenericBar = styled.div`\n  width: 300px;\n  height: 20px;\n  background: #eee;\n  margin: 10px;\n  font-size: 10px;\n  line-height: 20px;\n  white-space: nowrap;\n\n  > div, span {\n    vertical-align: middle;\n  }\n\n  > span {\n    margin: 0 4px;\n  }\n\n  > div {\n    height: 100%;\n    width: 100%;\n    transition: width 0.3s;\n    background: #ccc;\n    display: inline-block;\n  }\n\n  ${({ color }: GenericBarProps) => color && css`\n    > div {\n      background: ${color};\n    }\n  `}\n`;\n\nconst rotate = keyframes`\n  from {\n    transform: translateY(-5px) scale(1.15) rotate(-4deg);\n  }\n\n  to {\n    transform: translateY(-5px) scale(1.15) rotate(3deg);\n  }\n`;\nconst ActionBar = styled.div`\n  padding: 10px 10px;\n  height: 40px;\n  white-space: nowrap;\n\n  > img, > div {\n    vertical-align: middle;\n  }\n\n  &::before {\n    content: '';\n    display: inline-block;\n    vertical-align: middle;\n    height: 40px;\n  }\n\n  > img {\n    cursor: grab;\n    transition: border 0.1s linear, transform 0.1s;\n\n    &:hover {\n      transform: translateY(-2px) scale(1.05);\n    }\n\n    &:active {\n      cursor: grabbing;\n    }\n  }\n`;\n\nconst BuffLines = styled.div`\n  padding: 0 10px;\n  position: relative;\n  top: -10px;\n\n  > svg {\n    min-height: 15px;\n\n    path {\n      cursor: pointer;\n      &:hover {\n        stroke: black;\n      }\n    }\n  }\n`;\nconst IQLine = styled.div`\n  padding: 0 10px;\n  position: relative;\n  bottom: -10px;\n\n  > svg {\n    height: 40px;\n    display: block;\n\n    > path {\n      cursor: pointer;\n      stroke: #6e9a1b;\n    }\n  }\n`;\nconst BuffLineTooltip = styled.div`\n  background: #fff;\n  padding: 10px 20px;\n  border-radius: 4px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);\n  position: absolute;\n  pointer-events: none;\n  z-index: 2;\n`;\n\ninterface DraggedImageProps {\n  isDragged?: boolean\n  isFailed?: boolean\n}\nconst DraggedImage = styled.img`\n  border: solid 0px transparent;\n  ${({ isDragged }: DraggedImageProps) => isDragged && css`\n    animation: ${rotate} 1s infinite alternate;\n    opacity: 0.6;\n  `}\n  ${({ isFailed }: DraggedImageProps) => isFailed && css`\n    opacity: 0.2;\n  `}\n`;\n\nconst ChartBar = styled.div`\n  height: 40px;\n  padding: 0 10px;\n  position: relative;\n  white-space: nowrap;\n\n  > svg {\n    transition: width 0.2s;\n  }\n\n  > span {\n    font-size: 8px;\n    position: relative;\n    padding: 0 4px;\n    transform: translateY(-50%);\n  }\n\n  & + & > svg {\n    border-top: solid 1px #000;\n  }\n`;\n\nconst ScrollingBar = styled.div`\n  overflow: auto;\n  overflow-y: hidden;\n  overflow-x: auto;\n  padding: 1vw;\n  padding-top: 12px;\n  position: sticky;\n  top: 0;\n  background: #fff;\n  box-shadow: 0 3px 3px rgba(0, 0, 0, 0.2);\n  z-index: 3;\n`;\n\nconst SuccessBox = styled.div`\n  padding: 10px;\n`;\n\nconst ActionTypeSet = styled.div`\n  display: inline-block;\n  padding: 4px 8px;\n  margin: 4px;\n  background: #f5f5f5;\n  border-radius: 4px;\n`;\n\ninterface ActionPalletteImage {\n  isDragged?: boolean\n}\nconst ActionPalletteImage = styled.img`\n  transition: transform 0.5s;\n  cursor: pointer;\n  transition: transform 0.2s;\n  ${({ isDragged }: DraggedImageProps) => isDragged && css`\n    &, &:active {\n      transition: transform 0.1s;\n      transform: scale(0) !important;\n    }\n  `}\n\n  &:hover {\n    transform: scale(0.95);\n  }\n\n  &:active {\n    transform: scale(0.9);\n    transition-duration: 0.1s;\n  }\n`;\n\nconst ShareInput = styled.input`\n  width: 50vw;\n  padding: 4px 8px;\n  border-radius: 4px;\n  border: solid 1px #eee;\n`;\n\ninterface CraftState {\n  progress: number\n  quality: number\n  cp: number\n  durability: number\n  buffs: EffectiveBuff[]\n}\n\nconst SimComponent = (props: RouteComponentProps) => {\n  const { location } = props;\n\n  // recipe parameters\n  const [recipeRLvl, set_recipeRLvl] = useState(430);\n  const [recipeLvl, set_recipeLvl] = useState(80);\n  const [recipeProg, set_recipeProg] = useState(1900);\n  const [recipeQual, set_recipeQual] = useState(15000);\n  const [recipeDur, set_recipeDur] = useState(80);\n  const [recipeSugCraft, set_recipeSugCraft] = useState(1866);\n  const [recipeSugControl, set_recipeSugControl] = useState(1733);\n\n  // player parameters\n  const [jobId, set_jobId] = useState(8);\n  const [jobCraftsmanship, set_jobCraftsmanship] = useState(1800);\n  const [jobControl, set_jobControl] = useState(1800);\n  const [jobCP, set_jobCP] = useState(489);\n  const [jobLvl, set_jobLvl] = useState(80);\n  const [jobIsSpecialist, set_jobIsSpecialist] = useState(true);\n  const stats = new CrafterStats(\n    jobId,\n    jobCraftsmanship,\n    jobControl,\n    jobCP,\n    jobIsSpecialist,\n    jobLvl,\n    [jobLvl, jobLvl, jobLvl, jobLvl, jobLvl, jobLvl, jobLvl, jobLvl]\n  );\n\n  const [defaultState, set_defaultState] = useState({\n    progress: 0,\n    quality: 0,\n    cp: stats.cp,\n    durability: 80,\n    buffs: [] as EffectiveBuff[]\n  });\n\n  const [actions, set_actions] = useState([] as CraftingAction[]);\n  const [craftsmanship, set_craftsmanship] = useState(1800);\n  const [control, set_control] = useState(1800);\n  const [cp, set_cp] = useState(defaultState.cp);\n\n  const scrollingBarRef = useRef(undefined as undefined | HTMLDivElement);\n\n  useEffect(() => {\n    const values = queryString.parse(location.search, {\n      arrayFormat: 'comma'\n    });\n\n    // recipe stuff\n    const rrl = parseInt(values.rrl + '');\n    if (!isNaN(rrl)) {\n      set_recipeRLvl(rrl);\n    }\n    const rl = parseInt(values.rl + '');\n    if (!isNaN(rl)) {\n      set_recipeLvl(rl);\n    }\n    const rp = parseInt(values.rp + '');\n    if (!isNaN(rp)) {\n      set_recipeProg(rp);\n    }\n    const rq = parseInt(values.rq + '');\n    if (!isNaN(rq)) {\n      set_recipeQual(rq);\n    }\n    const rd = parseInt(values.rd + '');\n    if (!isNaN(rd)) {\n      set_recipeDur(rd);\n      set_defaultState(df => {\n        return {\n          ...df,\n          durability: rd\n        };\n      });\n    }\n    const rscr = parseInt(values.rscr + '');\n    if (!isNaN(rscr)) {\n      set_recipeSugCraft(rscr);\n    }\n    const rsco = parseInt(values.rsco + '');\n    if (!isNaN(rsco)) {\n      set_recipeSugControl(rsco);\n    }\n\n    // player stuff\n    const ji = parseInt(values.ji + '');\n    if (!isNaN(ji)) {\n      set_jobId(ji);\n    }\n    const jcr = parseInt(values.jcr + '');\n    if (!isNaN(jcr)) {\n      set_jobCraftsmanship(jcr);\n    }\n    const jco = parseInt(values.jco + '');\n    if (!isNaN(jco)) {\n      set_jobControl(jco);\n    }\n    const jcp = parseInt(values.jcp + '');\n    if (!isNaN(jcp)) {\n      set_jobCP(jcp);\n    }\n    const jl = parseInt(values.jl + '');\n    if (!isNaN(jl)) {\n      set_jobLvl(jl);\n    }\n    const jis = parseInt(values.jis + '') ;\n    if (!isNaN(jis)) {\n      set_jobIsSpecialist(jis === 1);\n    }\n    if (values && values.yact) {\n      const passedActions = (values.yact + '').split(',').map(actIndex => {\n        return allActions[parseInt(actIndex)];\n      });\n      set_actions(passedActions);\n    } else if (values && values.zact) {\n      const acts = (values.zact + '').split(',');\n      const passedActions = CraftingActionsRegistry.createFromIds(acts.map(act => parseInt(act)));\n      set_actions(passedActions);\n    }\n  }, [location.search]);\n\n  const [testRecipe, set_testRecipe] = useState({\n    job: jobId,\n    lvl: jobLvl,\n    durability: recipeDur,\n    progress: recipeProg,\n    quality: recipeQual,\n    rlvl: recipeRLvl,\n    materialQualityFactor: 75,\n    id: '0',\n    suggestedControl: 1733,\n    suggestedCraftsmanship: 1866,\n    quickSynth: 1,\n    ingredients: [],\n    hq: 1,\n  } as Craft);\n  useEffect(() => {\n    set_testRecipe(tr => {\n      return {\n        ...tr,\n        job: jobId,\n        lvl: jobLvl,\n        durability: recipeDur,\n        progress: recipeProg,\n        quality: recipeQual,\n        rlvl: recipeRLvl,\n      };\n    });\n  }, [\n    recipeDur,\n    recipeProg,\n    recipeQual,\n    recipeLvl,\n    recipeRLvl,\n    jobId,\n    jobLvl,\n  ])\n\n  const [states, set_states] = useState([defaultState]);\n  const [statedActions, set_statedActions] = useState([] as CraftingAction[]);\n  const [successStates, set_successStates] = useState([] as boolean[]);\n\n  useEffect(() => {\n    if (actions.length < 1) {\n      if (statedActions.length > 0) {\n        set_statedActions([]);\n      }\n      if (states.length !== 1 && states[0] !== defaultState) {\n        set_states([defaultState]);\n      }\n      return;\n    }\n    // find how many actions match the saved one\n    let x;\n    let allGood = true;\n    for (x = 0; x < Math.max(actions.length, statedActions.length); x++) {\n      if (actions[x] !== statedActions[x]) {\n        allGood = false;\n        break;\n      }\n    }\n    // fix simulated data starting from step x\n    const newStatedActions = statedActions.slice(0, x);\n    const newStates = states.slice(0, x + 1);\n    if (allGood) {\n      return;\n    }\n    for (let y = x; y < actions.length; y++) {\n      newStatedActions[y] = actions[y];\n      const sim = new Simulation(\n        testRecipe,\n        newStatedActions,\n        stats,\n      );\n      sim.run(true);\n      newStates[y + 1] = {\n        progress: sim.progression,\n        quality: sim.quality,\n        cp: sim.availableCP,\n        durability: sim.durability,\n        buffs: [...sim.buffs]\n      };\n\n      if (y === actions.length - 1) {\n        const newSuccessStates = sim.steps.map(step => step.success === true);\n        set_successStates(newSuccessStates);\n      }\n    }\n    set_statedActions(newStatedActions);\n    set_states(newStates);\n  }, [\n    actions,\n    defaultState,\n    statedActions,\n    states,\n    stats,\n    testRecipe,\n  ]);\n\n  const clickAction = (action: CraftingAction) => {\n    return () => {\n      requestAnimationFrame(() => {\n        if (scrollingBarRef.current) {\n          scrollingBarRef.current.scrollTo({\n            behavior: 'smooth',\n            left: scrollingBarRef.current.scrollWidth\n          });\n        }\n      });\n      set_actions([...actions, action]);\n    };\n  };\n\n\n  const [draggingIndex, set_draggingIndex] = useState(undefined as undefined | number);\n  const [draggedOverIndex, set_draggedOverIndex] = useState(undefined as undefined | number);\n\n  const clickJobAction = (index: number) => {\n    return () => {\n      set_actions([\n        ...actions.slice(0, index),\n        ...actions.slice(index + 1)\n      ]);\n    };\n  };\n\n  const clickJobButton = (jobId: number) => {\n    return () => {\n      set_jobId(jobId);\n    };\n  };\n\n  const clearActions = () => {\n    set_actions([]);\n  };\n\n  const latestState = states[states.length - 1];\n\n  const [newActionDrag, set_newActionDrag] = useState(undefined as undefined | CraftingAction);\n  const OnActionDragEnd = () => {\n    set_newActionDrag(undefined);\n    set_draggedOverIndex(undefined);\n    set_draggingIndex(undefined);\n  };\n  const OnActionDragStart = (index: number) => {\n    return (e: React.DragEvent) => {\n      set_draggingIndex(index);\n    };\n  };\n  const OnActionDragOver = (index: number) => {\n    return (e: React.DragEvent) => {\n      e.preventDefault();\n      set_draggedOverIndex(index);\n    };\n  };\n  const OnActionDrop = (index: number) => {\n    return (e: React.DragEvent) => {\n      e.preventDefault();\n      set_newActionDrag(undefined);\n      set_draggedOverIndex(undefined);\n      set_draggingIndex(undefined);\n      if (newActionDrag) {\n        const newActions = [...actions];\n        const targetIndex = index;\n        newActions.splice(targetIndex, 0, newActionDrag);\n        set_actions(newActions);\n        return;\n      }\n      if (typeof draggingIndex === 'undefined' || draggingIndex === index) {\n        return;\n      }\n      const newActions = [...actions];\n      const draggedAction = newActions.splice(draggingIndex, 1)[0];\n      const targetIndex = index;\n      newActions.splice(targetIndex, 0, draggedAction);\n      set_actions(newActions);\n    };\n  };\n\n  const OnNewActionDragStart = (act: CraftingAction) => {\n    return (e: React.DragEvent) => {\n      set_newActionDrag(act);\n    };\n  };\n  const OnNewActionDragEnd = () => {\n    set_newActionDrag(undefined);\n    set_draggedOverIndex(undefined);\n    set_draggingIndex(undefined);\n  };\n\n  const [shareUrl, set_shareUrl] = useState('');\n  const showShareUrl = () => {\n    const url = window.location.href.split('?')[0];\n    const acts = actions.map(a => a.getId(jobId));\n\n    // const yacts = actions.filter(a => !!a).map(a => allActions.indexOf(allActions.find(ac => ac.getId(jobId) === a.getId(jobId)))).filter(actIndex => actIndex !== -1);\n    const yacts = actions.filter(a => a).map(a => {\n      const matchingAction = allActions.find(ac => {\n        return a.getId(jobId) === ac.getId(jobId);\n      })\n      return matchingAction ? allActions.indexOf(matchingAction) : -1;\n    });\n\n    const newShareUrl = `${url}?${queryString.stringify({\n      rl: recipeLvl,\n      rrl: recipeRLvl,\n      rp: recipeProg,\n      rq: recipeQual,\n      rd: recipeDur,\n      rscr: recipeSugCraft,\n      rsco: recipeSugControl,\n      jcr: jobCraftsmanship,\n      jco: jobControl,\n      jcp: jobCP,\n      jl: jobLvl,\n      jis: jobIsSpecialist ? '1' : '0',\n      // zact: acts.join(','),\n      yact: yacts,\n    }, {\n      arrayFormat: 'comma'\n    })}`\n\n    if (newShareUrl === shareUrl) {\n      set_shareUrl('');\n    } else {\n      set_shareUrl(newShareUrl);\n    }\n\n    set_exportString('');\n  };\n\n  const focusShareField = (e: React.MouseEvent<HTMLInputElement>) => {\n    if (e.currentTarget) {\n      e.currentTarget.setSelectionRange(0, e.currentTarget.value.length);\n    }\n  };\n\n  const [exportString, set_exportString] = useState('');\n  const showExportString = () => {\n    const newExportString = CraftingActionsRegistry.exportToCraftOpt(CraftingActionsRegistry.serializeRotation(actions));\n    if (newExportString === exportString) {\n      set_exportString('');\n    } else {\n      set_exportString(newExportString);\n    }\n\n    set_shareUrl('');\n  };\n\n  const requestImportString = () => {\n    const importString = prompt('Enter Teamcraft export string below:');\n    if (importString) {\n      const newActions = CraftingActionsRegistry.importFromCraftOpt(JSON.parse(importString) as string[]);\n      set_actions(newActions);\n    }\n  };\n\n  const buffLines: Array<{\n    buffId: number\n    points: Array<number[] | null | undefined>\n  }> = [];\n  const buffLineThickness = 3;\n  const buffLineGap = 3;\n  const buffLineTopGap = 5;\n  const buffLineSpacing = buffLineThickness + buffLineGap;\n  states.slice(1).forEach((state, stateIndex) => {\n    const { buffs } = state;\n    buffs.filter(buff => buff.buff !== 0).forEach((buff, buffIndex, filteredBuffs) => {\n      const existingBuff = buffLines.find(b => b.buffId === buff.buff);\n      let thisBuff: {\n        buffId: number\n        points: Array<number[] | null | undefined>\n      };\n      if (existingBuff) {\n        thisBuff = existingBuff;\n      } else {\n        thisBuff = {\n          buffId: buff.buff,\n          points: []\n        };\n        buffLines.push(thisBuff);\n      }\n      const startX = 20 + stateIndex * 40 + buffLineSpacing;\n      const startY = buffLineTopGap + ((filteredBuffs.length - 1) * buffLineSpacing + (buffLineThickness)) - (buffIndex * buffLineSpacing);\n      const endX = 20 + (stateIndex * 40) + 40 - buffLineSpacing;\n      const endY = startY;\n      thisBuff.points[stateIndex] = [startX, startY, endX, endY];\n    });\n  });\n  const maxBuffHeight = Math.max(...states.map(st => st.buffs.length));\n\n  const [buffLineTooltip, set_buffLineTooltip] = useState('');\n  const [buffLineTooltipPosition, set_buffLineTooltipPosition] = useState([0, 0]);\n  const showBuffLineTooltip = (buffId: number) => {\n    return () => {\n      set_buffLineTooltip(buffLineNames[buffId] || '');\n    };\n  };\n  const hideBuffLineTooltip = () => {\n    set_buffLineTooltip('');\n  };\n  const updateBuffLineTooltipPosition = (e: React.MouseEvent<HTMLDivElement>) => {\n    const { clientX, clientY } = e;\n    const el = e.currentTarget;\n    const rect = el.getBoundingClientRect();\n    const { left, top } = rect;\n    set_buffLineTooltipPosition([clientX - left + 5, clientY - top + 5]);\n  };\n\n  const IQStacks = states.slice(1).map(st => {\n    const { buffs } = st;\n    const IQ = buffs.find(buff => buff.buff === 0);\n    return IQ ? IQ.stacks : 0;\n  });\n  const IQLines: Array<{\n    start: number\n    end: number\n  }> = [];\n  let start = -1;\n  IQStacks.forEach((stack, stackIndex) => {\n    if (stack > 0 && start < 0) {\n      start = stackIndex;\n      IQLines.push({\n        start,\n        end: -1\n      });\n    }\n    if (start > -1 && stack < 1) {\n      IQLines[IQLines.length - 1].end = stackIndex;\n      start = -1;\n    }\n  });\n\n  const setScrollingBarRef = (el: HTMLDivElement) => {\n    if (el) {\n      scrollingBarRef.current = el;\n    }\n  };\n\n  return <div>\n    <div style={{display: 'none'}}>\n      <GenericBar color={'#9eca4b'}>\n        <div style={{width: `${Math.min(100, latestState.progress/testRecipe.progress*100)}%`}}/>\n        <span>\n          {latestState.progress}/{testRecipe.progress} Progress\n        </span>\n      </GenericBar>\n      <GenericBar color={'#50a1bf'}>\n        <div style={{width: `${Math.min(100, latestState.quality/testRecipe.quality*100)}%`}}/>\n        <span>\n          {latestState.quality}/{testRecipe.quality} Quality\n        </span>\n      </GenericBar>\n      <GenericBar>\n        <div style={{width: `${Math.min(100, latestState.durability/testRecipe.durability*100)}%`}}/>\n        <span>\n          {latestState.durability}/{testRecipe.durability} Durability\n        </span>\n      </GenericBar>\n      <GenericBar color={'#bf7ed9'}>\n        <div style={{width: `${Math.min(100, latestState.cp/cp*100)}%`}}/>\n        <span>\n          {latestState.cp}/{cp} CP\n        </span>\n      </GenericBar>\n    </div>\n\n    <ScrollingBar ref={setScrollingBarRef}>\n      <ChartBar>\n        <svg style={{ verticalAlign: 'bottom', background: '#9eca4b' }} width={actions.length * 40} height=\"40\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d={`\n            M 0 40\n            ${states.slice(1).map((state, index, others) => {\n              const progressEnd = 40 - (40 * (state.progress / testRecipe.progress));\n              const progressStart = index < 1 ? 40 : 40 - (40 * (others[index - 1].progress / testRecipe.progress));\n              return `C ${index * 40 + 20} ${progressStart} ${index * 40 + 20} ${progressEnd} ${index * 40 + 40} ${progressEnd}`;\n            }).join(\"\\n\")}\n            L ${(states.length - 1) * 40} 40\n          `} fill=\"#6e9a1b\"/>\n        </svg>\n        <span style={{\n          verticalAlign: 'bottom',\n          bottom: `${Math.min(40, 40*latestState.progress/testRecipe.progress)}px`,\n        }}>{latestState.progress}/{testRecipe.progress} Progress</span>\n      </ChartBar>\n      <ChartBar>\n        <svg style={{ verticalAlign: 'top', background: '#80d1ef' }} width={actions.length * 40} height=\"40\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d={`\n            M 0 0\n            ${states.slice(1).map((state, index, others) => {\n              const qualityEnd = (40 * (state.quality / testRecipe.quality));\n              const qualityStart = index < 1 ? 0 : (40 * (others[index - 1].quality / testRecipe.quality))\n              return `C ${index * 40 + 20} ${qualityStart} ${index * 40 + 20} ${qualityEnd} ${index * 40 + 40} ${qualityEnd}`;\n            }).join(\"\\n\")}\n            L ${(states.length - 1) * 40} 0\n          `} fill=\"#50a1bf\"/>\n        </svg>\n        <span style={{\n          verticalAlign: 'top',\n          top: `${Math.min(40, 40*latestState.quality/testRecipe.quality)}px`,\n        }}>{latestState.quality}/{testRecipe.quality} Quality</span>\n      </ChartBar>\n\n      <IQLine>\n        <svg style={{\n          width: `${(actions.length) * 40}px`,\n        }}>\n          {IQStacks.map((IQStack, IQStackIndex) => {\n            const leaves: number[] = [];\n            const leafWidth = 6;\n            const leafHeight = 4;\n            const x = 20 + IQStackIndex * 40;\n            const y = 40 - buffLineSpacing;\n            for (let j = 0; j < IQStack; j++) {\n              leaves.push(1);\n            }\n            const leafColor = leaves.length >= 11 ? '#dcac2a' : '#3e6a00';\n            return <g\n              key={IQStackIndex}\n            >\n              <path\n                d={`\n                  M ${x + leafWidth} ${y}\n                  L ${x + leafWidth} ${y - IQStack * leafHeight * 0.5}\n                `}\n                stroke=\"#6e9a1b\"\n                fill=\"transparent\"\n              />;\n              {leaves.map((leaf, leafIndex) => {\n                const xx = x + (leafIndex % 2) * leafWidth;\n                const yy = (y - leafHeight * 1.5) - (leafIndex * leafHeight * 0.5);\n                const d = leafIndex >= 10 ? `\n                  M ${xx + 0.5 * leafWidth} ${yy + 0.75 * leafHeight}\n                  C ${xx + 0.75 * leafWidth} ${yy + 0.75 * leafHeight}\n                    ${xx + leafWidth} ${yy + 0.9 * leafHeight}\n                    ${xx + leafWidth} ${yy + leafHeight}\n                  C ${xx + leafWidth} ${yy + 0.5 * leafHeight}\n                    ${xx + 0.75 * leafWidth} ${yy}\n                    ${xx + 0.5 * leafWidth} ${yy}\n                  C ${xx + 0.25 * leafWidth} ${yy}\n                    ${xx} ${yy - 0.15 * leafHeight}\n                    ${xx} ${yy - 0.25 * leafHeight}\n                  C ${xx} ${yy + 0.25 * leafHeight}\n                    ${xx + 0.25 * leafWidth} ${yy + 0.75 * leafHeight}\n                    ${xx + 0.5 * leafWidth} ${yy + 0.75 * leafHeight}\n                ` : `\n                  M ${xx} ${yy + leafHeight}\n                  C ${xx} ${yy + 0.9 * leafHeight}\n                    ${xx + 0.25 * leafWidth} ${yy + 0.75 * leafHeight}\n                    ${xx + 0.5 * leafWidth} ${yy + 0.75 * leafHeight}\n                  C ${xx + 0.75 * leafWidth} ${yy + 0.75 * leafHeight}\n                    ${xx + leafWidth} ${yy + 0.9 * leafHeight}\n                    ${xx + leafWidth} ${yy + leafHeight}\n                  C ${xx + leafWidth} ${yy + 0.5 * leafHeight}\n                    ${xx + 0.75 * leafWidth} ${yy}\n                    ${xx + 0.5 * leafWidth} ${yy}\n                  C ${xx + 0.25 * leafWidth} ${yy}\n                    ${xx} ${yy + 0.5 * leafHeight}\n                    ${xx} ${yy + leafHeight}\n                `;\n                return <path\n                  d={d}\n                  key={leafIndex}\n                  stroke=\"transparent\"\n                  fill={leafColor}\n                />;\n              })}\n            </g>;\n          })}\n          {IQLines.map((IQLine, IQLineIndex) => {\n            const start = 20 + IQLine.start * 40 + buffLineThickness / 2;\n            const end = IQLine.end < 0 ? actions.length * 40 : IQLine.end * 40;\n            const gap = buffLineSpacing;\n            return <path\n              key={IQLineIndex}\n              d={`\n                M ${start} 40\n                C ${start} ${40 - gap / 2}\n                  ${start + gap / 2} ${40 - gap}\n                  ${start + gap} ${40 - gap}\n                ${IQLine.end < 0 ? `\n                  L ${end} ${40 - gap}\n                ` : `\n                  L ${end - gap} ${40 - gap}\n                  C ${end - gap / 2} ${40 - gap}\n                    ${end} ${40 - gap / 2}\n                    ${end} 40\n                `}\n              `}\n              fill=\"transparent\"\n              strokeWidth=\"3\"\n              stroke={'#ccc'}\n            />\n          })}\n        </svg>\n      </IQLine>\n\n      <ActionBar>\n        {actions.map((action, index) => {\n          const isDragged = draggingIndex === index;\n          const isFailed = successStates[index] === false;\n          const hasBorderLeft = (index === draggedOverIndex) && ((newActionDrag !== undefined) || (draggingIndex !== undefined && draggedOverIndex < draggingIndex));\n          return <DraggedImage\n            alt={CraftingActionsRegistry.serializeRotation([action]).join('')}\n            title={CraftingActionsRegistry.serializeRotation([action]).join('')}\n            key={`${index} ${action.getId(jobId)}`}\n            draggable={true}\n            onDragStart={OnActionDragStart(index)}\n            onDragOver={OnActionDragOver(index)}\n            onDragEnd={OnActionDragEnd}\n            onDrop={OnActionDrop(index)}\n            src={process.env.PUBLIC_URL + (Icons as any)[action.getId(jobId)]}\n            onClick={clickJobAction(index)}\n            style={{\n              borderLeft: hasBorderLeft ? 'solid 10px transparent' : '',\n              borderRight: draggingIndex !== undefined && index === draggedOverIndex && draggedOverIndex > draggingIndex ? 'solid 10px transparent' : '',\n            }}\n            isDragged={isDragged}\n            isFailed={isFailed}\n          />\n        })}\n      </ActionBar>\n      <BuffLines onMouseMove={updateBuffLineTooltipPosition}>\n        {buffLineTooltip && <BuffLineTooltip\n          style={{\n            top: `${buffLineTooltipPosition[1]}px`,\n            left: `${buffLineTooltipPosition[0]}px`,\n          }}\n        >{buffLineTooltip}</BuffLineTooltip>}\n        <svg style={{\n          width: `${(actions.length) * 40}px`,\n          height: `${(maxBuffHeight * buffLineSpacing) + buffLineTopGap}px`\n        }}>\n          {buffLines.map(buffLine => {\n            const d = buffLine.points.map((point, pointIndex, points) => {\n              let pointD = '';\n              const prevPoint = points[pointIndex - 1];\n              if (point && !prevPoint) {\n                pointD += `\n                  M ${point[0] - (buffLineSpacing / 2)} 0\n                  C ${point[0] - (buffLineSpacing / 2)} ${point[1] / 2}\n                    ${point[0] - (buffLineSpacing / 4)} ${point[1]}\n                    ${point[0]} ${point[1]}\n                  L ${point[2]} ${point[3]}\n                `;\n              }\n              if (point && prevPoint) {\n                pointD += `\n                  M ${prevPoint[2]} ${prevPoint[3]}\n                  C ${point[0] - (point[0] - prevPoint[2]) / 2} ${prevPoint[3]}\n                    ${point[0] - (point[0] - prevPoint[2]) / 2} ${point[1]}\n                    ${point[0]} ${point[1]}\n                  L ${point[2]} ${point[3]}\n                `;\n              }\n              return pointD;\n            }).join(' ');\n            return <path\n              onMouseOver={showBuffLineTooltip(buffLine.buffId)}\n              onMouseOut={hideBuffLineTooltip}\n              key={buffLine.buffId}\n              d={d}\n              fill=\"transparent\"\n              strokeWidth=\"3\"\n              stroke={buffLineColors[buffLine.buffId] || '#ccc'}\n            />;\n          })}\n        </svg>\n      </BuffLines>\n      <ChartBar>\n        <svg style={{ verticalAlign: 'bottom', background: '#eee' }} width={actions.length * 40} height=\"40\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d={`\n            M 0 40\n            L 0 0\n            ${states.slice(1).map((state, index, others) => {\n              const durEnd = 40 - (40 * (state.durability / testRecipe.durability));\n              const durStart = index < 1 ? 0 : 40 - (40 * (others[index - 1].durability / testRecipe.durability))\n              return `C ${index * 40 + 20} ${durStart} ${index * 40 + 20} ${durEnd} ${index * 40 + 40} ${durEnd}`;\n            }).join(\"\\n\")}\n            L ${(states.length - 1) * 40} 40\n          `} fill=\"#ccc\"/>\n          })}\n        </svg>\n        <span style={{\n          verticalAlign: 'bottom',\n          bottom: `${Math.min(40, 40*latestState.durability/testRecipe.durability)}px`,\n        }}>{latestState.durability}/{testRecipe.durability} Durability</span>\n      </ChartBar>\n      <ChartBar>\n        <svg style={{ verticalAlign: 'top', background: '#efaeff' }} width={actions.length * 40} height=\"40\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d={`\n            M 0 0\n            L 0 40\n            ${states.slice(1).map((state, index, others) => {\n              const cpEnd = (40 * (state.cp / stats.cp));\n              const cpStart = index < 1 ? 40 : (40 * (others[index - 1].cp / stats.cp))\n              return `C ${index * 40 + 20} ${cpStart} ${index * 40 + 20} ${cpEnd} ${index * 40 + 40} ${cpEnd}`;\n            }).join(\"\\n\")}\n            L ${(states.length - 1) * 40} 0\n          `} fill=\"#bf7ed9\"/>\n        </svg>\n        <span style={{\n          verticalAlign: 'top',\n          top: `${Math.min(40, 40*latestState.cp/stats.cp)}px`,\n        }}>{latestState.cp}/{stats.cp} CP</span>\n      </ChartBar>\n    </ScrollingBar>\n    <JobButton onClick={clearActions} active={true}>Clear</JobButton>\n    <JobButton onClick={showShareUrl} active={true}>Share</JobButton>\n    {shareUrl && <ShareInput onClick={focusShareField} type=\"text\" value={shareUrl} readOnly/>}\n    <JobButton onClick={showExportString} active={true}>Export</JobButton>\n    {exportString && <ShareInput onClick={focusShareField} type=\"text\" value={exportString} readOnly/>}\n    <JobButton onClick={requestImportString} active={true}>Import</JobButton>\n    <div>\n      {jobs.map((n, i) => n && <JobButton\n        active={jobId === i}\n        key={i}\n        onClick={clickJobButton(i)}>\n        {n}\n      </JobButton>)}\n    </div>\n    <div>\n      {actionsByType.map((someActions, typeIndex) => <ActionTypeSet key={typeIndex}>\n        {someActions.map((i, index) => <ActionPalletteImage\n          alt={CraftingActionsRegistry.serializeRotation([i]).join('')}\n          title={CraftingActionsRegistry.serializeRotation([i]).join('')}\n          key={index}\n          draggable={true}\n          onDragStart={OnNewActionDragStart(i)}\n          onDragEnd={OnNewActionDragEnd}\n          src={process.env.PUBLIC_URL + (Icons as any)[i.getId(jobId)]}\n          onClick={clickAction(i)}\n          isDragged={i === newActionDrag}\n        />)}\n      </ActionTypeSet>)}\n    </div>\n  </div>;\n};\n\nexport default SimComponent;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom'\n\nimport styled from 'styled-components/macro';\n\nimport Sim from './components/Sim';\n\nconst Wrapper = styled.div`\n  padding-bottom: 30vh;\n`;\nconst FootNote = styled.div`\n  font-size: 10px;\n`;\n\n// https://nubleh.github.io/ffxiv/craft/?jco=1800&jcp=489&jcr=1800&jis=0&jl=80&rd=80&rl=80&rp=3943&rq=20287&rsco=0&rscr=1866&rrl=430\nconst App: React.FC = () => {\n\n  return (\n    <Router>\n      <Wrapper>\n        <Route path=\"/\" component={Sim}/>\n        <FootNote>\n          This is a WIP thing made for fun.\n          <br/>There are probably bugs everywhere, simulation is likely to be inaccurate.\n          <br/>This thing uses the crafting simulator library made by <a href=\"https://github.com/ffxiv-teamcraft/simulator/\" target=\"_blank\" rel=\"noopener noreferrer\">ffxiv-teamcraft</a>\n        </FootNote>\n      </Wrapper>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}