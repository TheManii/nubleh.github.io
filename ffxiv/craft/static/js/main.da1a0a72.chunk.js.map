{"version":3,"sources":["components/Sim/Icons.tsx","components/Sim/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Icons","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","276","277","278","279","283","284","285","286","287","4574","4575","4576","4577","4578","4579","4580","4581","4597","4598","4599","4600","4601","4602","4603","4604","4607","4608","4609","4610","4611","4612","4613","4614","4615","4616","4617","4618","4619","4620","4621","4622","100001","100002","100003","100004","100005","100007","100008","100010","100015","100016","100017","100018","100019","100021","100022","100023","100030","100031","100032","100033","100034","100035","100037","100038","100039","100040","100045","100046","100047","100048","100049","100051","100052","100053","100060","100061","100062","100063","100064","100065","100067","100068","100069","100070","100075","100076","100077","100078","100079","100080","100081","100082","100083","100090","100091","100092","100093","100094","100096","100097","100098","100099","100105","100106","100107","100108","100109","100110","100111","100112","100113","100128","100129","100130","100131","100132","100133","100134","100135","100136","100137","100138","100139","100140","100141","100142","100143","100144","100145","100146","100147","100148","100149","100150","100151","100152","100153","100154","100156","100157","100158","100159","100160","100161","100162","100163","100164","100165","100166","100167","100168","100169","100170","100171","100172","100174","100175","100176","100178","100179","100180","100181","100182","100183","100184","100185","100186","100187","100188","100189","100190","100192","100193","100194","100195","100196","100197","100198","100199","100200","100201","100202","100203","100204","100205","100206","100207","100208","100209","100210","100211","100212","100213","100214","100215","100216","100217","100218","100219","100220","100221","100222","100223","100224","100225","100226","100227","100228","100229","100230","100231","100232","100233","100234","100235","100236","100237","100238","100239","100240","100241","100242","100243","100244","100245","100246","100247","100248","100249","100250","100251","100252","100253","100254","100255","100256","100257","100258","100259","100260","100261","100262","100263","100264","100265","100266","100267","100268","100269","100270","100271","100272","100273","100274","100275","100276","100277","100278","100279","100280","100281","100282","100283","100284","100285","100286","100287","100288","100289","100290","100291","100292","100293","100294","100295","100296","100297","100298","100299","100300","100301","100302","100303","100304","100305","100306","100307","100308","100309","100310","100311","100312","100313","100314","100315","100316","100317","100318","100319","100320","100321","100322","100323","100324","100325","100326","100327","100328","100329","100330","100331","100332","100333","100334","100335","100336","100337","100338","100339","100340","100341","100342","100343","100344","100345","100346","jobs","testRecipe","durability","job","lvl","progress","Math","floor","quality","rlvl","materialQualityFactor","id","suggestedControl","suggestedCraftsmanship","quickSynth","ingredients","hq","testStats","CrafterStats","all","CraftingActionsRegistry","ALL_ACTIONS","window","console","log","derp","JobButton","styled","div","withConfig","displayName","componentId","_ref","active","css","_templateObject","GenericBar","_ref2","color","_templateObject2","ActionBar","ChartBar","SuccessBox","defaultState","cp","buffs","SimComponent","_useState","useState","_useState2","Object","slicedToArray","actions","set_actions","_useState3","_useState4","jobId","set_jobId","_useState5","_useState6","craftsmanship","_useState7","_useState8","control","_useState9","_useState10","_useState11","undefined","_useState12","sim","_useState13","_useState14","states","set_states","_useState15","_useState16","statedActions","set_statedActions","stats","useEffect","length","x","max","newStatedActions","slice","newStates","y","Simulation","run","progression","availableCP","toConsumableArray","clickJobAction","index","concat","clickJobButton","latestState","_useState17","_useState18","draggingIndex","set_draggingIndex","_useState19","_useState20","draggedOverIndex","set_draggedOverIndex","OnActionDragEnd","OnActionDragStart","e","OnActionDragOver","preventDefault","OnActionDrop","newActions","draggedAction","splice","targetIndex","react_default","a","createElement","style","width","min","getReliabilityReport","successPercent","verticalAlign","background","height","xmlns","map","state","others","progressEnd","progressStart","key","d","fill","bottom","qualityEnd","qualityStart","top","action","draggable","onDragStart","onDragOver","onDragEnd","onDrop","src","process","getId","onClick","marginLeft","marginRight","opacity","cpEnd","cpStart","n","i","JSON","stringify","Wrapper","App","Sim","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yOAAaA,EAAQ,CACnBC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,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","file":"static/js/main.da1a0a72.chunk.js","sourcesContent":["export const Icons = {\n  \"244\": \"/i/001000/001953.png\",\n  \"245\": \"/i/001000/001953.png\",\n  \"246\": \"/i/001000/001953.png\",\n  \"247\": \"/i/001000/001953.png\",\n  \"248\": \"/i/001000/001953.png\",\n  \"249\": \"/i/001000/001953.png\",\n  \"250\": \"/i/001000/001953.png\",\n  \"251\": \"/i/001000/001953.png\",\n  \"252\": \"/i/001000/001951.png\",\n  \"253\": \"/i/001000/001951.png\",\n  \"254\": \"/i/001000/001951.png\",\n  \"255\": \"/i/001000/001951.png\",\n  \"256\": \"/i/001000/001951.png\",\n  \"257\": \"/i/001000/001951.png\",\n  \"258\": \"/i/001000/001951.png\",\n  \"259\": \"/i/001000/001951.png\",\n  \"260\": \"/i/001000/001955.png\",\n  \"261\": \"/i/001000/001955.png\",\n  \"262\": \"/i/001000/001955.png\",\n  \"263\": \"/i/001000/001955.png\",\n  \"264\": \"/i/001000/001955.png\",\n  \"265\": \"/i/001000/001955.png\",\n  \"266\": \"/i/001000/001955.png\",\n  \"267\": \"/i/001000/001955.png\",\n  \"276\": \"/i/001000/001506.png\",\n  \"277\": \"/i/001000/001556.png\",\n  \"278\": \"/i/001000/001668.png\",\n  \"279\": \"/i/001000/001706.png\",\n  \"283\": \"/i/001000/001571.png\",\n  \"284\": \"/i/001000/001672.png\",\n  \"285\": \"/i/001000/001721.png\",\n  \"286\": \"/i/001000/001822.png\",\n  \"287\": \"/i/001000/001872.png\",\n  \"4574\": \"/i/001000/001971.png\",\n  \"4575\": \"/i/001000/001971.png\",\n  \"4576\": \"/i/001000/001971.png\",\n  \"4577\": \"/i/001000/001971.png\",\n  \"4578\": \"/i/001000/001971.png\",\n  \"4579\": \"/i/001000/001971.png\",\n  \"4580\": \"/i/001000/001971.png\",\n  \"4581\": \"/i/001000/001971.png\",\n  \"4597\": \"/i/001000/001979.png\",\n  \"4598\": \"/i/001000/001979.png\",\n  \"4599\": \"/i/001000/001979.png\",\n  \"4600\": \"/i/001000/001979.png\",\n  \"4601\": \"/i/001000/001979.png\",\n  \"4602\": \"/i/001000/001979.png\",\n  \"4603\": \"/i/001000/001979.png\",\n  \"4604\": \"/i/001000/001979.png\",\n  \"4607\": \"/i/001000/001974.png\",\n  \"4608\": \"/i/001000/001974.png\",\n  \"4609\": \"/i/001000/001974.png\",\n  \"4610\": \"/i/001000/001974.png\",\n  \"4611\": \"/i/001000/001974.png\",\n  \"4612\": \"/i/001000/001974.png\",\n  \"4613\": \"/i/001000/001974.png\",\n  \"4614\": \"/i/001000/001974.png\",\n  \"4615\": \"/i/001000/001978.png\",\n  \"4616\": \"/i/001000/001978.png\",\n  \"4617\": \"/i/001000/001978.png\",\n  \"4618\": \"/i/001000/001978.png\",\n  \"4619\": \"/i/001000/001978.png\",\n  \"4620\": \"/i/001000/001978.png\",\n  \"4621\": \"/i/001000/001978.png\",\n  \"4622\": \"/i/001000/001978.png\",\n  \"100001\": \"/i/001000/001501.png\",\n  \"100002\": \"/i/001000/001502.png\",\n  \"100003\": \"/i/001000/001952.png\",\n  \"100004\": \"/i/001000/001516.png\",\n  \"100005\": \"/i/001000/001956.png\",\n  \"100007\": \"/i/001000/001515.png\",\n  \"100008\": \"/i/001000/001517.png\",\n  \"100010\": \"/i/001000/001954.png\",\n  \"100015\": \"/i/001000/001551.png\",\n  \"100016\": \"/i/001000/001552.png\",\n  \"100017\": \"/i/001000/001952.png\",\n  \"100018\": \"/i/001000/001566.png\",\n  \"100019\": \"/i/001000/001956.png\",\n  \"100021\": \"/i/001000/001565.png\",\n  \"100022\": \"/i/001000/001567.png\",\n  \"100023\": \"/i/001000/001954.png\",\n  \"100030\": \"/i/001000/001601.png\",\n  \"100031\": \"/i/001000/001602.png\",\n  \"100032\": \"/i/001000/001952.png\",\n  \"100033\": \"/i/001000/001619.png\",\n  \"100034\": \"/i/001000/001616.png\",\n  \"100035\": \"/i/001000/001956.png\",\n  \"100037\": \"/i/001000/001615.png\",\n  \"100038\": \"/i/001000/001617.png\",\n  \"100039\": \"/i/001000/001622.png\",\n  \"100040\": \"/i/001000/001954.png\",\n  \"100045\": \"/i/001000/001701.png\",\n  \"100046\": \"/i/001000/001702.png\",\n  \"100047\": \"/i/001000/001952.png\",\n  \"100048\": \"/i/001000/001716.png\",\n  \"100049\": \"/i/001000/001956.png\",\n  \"100051\": \"/i/001000/001715.png\",\n  \"100052\": \"/i/001000/001717.png\",\n  \"100053\": \"/i/001000/001954.png\",\n  \"100060\": \"/i/001000/001751.png\",\n  \"100061\": \"/i/001000/001752.png\",\n  \"100062\": \"/i/001000/001952.png\",\n  \"100063\": \"/i/001000/001768.png\",\n  \"100064\": \"/i/001000/001765.png\",\n  \"100065\": \"/i/001000/001956.png\",\n  \"100067\": \"/i/001000/001764.png\",\n  \"100068\": \"/i/001000/001766.png\",\n  \"100069\": \"/i/001000/001771.png\",\n  \"100070\": \"/i/001000/001954.png\",\n  \"100075\": \"/i/001000/001651.png\",\n  \"100076\": \"/i/001000/001652.png\",\n  \"100077\": \"/i/001000/001952.png\",\n  \"100078\": \"/i/001000/001665.png\",\n  \"100079\": \"/i/001000/001956.png\",\n  \"100080\": \"/i/001000/001664.png\",\n  \"100081\": \"/i/001000/001666.png\",\n  \"100082\": \"/i/001000/001954.png\",\n  \"100083\": \"/i/001000/001673.png\",\n  \"100090\": \"/i/001000/001801.png\",\n  \"100091\": \"/i/001000/001802.png\",\n  \"100092\": \"/i/001000/001952.png\",\n  \"100093\": \"/i/001000/001816.png\",\n  \"100094\": \"/i/001000/001956.png\",\n  \"100096\": \"/i/001000/001815.png\",\n  \"100097\": \"/i/001000/001817.png\",\n  \"100098\": \"/i/001000/001819.png\",\n  \"100099\": \"/i/001000/001954.png\",\n  \"100105\": \"/i/001000/001851.png\",\n  \"100106\": \"/i/001000/001852.png\",\n  \"100107\": \"/i/001000/001952.png\",\n  \"100108\": \"/i/001000/001868.png\",\n  \"100109\": \"/i/001000/001865.png\",\n  \"100110\": \"/i/001000/001956.png\",\n  \"100111\": \"/i/001000/001864.png\",\n  \"100112\": \"/i/001000/001866.png\",\n  \"100113\": \"/i/001000/001954.png\",\n  \"100128\": \"/i/001000/001524.png\",\n  \"100129\": \"/i/001000/001574.png\",\n  \"100130\": \"/i/001000/001625.png\",\n  \"100131\": \"/i/001000/001676.png\",\n  \"100132\": \"/i/001000/001724.png\",\n  \"100133\": \"/i/001000/001774.png\",\n  \"100134\": \"/i/001000/001825.png\",\n  \"100135\": \"/i/001000/001875.png\",\n  \"100136\": \"/i/001000/001876.png\",\n  \"100137\": \"/i/001000/001959.png\",\n  \"100138\": \"/i/001000/001959.png\",\n  \"100139\": \"/i/001000/001959.png\",\n  \"100140\": \"/i/001000/001959.png\",\n  \"100141\": \"/i/001000/001959.png\",\n  \"100142\": \"/i/001000/001959.png\",\n  \"100143\": \"/i/001000/001959.png\",\n  \"100144\": \"/i/001000/001959.png\",\n  \"100145\": \"/i/001000/001960.png\",\n  \"100146\": \"/i/001000/001960.png\",\n  \"100147\": \"/i/001000/001960.png\",\n  \"100148\": \"/i/001000/001960.png\",\n  \"100149\": \"/i/001000/001960.png\",\n  \"100150\": \"/i/001000/001960.png\",\n  \"100151\": \"/i/001000/001960.png\",\n  \"100152\": \"/i/001000/001960.png\",\n  \"100153\": \"/i/001000/001963.png\",\n  \"100154\": \"/i/001000/001963.png\",\n  \"100156\": \"/i/001000/001963.png\",\n  \"100157\": \"/i/001000/001963.png\",\n  \"100158\": \"/i/001000/001963.png\",\n  \"100159\": \"/i/001000/001963.png\",\n  \"100160\": \"/i/001000/001963.png\",\n  \"100161\": \"/i/001000/001964.png\",\n  \"100162\": \"/i/001000/001964.png\",\n  \"100163\": \"/i/001000/001964.png\",\n  \"100164\": \"/i/001000/001964.png\",\n  \"100165\": \"/i/001000/001964.png\",\n  \"100166\": \"/i/001000/001964.png\",\n  \"100167\": \"/i/001000/001964.png\",\n  \"100168\": \"/i/001000/001964.png\",\n  \"100169\": \"/i/001000/001962.png\",\n  \"100170\": \"/i/001000/001962.png\",\n  \"100171\": \"/i/001000/001962.png\",\n  \"100172\": \"/i/001000/001962.png\",\n  \"100174\": \"/i/001000/001962.png\",\n  \"100175\": \"/i/001000/001962.png\",\n  \"100176\": \"/i/001000/001962.png\",\n  \"100178\": \"/i/001000/001677.png\",\n  \"100179\": \"/i/001000/001969.png\",\n  \"100180\": \"/i/001000/001969.png\",\n  \"100181\": \"/i/001000/001969.png\",\n  \"100182\": \"/i/001000/001969.png\",\n  \"100183\": \"/i/001000/001969.png\",\n  \"100184\": \"/i/001000/001969.png\",\n  \"100185\": \"/i/001000/001969.png\",\n  \"100186\": \"/i/001000/001969.png\",\n  \"100187\": \"/i/001000/001961.png\",\n  \"100188\": \"/i/001000/001961.png\",\n  \"100189\": \"/i/001000/001961.png\",\n  \"100190\": \"/i/001000/001961.png\",\n  \"100192\": \"/i/001000/001961.png\",\n  \"100193\": \"/i/001000/001961.png\",\n  \"100194\": \"/i/001000/001961.png\",\n  \"100195\": \"/i/001000/001973.png\",\n  \"100196\": \"/i/001000/001973.png\",\n  \"100197\": \"/i/001000/001973.png\",\n  \"100198\": \"/i/001000/001973.png\",\n  \"100199\": \"/i/001000/001973.png\",\n  \"100200\": \"/i/001000/001973.png\",\n  \"100201\": \"/i/001000/001973.png\",\n  \"100202\": \"/i/001000/001973.png\",\n  \"100203\": \"/i/001000/001972.png\",\n  \"100204\": \"/i/001000/001972.png\",\n  \"100205\": \"/i/001000/001972.png\",\n  \"100206\": \"/i/001000/001972.png\",\n  \"100207\": \"/i/001000/001972.png\",\n  \"100208\": \"/i/001000/001972.png\",\n  \"100209\": \"/i/001000/001972.png\",\n  \"100210\": \"/i/001000/001972.png\",\n  \"100211\": \"/i/001000/001970.png\",\n  \"100212\": \"/i/001000/001970.png\",\n  \"100213\": \"/i/001000/001970.png\",\n  \"100214\": \"/i/001000/001970.png\",\n  \"100215\": \"/i/001000/001970.png\",\n  \"100216\": \"/i/001000/001970.png\",\n  \"100217\": \"/i/001000/001970.png\",\n  \"100218\": \"/i/001000/001970.png\",\n  \"100219\": \"/i/001000/001534.png\",\n  \"100220\": \"/i/001000/001583.png\",\n  \"100221\": \"/i/001000/001634.png\",\n  \"100222\": \"/i/001000/001685.png\",\n  \"100223\": \"/i/001000/001733.png\",\n  \"100224\": \"/i/001000/001783.png\",\n  \"100225\": \"/i/001000/001834.png\",\n  \"100226\": \"/i/001000/001885.png\",\n  \"100227\": \"/i/001000/001535.png\",\n  \"100228\": \"/i/001000/001584.png\",\n  \"100229\": \"/i/001000/001635.png\",\n  \"100230\": \"/i/001000/001686.png\",\n  \"100231\": \"/i/001000/001734.png\",\n  \"100232\": \"/i/001000/001784.png\",\n  \"100233\": \"/i/001000/001835.png\",\n  \"100234\": \"/i/001000/001886.png\",\n  \"100235\": \"/i/001000/001536.png\",\n  \"100236\": \"/i/001000/001585.png\",\n  \"100237\": \"/i/001000/001636.png\",\n  \"100238\": \"/i/001000/001687.png\",\n  \"100239\": \"/i/001000/001735.png\",\n  \"100240\": \"/i/001000/001785.png\",\n  \"100241\": \"/i/001000/001836.png\",\n  \"100242\": \"/i/001000/001887.png\",\n  \"100243\": \"/i/001000/001537.png\",\n  \"100244\": \"/i/001000/001586.png\",\n  \"100245\": \"/i/001000/001637.png\",\n  \"100246\": \"/i/001000/001688.png\",\n  \"100247\": \"/i/001000/001736.png\",\n  \"100248\": \"/i/001000/001786.png\",\n  \"100249\": \"/i/001000/001837.png\",\n  \"100250\": \"/i/001000/001888.png\",\n  \"100251\": \"/i/001000/001965.png\",\n  \"100252\": \"/i/001000/001965.png\",\n  \"100253\": \"/i/001000/001965.png\",\n  \"100254\": \"/i/001000/001965.png\",\n  \"100255\": \"/i/001000/001965.png\",\n  \"100256\": \"/i/001000/001965.png\",\n  \"100257\": \"/i/001000/001965.png\",\n  \"100258\": \"/i/001000/001965.png\",\n  \"100259\": \"/i/001000/001966.png\",\n  \"100260\": \"/i/001000/001966.png\",\n  \"100261\": \"/i/001000/001966.png\",\n  \"100262\": \"/i/001000/001966.png\",\n  \"100263\": \"/i/001000/001966.png\",\n  \"100264\": \"/i/001000/001966.png\",\n  \"100265\": \"/i/001000/001966.png\",\n  \"100266\": \"/i/001000/001966.png\",\n  \"100267\": \"/i/001000/001967.png\",\n  \"100268\": \"/i/001000/001967.png\",\n  \"100269\": \"/i/001000/001967.png\",\n  \"100270\": \"/i/001000/001967.png\",\n  \"100271\": \"/i/001000/001967.png\",\n  \"100272\": \"/i/001000/001967.png\",\n  \"100273\": \"/i/001000/001967.png\",\n  \"100274\": \"/i/001000/001967.png\",\n  \"100275\": \"/i/001000/001968.png\",\n  \"100276\": \"/i/001000/001968.png\",\n  \"100277\": \"/i/001000/001968.png\",\n  \"100278\": \"/i/001000/001968.png\",\n  \"100279\": \"/i/001000/001968.png\",\n  \"100280\": \"/i/001000/001968.png\",\n  \"100281\": \"/i/001000/001968.png\",\n  \"100282\": \"/i/001000/001968.png\",\n  \"100283\": \"/i/001000/001981.png\",\n  \"100284\": \"/i/001000/001981.png\",\n  \"100285\": \"/i/001000/001981.png\",\n  \"100286\": \"/i/001000/001981.png\",\n  \"100287\": \"/i/001000/001981.png\",\n  \"100288\": \"/i/001000/001981.png\",\n  \"100289\": \"/i/001000/001981.png\",\n  \"100290\": \"/i/001000/001981.png\",\n  \"100291\": \"/i/001000/001980.png\",\n  \"100292\": \"/i/001000/001980.png\",\n  \"100293\": \"/i/001000/001980.png\",\n  \"100294\": \"/i/001000/001980.png\",\n  \"100295\": \"/i/001000/001980.png\",\n  \"100296\": \"/i/001000/001980.png\",\n  \"100297\": \"/i/001000/001980.png\",\n  \"100298\": \"/i/001000/001980.png\",\n  \"100299\": \"/i/001000/001507.png\",\n  \"100300\": \"/i/001000/001557.png\",\n  \"100301\": \"/i/001000/001607.png\",\n  \"100302\": \"/i/001000/001657.png\",\n  \"100303\": \"/i/001000/001707.png\",\n  \"100304\": \"/i/001000/001757.png\",\n  \"100305\": \"/i/001000/001807.png\",\n  \"100306\": \"/i/001000/001857.png\",\n  \"100307\": \"/i/001000/001976.png\",\n  \"100308\": \"/i/001000/001976.png\",\n  \"100309\": \"/i/001000/001976.png\",\n  \"100310\": \"/i/001000/001976.png\",\n  \"100311\": \"/i/001000/001976.png\",\n  \"100312\": \"/i/001000/001976.png\",\n  \"100313\": \"/i/001000/001976.png\",\n  \"100314\": \"/i/001000/001976.png\",\n  \"100315\": \"/i/001000/001514.png\",\n  \"100316\": \"/i/001000/001564.png\",\n  \"100317\": \"/i/001000/001614.png\",\n  \"100318\": \"/i/001000/001663.png\",\n  \"100319\": \"/i/001000/001714.png\",\n  \"100320\": \"/i/001000/001763.png\",\n  \"100321\": \"/i/001000/001814.png\",\n  \"100322\": \"/i/001000/001863.png\",\n  \"100323\": \"/i/001000/001503.png\",\n  \"100324\": \"/i/001000/001553.png\",\n  \"100325\": \"/i/001000/001603.png\",\n  \"100326\": \"/i/001000/001653.png\",\n  \"100327\": \"/i/001000/001703.png\",\n  \"100328\": \"/i/001000/001753.png\",\n  \"100329\": \"/i/001000/001803.png\",\n  \"100330\": \"/i/001000/001853.png\",\n  \"100331\": \"/i/001000/001977.png\",\n  \"100332\": \"/i/001000/001977.png\",\n  \"100333\": \"/i/001000/001977.png\",\n  \"100334\": \"/i/001000/001977.png\",\n  \"100335\": \"/i/001000/001977.png\",\n  \"100336\": \"/i/001000/001977.png\",\n  \"100337\": \"/i/001000/001977.png\",\n  \"100338\": \"/i/001000/001977.png\",\n  \"100339\": \"/i/001000/001975.png\",\n  \"100340\": \"/i/001000/001975.png\",\n  \"100341\": \"/i/001000/001975.png\",\n  \"100342\": \"/i/001000/001975.png\",\n  \"100343\": \"/i/001000/001975.png\",\n  \"100344\": \"/i/001000/001975.png\",\n  \"100345\": \"/i/001000/001975.png\",\n  \"100346\": \"/i/001000/001975.png\"\n}","import React, { useEffect, useState, useRef } from 'react';\n\nimport styled, { css } from 'styled-components/macro';\n\nimport {\n  ActionType,\n  CraftingAction,\n  CraftingActionsRegistry,\n  Simulation,\n  Craft,\n  CrafterStats,\n  CraftingJob,\n  EffectiveBuff,\n} from '@ffxiv-teamcraft/simulator';\n\nimport { Icons } from './Icons';\n\nconst jobs = [\n  '', '', '', '', '', '', '', '',\n  'CRP',\n  'BSM',\n  'ARM',\n  'GSM',\n  'LTW',\n  'WVR',\n  'ALC',\n  'CUL'\n];\n\nconst job_id = 1;\nconst testRecipe = {\n  durability: 80,\n  job: job_id,\n  lvl: 80,\n  progress: Math.floor(3943 / 2.5),\n  quality: Math.floor(20287 / 2),\n  rlvl: 430,\n  materialQualityFactor: 75,\n  id: '0',\n  suggestedControl: 1733,\n  suggestedCraftsmanship: 1866,\n  quickSynth: 1,\n  ingredients: [],\n  hq: 1,\n} as Craft;\nconst testStats = new CrafterStats(\n  job_id,\n  1800,\n  1800,\n  489,\n  false,\n  80,\n  [80, 80, 80, 80, 80, 80, 80, 80]\n);\nconst testActions: CraftingAction[] = [\n];\nconst all = CraftingActionsRegistry.ALL_ACTIONS;\nwindow.console.log(all);\n(window as any).derp = all;\n\ninterface JobButtonProps {\n  active?: boolean\n}\nconst JobButton = styled.div`\n  padding: 4px 8px;\n  display: inline-block;\n  cursor: pointer;\n  background: #f7f7f7;\n  border-radius: 4px;\n  box-sizing: border-box;\n  margin: 4px;\n  border: solid 1px transparent;\n  margin-top: 20px;\n\n  ${({ active }: JobButtonProps) => active && css`\n  border: solid 1px #ccc;\n  `}\n\n  &:hover {\n    background: #eee;\n  }\n`;\n\ninterface GenericBarProps {\n  color?: string\n}\nconst GenericBar = styled.div`\n  width: 300px;\n  height: 20px;\n  background: #eee;\n  margin: 10px;\n  font-size: 10px;\n  line-height: 20px;\n  white-space: nowrap;\n\n  > div, span {\n    vertical-align: middle;\n  }\n\n  > span {\n    margin: 0 4px;\n  }\n\n  > div {\n    height: 100%;\n    width: 100%;\n    transition: width 0.3s;\n    background: #ccc;\n    display: inline-block;\n  }\n\n  ${({ color }: GenericBarProps) => color && css`\n    > div {\n      background: ${color};\n    }\n  `}\n`;\n\nconst ActionBar = styled.div`\n  background: #f0f0f0;\n  padding: 10px 10px;\n  height: 40px;\n\n  > img, > div {\n    vertical-align: middle;\n  }\n\n  &::before {\n    content: '';\n    display: inline-block;\n    vertical-align: middle;\n    height: 40px;\n  }\n`;\n\nconst ChartBar = styled.div`\n  height: 40px;\n  padding: 0 10px;\n  position: relative;\n\n  > svg {\n    transition: width 0.2s;\n  }\n\n  > span {\n    font-size: 8px;\n    position: relative;\n    padding: 0 4px;\n    transform: translateY(-50%);\n  }\n\n  & + & > svg {\n    border-top: solid 1px #000;\n  }\n`;\n\nconst SuccessBox = styled.div`\n  padding: 10px;\n  \n`;\n\ninterface CraftState {\n  progress: number\n  quality: number\n  cp: number\n  durability: number\n  buffs: EffectiveBuff[]\n}\nconst defaultState: CraftState = {\n  progress: 0,\n  quality: 0,\n  cp: testStats.cp,\n  durability: testRecipe.durability,\n  buffs: []\n};\n\nconst SimComponent = () => {\n  const [actions, set_actions] = useState([] as CraftingAction[]);\n  const [jobId, set_jobId] = useState(8);\n  const [craftsmanship, set_craftsmanship] = useState(1800);\n  const [control, set_control] = useState(1800);\n  const [cp, set_cp] = useState(defaultState.cp);\n\n  const [sim, set_sim] = useState(undefined as Simulation | undefined);\n\n  const [states, set_states] = useState([defaultState]);\n  const [statedActions, set_statedActions] = useState([] as CraftingAction[]);\n\n  const stats = new CrafterStats(\n    jobId,\n    craftsmanship,\n    control,\n    cp,\n    false,\n    80,\n    [80, 80, 80, 80, 80, 80, 80, 80]\n  );\n\n  // useEffect(() => {\n  //   const stats = new CrafterStats(\n  //     jobId,\n  //     craftsmanship,\n  //     control,\n  //     cp,\n  //     false,\n  //     80,\n  //     [80, 80, 80, 80, 80, 80, 80, 80]\n  //   );\n  //   const sim = new Simulation(\n  //     testRecipe,\n  //     actions,\n  //     stats,\n  //   );\n  //   window.console.log(sim.availableCP);\n  //   sim.run(true);\n  //   window.console.log(sim.availableCP);\n  //   window.console.log('---');\n  //   set_sim(sim);\n  //   (window as any).derp2 = sim;\n  //   window.console.log(sim);\n  // }, [\n  //   actions,\n  //   craftsmanship,\n  //   control,\n  //   cp,\n  // ]);\n\n  useEffect(() => {\n    if (actions.length < 1) {\n      set_statedActions([]);\n      set_states([defaultState]);\n      return;\n    }\n    // find how many actions match the saved one\n    let x;\n    for (x = 0; x < Math.max(actions.length, statedActions.length); x++) {\n      if (actions[x] !== statedActions[x]) {\n        break;\n      }\n    }\n    // fix simulated data starting from step x\n    const newStatedActions = statedActions.slice(0, x);\n    const newStates = states.slice(0, x + 1);\n    for (let y = x; y < actions.length; y++) {\n      newStatedActions[y] = actions[y];\n      const sim = new Simulation(\n        testRecipe,\n        newStatedActions,\n        stats,\n      );\n      sim.run(true);\n      newStates[y + 1] = {\n        progress: sim.progression,\n        quality: sim.quality,\n        cp: sim.availableCP,\n        durability: sim.durability,\n        buffs: [...sim.buffs]\n      };\n    }\n    set_statedActions(newStatedActions);\n    set_states(newStates);\n\n  }, [actions]);\n\n  const clickAction = (action: CraftingAction) => {\n    return () => {\n      set_actions([...actions, action]);\n    };\n  };\n\n  const clickJobAction = (index: number) => {\n    return () => {\n      set_actions([\n        ...actions.slice(0, index),\n        ...actions.slice(index + 1)\n      ]);\n    };\n  };\n\n  const clickJobButton = (jobId: number) => {\n    return () => {\n      set_jobId(jobId);\n    };\n  };\n\n  const clearActions = () => {\n    set_actions([]);\n  };\n\n  const latestState = states[states.length - 1];\n\n  const [draggingIndex, set_draggingIndex] = useState(undefined as undefined | number);\n  const [draggedOverIndex, set_draggedOverIndex] = useState(undefined as undefined | number);\n  const OnActionDragEnd = () => {\n    set_draggedOverIndex(undefined);\n    set_draggingIndex(undefined);\n  };\n  const OnActionDragStart = (index: number) => {\n    return (e: React.DragEvent) => {\n      set_draggingIndex(index);\n    };\n  };\n  const OnActionDragOver = (index: number) => {\n    return (e: React.DragEvent) => {\n      e.preventDefault();\n      set_draggedOverIndex(index);\n    };\n  };\n  const OnActionDrop = (index: number) => {\n    return (e: React.DragEvent) => {\n      e.preventDefault();\n      set_draggedOverIndex(undefined);\n      set_draggingIndex(undefined);\n      if (typeof draggingIndex === 'undefined' || draggingIndex === index) {\n        return;\n      }\n      const newActions = [...actions];\n      const draggedAction = newActions.splice(draggingIndex, 1)[0];\n      const targetIndex = index;\n      newActions.splice(targetIndex, 0, draggedAction);\n      set_actions(newActions);\n    };\n  };\n\n  return <div>\n    <div>\n      <GenericBar color={'#9eca4b'}>\n        <div style={{width: `${Math.min(100, latestState.progress/testRecipe.progress*100)}%`}}/>\n        <span>\n          {latestState.progress}/{testRecipe.progress} Progress\n        </span>\n      </GenericBar>\n      <GenericBar color={'#50a1bf'}>\n        <div style={{width: `${Math.min(100, latestState.quality/testRecipe.quality*100)}%`}}/>\n        <span>\n          {latestState.quality}/{testRecipe.quality} Quality\n        </span>\n      </GenericBar>\n      <GenericBar>\n        <div style={{width: `${Math.min(100, latestState.durability/testRecipe.durability*100)}%`}}/>\n        <span>\n          {latestState.durability}/{testRecipe.durability} Durability\n        </span>\n      </GenericBar>\n      <GenericBar color={'#bf7ed9'}>\n        <div style={{width: `${Math.min(100, latestState.cp/cp*100)}%`}}/>\n        <span>\n          {latestState.cp}/{cp} CP\n        </span>\n      </GenericBar>\n    </div>\n    {sim && <SuccessBox>\n      {sim.getReliabilityReport().successPercent}% Success\n    </SuccessBox>}\n    <ChartBar>\n      <svg style={{ verticalAlign: 'bottom', background: '#9eca4b' }} width={actions.length * 40} height=\"40\" xmlns=\"http://www.w3.org/2000/svg\">\n        {states.slice(1).map((state, index, others) => {\n          const progressEnd = 40 - (40 * (state.progress / testRecipe.progress));\n          const progressStart = index < 1 ? 40 : 40 - (40 * (others[index - 1].progress / testRecipe.progress))\n          return <path key={index} d={`\n            M ${index * 40} 40\n            L ${index * 40} ${progressStart}\n            C ${index * 40 + 20} ${progressStart},\n            ${index * 40 + 20} ${progressEnd},\n            ${index * 40 + 40} ${progressEnd}\n            L ${index * 40 + 40} 40\n          `} fill=\"#6e9a1b\"/>;\n        })}\n      </svg>\n      <span style={{\n        verticalAlign: 'bottom',\n        bottom: `${Math.min(40, 40*latestState.progress/testRecipe.progress)}px`,\n      }}>{latestState.progress}/{testRecipe.progress} Progress</span>\n    </ChartBar>\n    <ChartBar>\n      <svg style={{ verticalAlign: 'top', background: '#80d1ef' }} width={actions.length * 40} height=\"40\" xmlns=\"http://www.w3.org/2000/svg\">\n        {states.slice(1).map((state, index, others) => {\n          const qualityEnd = (40 * (state.quality / testRecipe.quality));\n          const qualityStart = index < 1 ? 0 : (40 * (others[index - 1].quality / testRecipe.quality))\n          return <path key={index} d={`\n            M ${index * 40} 0\n            L ${index * 40} ${qualityStart}\n            C ${index * 40 + 20} ${qualityStart},\n            ${index * 40 + 20} ${qualityEnd},\n            ${index * 40 + 40} ${qualityEnd}\n            L ${index * 40 + 40} 0\n          `} fill=\"#50a1bf\"/>;\n        })}\n      </svg>\n      <span style={{\n        verticalAlign: 'top',\n        top: `${Math.min(40, 40*latestState.quality/testRecipe.quality)}px`,\n      }}>{latestState.quality}/{testRecipe.quality} Quality</span>\n    </ChartBar>\n    <ActionBar>\n      {actions.map((action, index) => <img\n        key={index}\n        draggable={true}\n        onDragStart={OnActionDragStart(index)}\n        onDragOver={OnActionDragOver(index)}\n        onDragEnd={OnActionDragEnd}\n        onDrop={OnActionDrop(index)}\n        src={process.env.PUBLIC_URL + (Icons as any)[action.getId(jobId)]}\n        onClick={clickJobAction(index)}\n        style={{\n          marginLeft: draggingIndex !== undefined && index === draggedOverIndex && draggedOverIndex < draggingIndex ? '5px' : '',\n          marginRight: draggingIndex !== undefined && index === draggedOverIndex && draggedOverIndex > draggingIndex ? '5px' : '',\n          opacity: index === draggingIndex ? 0.5 : 1\n        }}\n      />)}\n    </ActionBar>\n    <ChartBar>\n      <svg style={{ verticalAlign: 'bottom', background: '#eee' }} width={actions.length * 40} height=\"40\" xmlns=\"http://www.w3.org/2000/svg\">\n        {states.slice(1).map((state, index, others) => {\n          const cpEnd = 40 - (40 * (state.durability / testRecipe.durability));\n          const cpStart = index < 1 ? 0 : 40 - (40 * (others[index - 1].durability / testRecipe.durability))\n          return <path key={index} d={`\n            M ${index * 40} 40\n            L ${index * 40} ${cpStart}\n            C ${index * 40 + 20} ${cpStart},\n            ${index * 40 + 20} ${cpEnd},\n            ${index * 40 + 40} ${cpEnd}\n            L ${index * 40 + 40} 40\n          `} fill=\"#ccc\"/>;\n        })}\n      </svg>\n      <span style={{\n        verticalAlign: 'bottom',\n        bottom: `${Math.min(40, 40*latestState.durability/testRecipe.durability)}px`,\n      }}>{latestState.durability}/{testRecipe.durability} Durability</span>\n    </ChartBar>\n    <ChartBar>\n      <svg style={{ verticalAlign: 'top', background: '#efaeff' }} width={actions.length * 40} height=\"40\" xmlns=\"http://www.w3.org/2000/svg\">\n        {states.slice(1).map((state, index, others) => {\n          const cpEnd = (40 * (state.cp / testStats.cp));\n          const cpStart = index < 1 ? 40 : (40 * (others[index - 1].cp / testStats.cp))\n          return <path key={index} d={`\n            M ${index * 40} 0\n            L ${index * 40} ${cpStart}\n            C ${index * 40 + 20} ${cpStart},\n            ${index * 40 + 20} ${cpEnd},\n            ${index * 40 + 40} ${cpEnd}\n            L ${index * 40 + 40} 0\n          `} fill=\"#bf7ed9\"/>;\n        })}\n      </svg>\n      <span style={{\n        verticalAlign: 'top',\n        top: `${Math.min(40, 40*latestState.cp/testStats.cp)}px`,\n      }}>{latestState.cp}/{testStats.cp} CP</span>\n    </ChartBar>\n    <JobButton onClick={clearActions} active={true}>Clear</JobButton>\n    <div>\n      {jobs.map((n, i) => n && <JobButton\n        active={jobId === i}\n        key={i}\n        onClick={clickJobButton(i)}>\n        {n}\n      </JobButton>)}\n    </div>\n    {all.map((i, index) => <img\n      key={index}\n      src={process.env.PUBLIC_URL + (Icons as any)[i.action.getId(jobId)]}\n      onClick={clickAction(i.action)}\n    />)}\n    <pre>\n      {JSON.stringify(sim, null, 2)}\n    </pre>\n  </div>;\n};\n\nexport default SimComponent;\n","import React from 'react';\nimport styled, { css } from 'styled-components/macro';\n\nimport Sim from './components/Sim';\n\nconst Wrapper = styled.div`\n  padding: 40px 20px;\n`;\nconst App: React.FC = () => {\n  return (\n    <Wrapper>\n      <Sim/>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}