{"version":3,"sources":["components/Sim/Icons.tsx","components/Sim/Bars.tsx","components/Sim/Chart.tsx","components/Sim/IQBed.tsx","components/Sim/BuffTimeline.tsx","components/Sim/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Icons","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","276","277","278","279","283","284","285","286","287","4574","4575","4576","4577","4578","4579","4580","4581","4597","4598","4599","4600","4601","4602","4603","4604","4607","4608","4609","4610","4611","4612","4613","4614","4615","4616","4617","4618","4619","4620","4621","4622","100001","100002","100003","100004","100005","100007","100008","100010","100015","100016","100017","100018","100019","100021","100022","100023","100030","100031","100032","100033","100034","100035","100037","100038","100039","100040","100045","100046","100047","100048","100049","100051","100052","100053","100060","100061","100062","100063","100064","100065","100067","100068","100069","100070","100075","100076","100077","100078","100079","100080","100081","100082","100083","100090","100091","100092","100093","100094","100096","100097","100098","100099","100105","100106","100107","100108","100109","100110","100111","100112","100113","100128","100129","100130","100131","100132","100133","100134","100135","100136","100137","100138","100139","100140","100141","100142","100143","100144","100145","100146","100147","100148","100149","100150","100151","100152","100153","100154","100156","100157","100158","100159","100160","100161","100162","100163","100164","100165","100166","100167","100168","100169","100170","100171","100172","100174","100175","100176","100178","100179","100180","100181","100182","100183","100184","100185","100186","100187","100188","100189","100190","100192","100193","100194","100195","100196","100197","100198","100199","100200","100201","100202","100203","100204","100205","100206","100207","100208","100209","100210","100211","100212","100213","100214","100215","100216","100217","100218","100219","100220","100221","100222","100223","100224","100225","100226","100227","100228","100229","100230","100231","100232","100233","100234","100235","100236","100237","100238","100239","100240","100241","100242","100243","100244","100245","100246","100247","100248","100249","100250","100251","100252","100253","100254","100255","100256","100257","100258","100259","100260","100261","100262","100263","100264","100265","100266","100267","100268","100269","100270","100271","100272","100273","100274","100275","100276","100277","100278","100279","100280","100281","100282","100283","100284","100285","100286","100287","100288","100289","100290","100291","100292","100293","100294","100295","100296","100297","100298","100299","100300","100301","100302","100303","100304","100305","100306","100307","100308","100309","100310","100311","100312","100313","100314","100315","100316","100317","100318","100319","100320","100321","100322","100323","100324","100325","100326","100327","100328","100329","100330","100331","100332","100333","100334","100335","100336","100337","100338","100339","100340","100341","100342","100343","100344","100345","100346","ChartMode","styled","div","withConfig","displayName","componentId","_ref","color","css","_templateObject","ChartBar","Chart","props","colWidth","rowHeight","domain","data","mode","label","bgColor","maxValue","react_default","a","createElement","style","verticalAlign","DOWNWARDS","background","width","length","height","xmlns","UPWARDS","d","concat","map","value","index","others","progressEnd","progressStart","join","fill","qualityEnd","qualityStart","bottom","Math","min","top","IQLine","StackNumber","full","IQBed_templateObject","IQBed","states","IQStacks","slice","st","IQ","buffs","find","buff","stacks","IQLines","start","forEach","stack","stackIndex","push","end","IQBed_IQLine","IQStack","IQStackIndex","key","left","leaves","x","j","leafColor","stroke","_","leafIndex","xx","yy","y","IQLineIndex","lineThickness","gap","strokeWidth","buffLineColors","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","BuffTimelineSVG","svg","BuffTimeline","showBuffLineTooltip","hideBuffLineTooltip","buffLines","state","stateIndex","filter","buffIndex","filteredBuffs","thisBuff","existingBuff","b","buffId","points","startX","buffLineThickness","startY","endX","endY","maxBuffHeight","max","apply","Object","toConsumableArray","buffLine","point","pointIndex","pointD","prevPoint","buffLineSpacing","onMouseOver","onMouseOut","jobs","buffLineNames","actionsByType","ActionType","PROGRESSION","CP_RECOVERY","OTHER","QUALITY","REPAIR","BUFF","SPECIALTY","type","CraftingActionsRegistry","getActionsByType","allActions","ALL_ACTIONS","act","action","JobButton","active","Sim_templateObject","rotate","keyframes","_templateObject2","ActionBar","BuffLines","BuffLineTooltip","DraggedImage","img","_ref2","isDragged","_templateObject3","_ref3","isFailed","_templateObject4","ScrollingBar","ActionTypeSet","ActionPalletteImage","_ref4","_templateObject5","ShareInput","input","LazyStats","SimComponent","location","cache","useRef","JSON","stringify","current","cachedData","parse","localStorage","getItem","e","_useState","useState","recipeRLvl","_useState2","slicedToArray","set_recipeRLvl","_useState3","recipeLvl","_useState4","set_recipeLvl","_useState5","recipeProg","_useState6","set_recipeProg","_useState7","recipeQual","_useState8","set_recipeQual","_useState9","recipeDur","_useState10","set_recipeDur","_useState11","recipeSugCraft","_useState12","set_recipeSugCraft","_useState13","recipeSugControl","_useState14","set_recipeSugControl","_useState15","jobId","_useState16","set_jobId","_useState17","jobCraftsmanship","_useState18","set_jobCraftsmanship","_useState19","jobControl","_useState20","set_jobControl","_useState21","jobCP","_useState22","set_jobCP","_useState23","jobLvl","_useState24","set_jobLvl","_useState25","undefined","jobIsSpecialist","_useState26","set_jobIsSpecialist","stats","CrafterStats","_useState27","job","lvl","durability","progress","quality","rlvl","materialQualityFactor","id","suggestedControl","suggestedCraftsmanship","quickSynth","ingredients","hq","_useState28","testRecipe","set_testRecipe","defaultState","cp","recipe","useEffect","objectSpread","cachedActions","importFromCraftOpt","actionsString","_useState29","_useState30","actions","set_actions","scrollingBarRef","values","queryString","search","arrayFormat","rrl","parseInt","isNaN","rl","rp","rq","rd","rscr","rsco","ji","jcr","jco","jcp","jl","jis","yact","passedActions","split","actIndex","zact","acts","createFromIds","localStorageCache","exportToCraftOpt","serializeRotation","setItem","tr","_useState31","_useState32","set_states","_useState33","_useState34","statedActions","set_statedActions","_useState35","_useState36","successStates","set_successStates","allGood","didStatsChange","didRecipeChange","newStatedActions","newStates","sim","Simulation","run","progression","availableCP","newSuccessStates","steps","step","success","_useState37","_useState38","draggingIndex","set_draggingIndex","_useState39","_useState40","draggedOverIndex","set_draggedOverIndex","clickJobAction","clickJobButton","moveActionFromTo","indexFrom","indexTo","newActions","draggedAction","splice","addNewActionAtIndex","_useState41","_useState42","newActionDrag","set_newActionDrag","OnActionDragEnd","OnActionDragStart","OnActionDragOver","preventDefault","OnActionDrop","OnNewActionDragEnd","OnActionContextMenu","actionBarRef","OnNewActionTouchStart","OnNewActionTouchEnd","_useState43","_useState44","shareUrl","set_shareUrl","focusShareField","currentTarget","setSelectionRange","_useState45","_useState46","exportString","set_exportString","_useState47","_useState48","buffLineTooltip","set_buffLineTooltip","_useState49","_useState50","buffLineTooltipPosition","set_buffLineTooltipPosition","onTouchMove","touches","_e$touches$","clientX","clientY","rect","getBoundingClientRect","actionIndex","floor","ref","el","Sim_Chart","Sim_IQBed","onTouchStart","onTouchEnd","hasBorderLeft","alt","title","getId","draggable","onDragStart","onDragOver","onDragEnd","onDrop","src","process","onClick","borderLeft","borderRight","onContextMenu","onMouseMove","Sim_BuffTimeline","someActions","typeIndex","i","requestAnimationFrame","scrollTo","behavior","scrollWidth","n","onChange","checked","url","window","href","yacts","matchingAction","ac","indexOf","newShareUrl","readOnly","newExportString","importString","prompt","stats1","stats2","craftsmanship","_control","level","specialist","recipe1","recipe2","Wrapper","FootNote","App","react_router_dom","react_router","path","component","Sim","target","rel","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kRAAaA,EAAQ,CACnBC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,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","file":"static/js/main.97326cd2.chunk.js","sourcesContent":["export const Icons = {\n  \"244\": \"/i/001000/001953.png\",\n  \"245\": \"/i/001000/001953.png\",\n  \"246\": \"/i/001000/001953.png\",\n  \"247\": \"/i/001000/001953.png\",\n  \"248\": \"/i/001000/001953.png\",\n  \"249\": \"/i/001000/001953.png\",\n  \"250\": \"/i/001000/001953.png\",\n  \"251\": \"/i/001000/001953.png\",\n  \"252\": \"/i/001000/001951.png\",\n  \"253\": \"/i/001000/001951.png\",\n  \"254\": \"/i/001000/001951.png\",\n  \"255\": \"/i/001000/001951.png\",\n  \"256\": \"/i/001000/001951.png\",\n  \"257\": \"/i/001000/001951.png\",\n  \"258\": \"/i/001000/001951.png\",\n  \"259\": \"/i/001000/001951.png\",\n  \"260\": \"/i/001000/001955.png\",\n  \"261\": \"/i/001000/001955.png\",\n  \"262\": \"/i/001000/001955.png\",\n  \"263\": \"/i/001000/001955.png\",\n  \"264\": \"/i/001000/001955.png\",\n  \"265\": \"/i/001000/001955.png\",\n  \"266\": \"/i/001000/001955.png\",\n  \"267\": \"/i/001000/001955.png\",\n  \"276\": \"/i/001000/001506.png\",\n  \"277\": \"/i/001000/001556.png\",\n  \"278\": \"/i/001000/001668.png\",\n  \"279\": \"/i/001000/001706.png\",\n  \"283\": \"/i/001000/001571.png\",\n  \"284\": \"/i/001000/001672.png\",\n  \"285\": \"/i/001000/001721.png\",\n  \"286\": \"/i/001000/001822.png\",\n  \"287\": \"/i/001000/001872.png\",\n  \"4574\": \"/i/001000/001971.png\",\n  \"4575\": \"/i/001000/001971.png\",\n  \"4576\": \"/i/001000/001971.png\",\n  \"4577\": \"/i/001000/001971.png\",\n  \"4578\": \"/i/001000/001971.png\",\n  \"4579\": \"/i/001000/001971.png\",\n  \"4580\": \"/i/001000/001971.png\",\n  \"4581\": \"/i/001000/001971.png\",\n  \"4597\": \"/i/001000/001979.png\",\n  \"4598\": \"/i/001000/001979.png\",\n  \"4599\": \"/i/001000/001979.png\",\n  \"4600\": \"/i/001000/001979.png\",\n  \"4601\": \"/i/001000/001979.png\",\n  \"4602\": \"/i/001000/001979.png\",\n  \"4603\": \"/i/001000/001979.png\",\n  \"4604\": \"/i/001000/001979.png\",\n  \"4607\": \"/i/001000/001974.png\",\n  \"4608\": \"/i/001000/001974.png\",\n  \"4609\": \"/i/001000/001974.png\",\n  \"4610\": \"/i/001000/001974.png\",\n  \"4611\": \"/i/001000/001974.png\",\n  \"4612\": \"/i/001000/001974.png\",\n  \"4613\": \"/i/001000/001974.png\",\n  \"4614\": \"/i/001000/001974.png\",\n  \"4615\": \"/i/001000/001978.png\",\n  \"4616\": \"/i/001000/001978.png\",\n  \"4617\": \"/i/001000/001978.png\",\n  \"4618\": \"/i/001000/001978.png\",\n  \"4619\": \"/i/001000/001978.png\",\n  \"4620\": \"/i/001000/001978.png\",\n  \"4621\": \"/i/001000/001978.png\",\n  \"4622\": \"/i/001000/001978.png\",\n  \"100001\": \"/i/001000/001501.png\",\n  \"100002\": \"/i/001000/001502.png\",\n  \"100003\": \"/i/001000/001952.png\",\n  \"100004\": \"/i/001000/001516.png\",\n  \"100005\": \"/i/001000/001956.png\",\n  \"100007\": \"/i/001000/001515.png\",\n  \"100008\": \"/i/001000/001517.png\",\n  \"100010\": \"/i/001000/001954.png\",\n  \"100015\": \"/i/001000/001551.png\",\n  \"100016\": \"/i/001000/001552.png\",\n  \"100017\": \"/i/001000/001952.png\",\n  \"100018\": \"/i/001000/001566.png\",\n  \"100019\": \"/i/001000/001956.png\",\n  \"100021\": \"/i/001000/001565.png\",\n  \"100022\": \"/i/001000/001567.png\",\n  \"100023\": \"/i/001000/001954.png\",\n  \"100030\": \"/i/001000/001601.png\",\n  \"100031\": \"/i/001000/001602.png\",\n  \"100032\": \"/i/001000/001952.png\",\n  \"100033\": \"/i/001000/001619.png\",\n  \"100034\": \"/i/001000/001616.png\",\n  \"100035\": \"/i/001000/001956.png\",\n  \"100037\": \"/i/001000/001615.png\",\n  \"100038\": \"/i/001000/001617.png\",\n  \"100039\": \"/i/001000/001622.png\",\n  \"100040\": \"/i/001000/001954.png\",\n  \"100045\": \"/i/001000/001701.png\",\n  \"100046\": \"/i/001000/001702.png\",\n  \"100047\": \"/i/001000/001952.png\",\n  \"100048\": \"/i/001000/001716.png\",\n  \"100049\": \"/i/001000/001956.png\",\n  \"100051\": \"/i/001000/001715.png\",\n  \"100052\": \"/i/001000/001717.png\",\n  \"100053\": \"/i/001000/001954.png\",\n  \"100060\": \"/i/001000/001751.png\",\n  \"100061\": \"/i/001000/001752.png\",\n  \"100062\": \"/i/001000/001952.png\",\n  \"100063\": \"/i/001000/001768.png\",\n  \"100064\": \"/i/001000/001765.png\",\n  \"100065\": \"/i/001000/001956.png\",\n  \"100067\": \"/i/001000/001764.png\",\n  \"100068\": \"/i/001000/001766.png\",\n  \"100069\": \"/i/001000/001771.png\",\n  \"100070\": \"/i/001000/001954.png\",\n  \"100075\": \"/i/001000/001651.png\",\n  \"100076\": \"/i/001000/001652.png\",\n  \"100077\": \"/i/001000/001952.png\",\n  \"100078\": \"/i/001000/001665.png\",\n  \"100079\": \"/i/001000/001956.png\",\n  \"100080\": \"/i/001000/001664.png\",\n  \"100081\": \"/i/001000/001666.png\",\n  \"100082\": \"/i/001000/001954.png\",\n  \"100083\": \"/i/001000/001673.png\",\n  \"100090\": \"/i/001000/001801.png\",\n  \"100091\": \"/i/001000/001802.png\",\n  \"100092\": \"/i/001000/001952.png\",\n  \"100093\": \"/i/001000/001816.png\",\n  \"100094\": \"/i/001000/001956.png\",\n  \"100096\": \"/i/001000/001815.png\",\n  \"100097\": \"/i/001000/001817.png\",\n  \"100098\": \"/i/001000/001819.png\",\n  \"100099\": \"/i/001000/001954.png\",\n  \"100105\": \"/i/001000/001851.png\",\n  \"100106\": \"/i/001000/001852.png\",\n  \"100107\": \"/i/001000/001952.png\",\n  \"100108\": \"/i/001000/001868.png\",\n  \"100109\": \"/i/001000/001865.png\",\n  \"100110\": \"/i/001000/001956.png\",\n  \"100111\": \"/i/001000/001864.png\",\n  \"100112\": \"/i/001000/001866.png\",\n  \"100113\": \"/i/001000/001954.png\",\n  \"100128\": \"/i/001000/001524.png\",\n  \"100129\": \"/i/001000/001574.png\",\n  \"100130\": \"/i/001000/001625.png\",\n  \"100131\": \"/i/001000/001676.png\",\n  \"100132\": \"/i/001000/001724.png\",\n  \"100133\": \"/i/001000/001774.png\",\n  \"100134\": \"/i/001000/001825.png\",\n  \"100135\": \"/i/001000/001875.png\",\n  \"100136\": \"/i/001000/001876.png\",\n  \"100137\": \"/i/001000/001959.png\",\n  \"100138\": \"/i/001000/001959.png\",\n  \"100139\": \"/i/001000/001959.png\",\n  \"100140\": \"/i/001000/001959.png\",\n  \"100141\": \"/i/001000/001959.png\",\n  \"100142\": \"/i/001000/001959.png\",\n  \"100143\": \"/i/001000/001959.png\",\n  \"100144\": \"/i/001000/001959.png\",\n  \"100145\": \"/i/001000/001960.png\",\n  \"100146\": \"/i/001000/001960.png\",\n  \"100147\": \"/i/001000/001960.png\",\n  \"100148\": \"/i/001000/001960.png\",\n  \"100149\": \"/i/001000/001960.png\",\n  \"100150\": \"/i/001000/001960.png\",\n  \"100151\": \"/i/001000/001960.png\",\n  \"100152\": \"/i/001000/001960.png\",\n  \"100153\": \"/i/001000/001963.png\",\n  \"100154\": \"/i/001000/001963.png\",\n  \"100156\": \"/i/001000/001963.png\",\n  \"100157\": \"/i/001000/001963.png\",\n  \"100158\": \"/i/001000/001963.png\",\n  \"100159\": \"/i/001000/001963.png\",\n  \"100160\": \"/i/001000/001963.png\",\n  \"100161\": \"/i/001000/001964.png\",\n  \"100162\": \"/i/001000/001964.png\",\n  \"100163\": \"/i/001000/001964.png\",\n  \"100164\": \"/i/001000/001964.png\",\n  \"100165\": \"/i/001000/001964.png\",\n  \"100166\": \"/i/001000/001964.png\",\n  \"100167\": \"/i/001000/001964.png\",\n  \"100168\": \"/i/001000/001964.png\",\n  \"100169\": \"/i/001000/001962.png\",\n  \"100170\": \"/i/001000/001962.png\",\n  \"100171\": \"/i/001000/001962.png\",\n  \"100172\": \"/i/001000/001962.png\",\n  \"100174\": \"/i/001000/001962.png\",\n  \"100175\": \"/i/001000/001962.png\",\n  \"100176\": \"/i/001000/001962.png\",\n  \"100178\": \"/i/001000/001677.png\",\n  \"100179\": \"/i/001000/001969.png\",\n  \"100180\": \"/i/001000/001969.png\",\n  \"100181\": \"/i/001000/001969.png\",\n  \"100182\": \"/i/001000/001969.png\",\n  \"100183\": \"/i/001000/001969.png\",\n  \"100184\": \"/i/001000/001969.png\",\n  \"100185\": \"/i/001000/001969.png\",\n  \"100186\": \"/i/001000/001969.png\",\n  \"100187\": \"/i/001000/001961.png\",\n  \"100188\": \"/i/001000/001961.png\",\n  \"100189\": \"/i/001000/001961.png\",\n  \"100190\": \"/i/001000/001961.png\",\n  \"100192\": \"/i/001000/001961.png\",\n  \"100193\": \"/i/001000/001961.png\",\n  \"100194\": \"/i/001000/001961.png\",\n  \"100195\": \"/i/001000/001973.png\",\n  \"100196\": \"/i/001000/001973.png\",\n  \"100197\": \"/i/001000/001973.png\",\n  \"100198\": \"/i/001000/001973.png\",\n  \"100199\": \"/i/001000/001973.png\",\n  \"100200\": \"/i/001000/001973.png\",\n  \"100201\": \"/i/001000/001973.png\",\n  \"100202\": \"/i/001000/001973.png\",\n  \"100203\": \"/i/001000/001972.png\",\n  \"100204\": \"/i/001000/001972.png\",\n  \"100205\": \"/i/001000/001972.png\",\n  \"100206\": \"/i/001000/001972.png\",\n  \"100207\": \"/i/001000/001972.png\",\n  \"100208\": \"/i/001000/001972.png\",\n  \"100209\": \"/i/001000/001972.png\",\n  \"100210\": \"/i/001000/001972.png\",\n  \"100211\": \"/i/001000/001970.png\",\n  \"100212\": \"/i/001000/001970.png\",\n  \"100213\": \"/i/001000/001970.png\",\n  \"100214\": \"/i/001000/001970.png\",\n  \"100215\": \"/i/001000/001970.png\",\n  \"100216\": \"/i/001000/001970.png\",\n  \"100217\": \"/i/001000/001970.png\",\n  \"100218\": \"/i/001000/001970.png\",\n  \"100219\": \"/i/001000/001534.png\",\n  \"100220\": \"/i/001000/001583.png\",\n  \"100221\": \"/i/001000/001634.png\",\n  \"100222\": \"/i/001000/001685.png\",\n  \"100223\": \"/i/001000/001733.png\",\n  \"100224\": \"/i/001000/001783.png\",\n  \"100225\": \"/i/001000/001834.png\",\n  \"100226\": \"/i/001000/001885.png\",\n  \"100227\": \"/i/001000/001535.png\",\n  \"100228\": \"/i/001000/001584.png\",\n  \"100229\": \"/i/001000/001635.png\",\n  \"100230\": \"/i/001000/001686.png\",\n  \"100231\": \"/i/001000/001734.png\",\n  \"100232\": \"/i/001000/001784.png\",\n  \"100233\": \"/i/001000/001835.png\",\n  \"100234\": \"/i/001000/001886.png\",\n  \"100235\": \"/i/001000/001536.png\",\n  \"100236\": \"/i/001000/001585.png\",\n  \"100237\": \"/i/001000/001636.png\",\n  \"100238\": \"/i/001000/001687.png\",\n  \"100239\": \"/i/001000/001735.png\",\n  \"100240\": \"/i/001000/001785.png\",\n  \"100241\": \"/i/001000/001836.png\",\n  \"100242\": \"/i/001000/001887.png\",\n  \"100243\": \"/i/001000/001537.png\",\n  \"100244\": \"/i/001000/001586.png\",\n  \"100245\": \"/i/001000/001637.png\",\n  \"100246\": \"/i/001000/001688.png\",\n  \"100247\": \"/i/001000/001736.png\",\n  \"100248\": \"/i/001000/001786.png\",\n  \"100249\": \"/i/001000/001837.png\",\n  \"100250\": \"/i/001000/001888.png\",\n  \"100251\": \"/i/001000/001965.png\",\n  \"100252\": \"/i/001000/001965.png\",\n  \"100253\": \"/i/001000/001965.png\",\n  \"100254\": \"/i/001000/001965.png\",\n  \"100255\": \"/i/001000/001965.png\",\n  \"100256\": \"/i/001000/001965.png\",\n  \"100257\": \"/i/001000/001965.png\",\n  \"100258\": \"/i/001000/001965.png\",\n  \"100259\": \"/i/001000/001966.png\",\n  \"100260\": \"/i/001000/001966.png\",\n  \"100261\": \"/i/001000/001966.png\",\n  \"100262\": \"/i/001000/001966.png\",\n  \"100263\": \"/i/001000/001966.png\",\n  \"100264\": \"/i/001000/001966.png\",\n  \"100265\": \"/i/001000/001966.png\",\n  \"100266\": \"/i/001000/001966.png\",\n  \"100267\": \"/i/001000/001967.png\",\n  \"100268\": \"/i/001000/001967.png\",\n  \"100269\": \"/i/001000/001967.png\",\n  \"100270\": \"/i/001000/001967.png\",\n  \"100271\": \"/i/001000/001967.png\",\n  \"100272\": \"/i/001000/001967.png\",\n  \"100273\": \"/i/001000/001967.png\",\n  \"100274\": \"/i/001000/001967.png\",\n  \"100275\": \"/i/001000/001968.png\",\n  \"100276\": \"/i/001000/001968.png\",\n  \"100277\": \"/i/001000/001968.png\",\n  \"100278\": \"/i/001000/001968.png\",\n  \"100279\": \"/i/001000/001968.png\",\n  \"100280\": \"/i/001000/001968.png\",\n  \"100281\": \"/i/001000/001968.png\",\n  \"100282\": \"/i/001000/001968.png\",\n  \"100283\": \"/i/001000/001981.png\",\n  \"100284\": \"/i/001000/001981.png\",\n  \"100285\": \"/i/001000/001981.png\",\n  \"100286\": \"/i/001000/001981.png\",\n  \"100287\": \"/i/001000/001981.png\",\n  \"100288\": \"/i/001000/001981.png\",\n  \"100289\": \"/i/001000/001981.png\",\n  \"100290\": \"/i/001000/001981.png\",\n  \"100291\": \"/i/001000/001980.png\",\n  \"100292\": \"/i/001000/001980.png\",\n  \"100293\": \"/i/001000/001980.png\",\n  \"100294\": \"/i/001000/001980.png\",\n  \"100295\": \"/i/001000/001980.png\",\n  \"100296\": \"/i/001000/001980.png\",\n  \"100297\": \"/i/001000/001980.png\",\n  \"100298\": \"/i/001000/001980.png\",\n  \"100299\": \"/i/001000/001507.png\",\n  \"100300\": \"/i/001000/001557.png\",\n  \"100301\": \"/i/001000/001607.png\",\n  \"100302\": \"/i/001000/001657.png\",\n  \"100303\": \"/i/001000/001707.png\",\n  \"100304\": \"/i/001000/001757.png\",\n  \"100305\": \"/i/001000/001807.png\",\n  \"100306\": \"/i/001000/001857.png\",\n  \"100307\": \"/i/001000/001976.png\",\n  \"100308\": \"/i/001000/001976.png\",\n  \"100309\": \"/i/001000/001976.png\",\n  \"100310\": \"/i/001000/001976.png\",\n  \"100311\": \"/i/001000/001976.png\",\n  \"100312\": \"/i/001000/001976.png\",\n  \"100313\": \"/i/001000/001976.png\",\n  \"100314\": \"/i/001000/001976.png\",\n  \"100315\": \"/i/001000/001514.png\",\n  \"100316\": \"/i/001000/001564.png\",\n  \"100317\": \"/i/001000/001614.png\",\n  \"100318\": \"/i/001000/001663.png\",\n  \"100319\": \"/i/001000/001714.png\",\n  \"100320\": \"/i/001000/001763.png\",\n  \"100321\": \"/i/001000/001814.png\",\n  \"100322\": \"/i/001000/001863.png\",\n  \"100323\": \"/i/001000/001503.png\",\n  \"100324\": \"/i/001000/001553.png\",\n  \"100325\": \"/i/001000/001603.png\",\n  \"100326\": \"/i/001000/001653.png\",\n  \"100327\": \"/i/001000/001703.png\",\n  \"100328\": \"/i/001000/001753.png\",\n  \"100329\": \"/i/001000/001803.png\",\n  \"100330\": \"/i/001000/001853.png\",\n  \"100331\": \"/i/001000/001977.png\",\n  \"100332\": \"/i/001000/001977.png\",\n  \"100333\": \"/i/001000/001977.png\",\n  \"100334\": \"/i/001000/001977.png\",\n  \"100335\": \"/i/001000/001977.png\",\n  \"100336\": \"/i/001000/001977.png\",\n  \"100337\": \"/i/001000/001977.png\",\n  \"100338\": \"/i/001000/001977.png\",\n  \"100339\": \"/i/001000/001975.png\",\n  \"100340\": \"/i/001000/001975.png\",\n  \"100341\": \"/i/001000/001975.png\",\n  \"100342\": \"/i/001000/001975.png\",\n  \"100343\": \"/i/001000/001975.png\",\n  \"100344\": \"/i/001000/001975.png\",\n  \"100345\": \"/i/001000/001975.png\",\n  \"100346\": \"/i/001000/001975.png\"\n}","import React from 'react';\n\nimport styled, { css } from 'styled-components/macro';\n\ninterface GenericBarProps {\n  color?: string\n}\nconst GenericBar = styled.div`\n  width: 300px;\n  height: 20px;\n  background: #eee;\n  margin: 10px;\n  font-size: 10px;\n  line-height: 20px;\n  white-space: nowrap;\n\n  > div, span {\n    vertical-align: middle;\n  }\n\n  > span {\n    margin: 0 4px;\n  }\n\n  > div {\n    height: 100%;\n    width: 100%;\n    transition: width 0.3s;\n    background: #ccc;\n    display: inline-block;\n  }\n\n  ${({ color }: GenericBarProps) => color && css`\n    > div {\n      background: ${color};\n    }\n  `}\n`;\n\ninterface Props {\n  currentProgress: number\n  maxProgress: number\n  currentQuality: number\n  maxQuality: number\n  currentDurability: number\n  maxDurability: number\n  currentCP: number\n  maxCP: number\n}\nconst Bars = (props: Props) => {\n  const {\n    currentProgress,\n    maxProgress,\n    currentQuality,\n    maxQuality,\n    currentDurability,\n    maxDurability,\n    currentCP,\n    maxCP,\n  } = props;\n  return <div>\n    <GenericBar color={'#9eca4b'}>\n      <div style={{width: `${Math.min(100, currentProgress/maxProgress*100)}%`}}/>\n      <span>\n        {currentProgress}/{maxProgress} Progress\n      </span>\n    </GenericBar>\n    <GenericBar color={'#50a1bf'}>\n      <div style={{width: `${Math.min(100, currentQuality/maxQuality*100)}%`}}/>\n      <span>\n        {currentQuality}/{maxQuality} Quality\n      </span>\n    </GenericBar>\n    <GenericBar>\n      <div style={{width: `${Math.min(100, currentDurability/maxDurability*100)}%`}}/>\n      <span>\n        {currentDurability}/{maxDurability} Durability\n      </span>\n    </GenericBar>\n    <GenericBar color={'#bf7ed9'}>\n      <div style={{width: `${Math.min(100, currentCP/maxCP*100)}%`}}/>\n      <span>\n        {currentCP}/{maxCP} CP\n      </span>\n    </GenericBar>\n  </div>\n};\n\nexport default Bars;","import React from 'react';\n\nimport styled from 'styled-components/macro';\n\nexport enum ChartMode {\n  UPWARDS = 0,\n  DOWNWARDS = 1,\n}\n\nconst ChartBar = styled.div`\n  height: 40px;\n  padding: 0 10px;\n  position: relative;\n  white-space: nowrap;\n\n  > svg {\n    transition: width 0.2s;\n  }\n\n  > span {\n    font-size: 8px;\n    position: relative;\n    padding: 0 4px;\n    transform: translateY(-50%);\n  }\n\n  & + & > svg {\n    border-top: solid 1px #000;\n  }\n`;\n\ninterface ChartProps {\n  colWidth: number\n  rowHeight: number\n  domain: number[]\n  data: number[]\n  mode: ChartMode\n  color: string\n  label: string\n  bgColor: string\n}\n\nconst Chart = (props: ChartProps) => {\n  const {\n    colWidth,\n    rowHeight,\n    domain,\n    data,\n    mode,\n    color,\n    label,\n    bgColor\n  } = props;\n\n  const maxValue = domain[1] === 0 ? 1 : domain[1];\n\n  return <ChartBar>\n    <svg style={{\n      verticalAlign: mode === ChartMode.DOWNWARDS ? 'bottom' : 'top',\n      background: bgColor\n    }} width={(data.length - 1) * colWidth} height={rowHeight} xmlns=\"http://www.w3.org/2000/svg\">\n      {mode === ChartMode.UPWARDS && <path d={`\n        M 0 40\n        L 0 ${rowHeight - (rowHeight * data[0] / maxValue)}\n        ${data.map((value, index, others) => {\n          if (index < 1) {\n            return '';\n          }\n          const progressEnd = rowHeight - (rowHeight * (value / maxValue));\n          const progressStart = rowHeight - (rowHeight * (others[index - 1] / maxValue));\n          return `C ${(index - 1) * colWidth + colWidth / 2} ${progressStart}\n                    ${(index - 1) * colWidth + colWidth / 2} ${progressEnd}\n                    ${(index - 1) * colWidth + colWidth} ${progressEnd}`;\n        }).join(\"\\n\")}\n        L ${(data.length) * colWidth} ${rowHeight}\n      `} fill={color}/>}\n      {mode === ChartMode.DOWNWARDS && <path d={`\n        M 0 0\n        L 0 ${(rowHeight * data[0] / maxValue)}\n        ${data.map((value, index, others) => {\n          if (index < 1) {\n            return '';\n          }\n          const qualityEnd = (rowHeight * (value / maxValue));\n          const qualityStart = (rowHeight * (others[index - 1] / maxValue))\n          return `C ${(index - 1) * colWidth + colWidth / 2} ${qualityStart}\n                    ${(index - 1) * colWidth + colWidth / 2} ${qualityEnd}\n                    ${(index - 1) * colWidth + colWidth} ${qualityEnd}`;\n        }).join(\"\\n\")}\n        L ${(data.length) * colWidth} 0\n      `} fill={color}/>}\n    </svg>\n    {mode === ChartMode.UPWARDS && <span style={{\n      verticalAlign: 'bottom',\n      bottom: `${Math.min(rowHeight, rowHeight*data[data.length - 1]/maxValue)}px`,\n    }}>{data[data.length - 1]}/{maxValue} {label}</span>}\n    {mode === ChartMode.DOWNWARDS && <span style={{\n      verticalAlign: 'top',\n      top: `${Math.min(40, 40*data[data.length - 1]/maxValue)}px`,\n    }}>{data[data.length - 1]}/{maxValue} {label}</span>}\n  </ChartBar>;\n};\n\nexport default Chart;\n","import React from 'react';\n\nimport styled, { css } from 'styled-components/macro';\n\nimport { CraftState } from './index';\n\nconst IQLine = styled.div`\n  padding: 0 10px;\n  position: relative;\n  bottom: -10px;\n\n  > svg {\n    height: 40px;\n    display: block;\n\n    > path {\n      cursor: pointer;\n      stroke: #6e9a1b;\n    }\n  }\n`;\n\ninterface StackNumberProps {\n  full?: boolean\n}\nconst StackNumber = styled.div`\n  position: absolute;\n  color: #666;\n  font-size: 10px;\n  transform: translateX(-50%);\n\n  ${({ full }: StackNumberProps) => full && css`\n    color: #000;\n  `}\n`;\n\ninterface IQBedProps {\n  states: CraftState[]\n  colWidth: number\n}\nconst IQBed = (props: IQBedProps) => {\n  const { states, colWidth } = props;\n  const lineThickness = 3;\n  const lineSpacing = 6;\n  const IQStacks = states.slice(1).map(st => {\n    const { buffs } = st;\n    const IQ = buffs.find(buff => buff.buff === 0);\n    return IQ ? IQ.stacks : 0;\n  });\n  const IQLines: Array<{\n    start: number\n    end: number\n  }> = [];\n  let start = -1;\n  IQStacks.forEach((stack, stackIndex) => {\n    if (stack > 0 && start < 0) {\n      start = stackIndex;\n      IQLines.push({\n        start,\n        end: -1\n      });\n    }\n    if (start > -1 && stack < 1) {\n      IQLines[IQLines.length - 1].end = stackIndex;\n      start = -1;\n    }\n  });\n  const leafWidth = 6;\n  const leafHeight = 4;\n\n  return <IQLine>\n    {IQStacks.map((IQStack, IQStackIndex) => {\n      return IQStack > 0 && <StackNumber\n        key={IQStackIndex}\n        style={{\n          top: 20 - IQStack * (leafHeight / 2),\n          left: colWidth + IQStackIndex * colWidth\n        }}\n        full={IQStack >= 11}\n      >{IQStack}</StackNumber>;\n    })}\n    <svg style={{\n      width: `${(states.length - 1) * colWidth}px`,\n    }}>\n      {IQStacks.map((IQStack, IQStackIndex) => {\n        const leaves: number[] = [];\n        const x = 20 + IQStackIndex * colWidth;\n        const y = 40 - lineSpacing;\n        for (let j = 0; j < IQStack; j++) {\n          leaves.push(1);\n        }\n        const leafColor = leaves.length >= 11 ? '#dcac2a' : '#3e6a00';\n        return <g\n          key={IQStackIndex}\n        >\n          <path\n            d={`\n              M ${x + leafWidth} ${y}\n              L ${x + leafWidth} ${y - IQStack * leafHeight * 0.5}\n            `}\n            stroke=\"#6e9a1b\"\n            fill=\"transparent\"\n          />;\n          {leaves.map((_, leafIndex) => {\n            const xx = x + (leafIndex % 2) * leafWidth;\n            const yy = (y - leafHeight * 1.5) - (leafIndex * leafHeight * 0.5);\n            const d = leafIndex >= 10 ? `\n              M ${xx + 0.5 * leafWidth} ${yy + 0.75 * leafHeight}\n              C ${xx + 0.75 * leafWidth} ${yy + 0.75 * leafHeight}\n                ${xx + leafWidth} ${yy + 0.9 * leafHeight}\n                ${xx + leafWidth} ${yy + leafHeight}\n              C ${xx + leafWidth} ${yy + 0.5 * leafHeight}\n                ${xx + 0.75 * leafWidth} ${yy}\n                ${xx + 0.5 * leafWidth} ${yy}\n              C ${xx + 0.25 * leafWidth} ${yy}\n                ${xx} ${yy - 0.15 * leafHeight}\n                ${xx} ${yy - 0.25 * leafHeight}\n              C ${xx} ${yy + 0.25 * leafHeight}\n                ${xx + 0.25 * leafWidth} ${yy + 0.75 * leafHeight}\n                ${xx + 0.5 * leafWidth} ${yy + 0.75 * leafHeight}\n            ` : `\n              M ${xx} ${yy + leafHeight}\n              C ${xx} ${yy + 0.9 * leafHeight}\n                ${xx + 0.25 * leafWidth} ${yy + 0.75 * leafHeight}\n                ${xx + 0.5 * leafWidth} ${yy + 0.75 * leafHeight}\n              C ${xx + 0.75 * leafWidth} ${yy + 0.75 * leafHeight}\n                ${xx + leafWidth} ${yy + 0.9 * leafHeight}\n                ${xx + leafWidth} ${yy + leafHeight}\n              C ${xx + leafWidth} ${yy + 0.5 * leafHeight}\n                ${xx + 0.75 * leafWidth} ${yy}\n                ${xx + 0.5 * leafWidth} ${yy}\n              C ${xx + 0.25 * leafWidth} ${yy}\n                ${xx} ${yy + 0.5 * leafHeight}\n                ${xx} ${yy + leafHeight}\n            `;\n            return <path\n              d={d}\n              key={leafIndex}\n              stroke=\"transparent\"\n              fill={leafColor}\n            />;\n          })}\n        </g>;\n      })}\n      {IQLines.map((IQLine, IQLineIndex) => {\n        const start = 20 + IQLine.start * colWidth + lineThickness / 2;\n        const end = IQLine.end < 0 ? (states.length - 1) * colWidth : IQLine.end * colWidth;\n        const gap = lineSpacing;\n        return <path\n          key={IQLineIndex}\n          d={`\n            M ${start} 40\n            C ${start} ${40 - gap / 2}\n              ${start + gap / 2} ${40 - gap}\n              ${start + gap} ${40 - gap}\n            ${IQLine.end < 0 ? `\n              L ${end} ${40 - gap}\n            ` : `\n              L ${end + gap} ${40 - gap}\n              C ${end + gap * 1.5} ${40 - gap}\n                ${end + gap * 2} ${40 - gap / 2}\n                ${end + gap * 2} 40\n            `}\n          `}\n          fill=\"transparent\"\n          strokeWidth=\"3\"\n          stroke={'#ccc'}\n        />\n      })}\n    </svg>\n  </IQLine>;\n};\n\nexport default IQBed;\n","import React from 'react';\n\nimport styled from 'styled-components/macro';\n\nimport { CraftState } from './index';\n\nconst buffLineColors: { [key: number]: string } = {\n  /*\n    INNER_QUIET = 0,\n    STEADY_HAND = 1,\n    STEADY_HAND_II = 2,\n    WASTE_NOT = 3,\n    WASTE_NOT_II = 4,\n    STROKE_OF_GENIUS = 5,\n    INITIAL_PREPARATIONS = 6,\n    COMFORT_ZONE = 7,\n    WHISTLE_WHILE_YOU_WORK = 8,\n    HEART_OF_CRAFTER = 9,\n    MANIPULATION = 10,\n    MANIPULATION_II = 11,\n    GREAT_STRIDES = 12,\n    INNOVATION = 13,\n    INGENUITY = 14,\n    INGENUITY_II = 15,\n    MAKERS_MARK = 16,\n    NAME_OF_THE_ELEMENTS = 17,\n    RECLAIM = 18,\n    REUSE = 19\n  */\n  0: '#deae6d',\n  1: '#ab6e59', \n  2: '#ab6e59', \n  3: '#6a6a69',\n  4: '#6a6a69',\n  5: '#6d7d69',\n  6: '#1777da',\n  7: '#db75ed',\n  8: '#e1be4d',\n  9: '#6ee626',\n  10: '#68ccac',\n  11: '#68ccac',\n  12: '#c35289',\n  13: '#2675c5',\n  14: '#c5a666',\n  15: '#c5a666',\n  16: '#2b7d5c',\n  17: '#3bac4a',\n  18: '#72aae7',\n  19: '#f7de63',\n};\n\nconst BuffTimelineSVG = styled.svg`\n  min-height: 15px;\n\n  path {\n    cursor: pointer;\n    &:hover {\n      stroke: black;\n    }\n  }\n`;\n\ninterface BuffTimelineProps {\n  states: CraftState[]\n  colWidth: number\n  showBuffLineTooltip: (i: number) => (() => void)\n  hideBuffLineTooltip: () => void\n}\nconst BuffTimeline = (props: BuffTimelineProps) => {\n  const { states, colWidth, showBuffLineTooltip, hideBuffLineTooltip } = props;\n  const buffLines: Array<{\n    buffId: number\n    points: Array<number[] | null | undefined>\n  }> = [];\n  const buffLineThickness = 3;\n  const buffLineGap = 3;\n  const buffLineTopGap = 5;\n  const buffLineSpacing = buffLineThickness + buffLineGap;\n  states.slice(1).forEach((state, stateIndex) => {\n    const { buffs } = state;\n    buffs.filter(buff => buff.buff !== 0).forEach((buff, buffIndex, filteredBuffs) => {\n      const existingBuff = buffLines.find(b => b.buffId === buff.buff);\n      let thisBuff: {\n        buffId: number\n        points: Array<number[] | null | undefined>\n      };\n      if (existingBuff) {\n        thisBuff = existingBuff;\n      } else {\n        thisBuff = {\n          buffId: buff.buff,\n          points: []\n        };\n        buffLines.push(thisBuff);\n      }\n      const startX = 20 + stateIndex * colWidth + buffLineSpacing;\n      const startY = buffLineTopGap + ((filteredBuffs.length - 1) * buffLineSpacing + (buffLineThickness)) - (buffIndex * buffLineSpacing);\n      const endX = 20 + (stateIndex * colWidth) + colWidth - buffLineSpacing;\n      const endY = startY;\n      thisBuff.points[stateIndex] = [startX, startY, endX, endY];\n    });\n  });\n  const maxBuffHeight = Math.max(...states.map(st => st.buffs.length));\n  return <BuffTimelineSVG style={{\n    width: `${(states.length - 1) * colWidth}px`,\n    height: `${(maxBuffHeight * buffLineSpacing) + buffLineTopGap}px`\n  }}>\n    {buffLines.map(buffLine => {\n      const d = buffLine.points.map((point, pointIndex, points) => {\n        let pointD = '';\n        const prevPoint = points[pointIndex - 1];\n        if (point && !prevPoint) {\n          pointD += `\n            M ${point[0] - (buffLineSpacing / 2)} 0\n            C ${point[0] - (buffLineSpacing / 2)} ${point[1] / 2}\n              ${point[0] - (buffLineSpacing / 4)} ${point[1]}\n              ${point[0]} ${point[1]}\n            L ${point[2]} ${point[3]}\n          `;\n        }\n        if (point && prevPoint) {\n          pointD += `\n            M ${prevPoint[2]} ${prevPoint[3]}\n            C ${point[0] - (point[0] - prevPoint[2]) / 2} ${prevPoint[3]}\n              ${point[0] - (point[0] - prevPoint[2]) / 2} ${point[1]}\n              ${point[0]} ${point[1]}\n            L ${point[2]} ${point[3]}\n          `;\n        }\n        return pointD;\n      }).join(' ');\n      return <path\n        onMouseOver={showBuffLineTooltip(buffLine.buffId)}\n        onMouseOut={hideBuffLineTooltip}\n        key={buffLine.buffId}\n        d={d}\n        fill=\"transparent\"\n        strokeWidth=\"3\"\n        stroke={buffLineColors[buffLine.buffId] || '#ccc'}\n      />;\n    })}\n  </BuffTimelineSVG>;\n};\n\nexport default BuffTimeline;","import React, { useEffect, useState, useRef } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport queryString from 'query-string'\n\nimport styled, { css, keyframes } from 'styled-components/macro';\n\nimport {\n  ActionType,\n  CraftingAction,\n  CraftingActionsRegistry,\n  Simulation,\n  Craft,\n  CrafterStats,\n  EffectiveBuff,\n} from '@ffxiv-teamcraft/simulator';\n\nimport { Icons } from './Icons';\nimport Bars from './Bars';\nimport Chart, { ChartMode } from './Chart';\nimport IQBed from './IQBed';\nimport BuffTimeline from './BuffTimeline';\n\nconst LOCALSTORAGECACHE_KEY = 'rapidCraftCache';\nconst jobs = [\n  '', '', '', '', '', '', '', '',\n  'CRP',\n  'BSM',\n  'ARM',\n  'GSM',\n  'LTW',\n  'WVR',\n  'ALC',\n  'CUL'\n];\nconst buffLineNames: { [key: number]: string } = {\n  0: 'Inner Quiet',\n  1: 'Steady Hand', \n  2: 'Steady Hand II', \n  3: 'Waste Not',\n  4: 'Waste Not II',\n  5: 'Stroke Of Genius',\n  6: 'Initial Preparations',\n  7: 'Comfort Zone',\n  8: 'Whistle While You Work',\n  9: 'Heart Of Crafter',\n  10: 'Manipulation',\n  11: 'Manipulation II',\n  12: 'Great Strides',\n  13: 'Innovation',\n  14: 'Ingenuity',\n  15: 'Ingenuity II',\n  16: 'Maker\\'s Mark',\n  17: 'Name Of The Elements',\n  18: 'Reclaim',\n  19: 'Reuse',\n};\n\nconst actionsByType = [\n  ActionType.PROGRESSION,\n  ActionType.CP_RECOVERY,\n  ActionType.OTHER,\n  ActionType.QUALITY,\n  ActionType.REPAIR,\n  ActionType.BUFF,\n  ActionType.SPECIALTY,\n].map(type => CraftingActionsRegistry.getActionsByType(type));\nconst allActions = CraftingActionsRegistry.ALL_ACTIONS.map(act => act.action);\n\ninterface JobButtonProps {\n  active?: boolean\n}\nconst JobButton = styled.div`\n  padding: 4px 8px;\n  display: inline-block;\n  cursor: pointer;\n  background: #f7f7f7;\n  border-radius: 4px;\n  box-sizing: border-box;\n  margin: 4px;\n  border: solid 1px transparent;\n  margin-top: 20px;\n\n  ${({ active }: JobButtonProps) => active && css`\n  border: solid 1px #ccc;\n  `}\n\n  &:hover {\n    background: #eee;\n  }\n\n  &:active {\n    transform: translateY(1px);\n    user-select: none;\n  }\n`;\n\nconst rotate = keyframes`\n  from {\n    transform: translateY(-5px) scale(1.15) rotate(-4deg);\n  }\n\n  to {\n    transform: translateY(-5px) scale(1.15) rotate(3deg);\n  }\n`;\nconst ActionBar = styled.div`\n  margin: 10px;\n  white-space: nowrap;\n  touch-action: none;\n\n  > img, > div {\n    vertical-align: middle;\n  }\n\n  &::before {\n    content: '';\n    display: inline-block;\n    vertical-align: middle;\n    height: 40px;\n  }\n\n  > img {\n    cursor: grab;\n    transition: border 0.1s linear, transform 0.1s;\n\n    &:hover {\n      transform: translateY(-2px) scale(1.05);\n    }\n\n    &:active {\n      cursor: grabbing;\n    }\n  }\n`;\n\nconst BuffLines = styled.div`\n  padding: 0 10px;\n  position: relative;\n  top: -10px;\n`;\nconst BuffLineTooltip = styled.div`\n  background: #fff;\n  padding: 10px 20px;\n  border-radius: 4px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);\n  position: absolute;\n  pointer-events: none;\n  z-index: 2;\n`;\n\ninterface DraggedImageProps {\n  isDragged?: boolean\n  isFailed?: boolean\n}\nconst DraggedImage = styled.img`\n  border: solid 0px transparent;\n  ${({ isDragged }: DraggedImageProps) => isDragged && css`\n    animation: ${rotate} 1s infinite alternate;\n    opacity: 0.6;\n  `}\n  ${({ isFailed }: DraggedImageProps) => isFailed && css`\n    opacity: 0.2;\n  `}\n`;\n\nconst ScrollingBar = styled.div`\n  overflow: auto;\n  overflow-y: hidden;\n  overflow-x: auto;\n  padding: 1vw;\n  padding-top: 12px;\n  position: sticky;\n  top: 0;\n  background: #fff;\n  box-shadow: 0 3px 3px rgba(0, 0, 0, 0.2);\n  z-index: 3;\n  margin-bottom: 20px;\n`;\n\nconst ActionTypeSet = styled.div`\n  display: inline-block;\n  padding: 4px 8px;\n  margin: 4px;\n  background: #f5f5f5;\n  border-radius: 4px;\n`;\n\ninterface ActionPalletteImage {\n  isDragged?: boolean\n}\nconst ActionPalletteImage = styled.img`\n  cursor: pointer;\n  transition: transform 0.2s;\n  touch-action: none;\n  ${({ isDragged }: DraggedImageProps) => isDragged && css`\n    &, &:active {\n      transition: transform 0.1s;\n      transform: scale(0) !important;\n    }\n  `}\n\n  &:hover {\n    transform: scale(0.95);\n  }\n\n  &:active {\n    transform: scale(0.9);\n    transition-duration: 0.1s;\n  }\n`;\n\nconst ShareInput = styled.input`\n  width: 50vw;\n  padding: 4px 8px;\n  border-radius: 4px;\n  border: solid 1px #eee;\n`;\n\nconst LazyStats = styled.div`\n  padding: 20px;\n  font-size: 12px;\n  label {\n    display: block;\n    padding: 4px;\n\n    input {\n      margin-right: 8px;\n      padding: 4px 8px;\n      border: solid 1px #999;\n      border-radius: 2px;\n    }\n  }\n`;\n\nexport interface CraftState {\n  progress: number\n  quality: number\n  cp: number\n  durability: number\n  buffs: EffectiveBuff[]\n  stats: CrafterStats\n  recipe: Craft\n}\n\ninterface localStorageCache {\n  recipeRLvl: number\n  recipeLvl: number\n  recipeProg: number\n  recipeQual: number\n  recipeDur: number\n  recipeSugCraft: number\n  recipeSugControl: number\n  jobId: number\n  jobCraftsmanship: number\n  jobControl: number\n  jobCP: number\n  jobLvl: number\n  jobIsSpecialist: boolean\n  actionsString: string\n}\n\nconst SimComponent = (props: RouteComponentProps) => {\n  const { location } = props;\n\n  const cache = useRef({} as localStorageCache);\n  // try and read from localStorage first, but only read it once (at page load)\n  try {\n    if (JSON.stringify(cache.current) === '{}') {\n      const cachedData = JSON.parse(localStorage.getItem(LOCALSTORAGECACHE_KEY) + '');\n      if (cachedData) {\n        cache.current = cachedData;\n      }\n    }\n  } catch (e) {}\n\n  // recipe parameters\n  const [recipeRLvl, set_recipeRLvl] = useState(cache.current.recipeRLvl || 430);\n  const [recipeLvl, set_recipeLvl] = useState(cache.current.recipeLvl || 80);\n  const [recipeProg, set_recipeProg] = useState(cache.current.recipeProg || 1900);\n  const [recipeQual, set_recipeQual] = useState(cache.current.recipeQual || 15000);\n  const [recipeDur, set_recipeDur] = useState(cache.current.recipeDur || 80);\n  const [recipeSugCraft, set_recipeSugCraft] = useState(cache.current.recipeSugCraft || 1866);\n  const [recipeSugControl, set_recipeSugControl] = useState(cache.current.recipeSugControl || 1733);\n\n  // player parameters\n  const [jobId, set_jobId] = useState(cache.current.jobId || 8);\n  const [jobCraftsmanship, set_jobCraftsmanship] = useState(cache.current.jobCraftsmanship || 1800);\n  const [jobControl, set_jobControl] = useState(cache.current.jobControl || 1800);\n  const [jobCP, set_jobCP] = useState(cache.current.jobCP || 489);\n  const [jobLvl, set_jobLvl] = useState(cache.current.jobLvl || 80);\n  const [jobIsSpecialist, set_jobIsSpecialist] = useState(cache.current.jobIsSpecialist === undefined ? true : cache.current.jobIsSpecialist);\n  const stats = new CrafterStats(\n    jobId,\n    jobCraftsmanship,\n    jobControl,\n    jobCP,\n    jobIsSpecialist,\n    jobLvl,\n    [jobLvl, jobLvl, jobLvl, jobLvl, jobLvl, jobLvl, jobLvl, jobLvl]\n  );\n\n  const [testRecipe, set_testRecipe] = useState({\n    job: jobId,\n    lvl: recipeLvl,\n    durability: recipeDur,\n    progress: recipeProg,\n    quality: recipeQual,\n    rlvl: recipeRLvl,\n    materialQualityFactor: 75,\n    id: '0',\n    suggestedControl: recipeSugControl,\n    suggestedCraftsmanship: recipeSugCraft,\n    quickSynth: 1,\n    ingredients: [],\n    hq: 1,\n  } as Craft);\n\n  const defaultState = useRef({\n    progress: 0,\n    quality: 0,\n    cp: jobCP,\n    durability: recipeDur,\n    buffs: [] as EffectiveBuff[],\n    stats: stats,\n    recipe: testRecipe\n  } as CraftState);\n  useEffect(() => {\n    defaultState.current = {\n      ...defaultState.current,\n      cp: jobCP,\n      durability: recipeDur,\n      stats,\n      recipe: testRecipe\n    };\n  }, [\n    jobCP,\n    recipeDur,\n    stats,\n    testRecipe\n  ]);\n\n  let cachedActions = [] as CraftingAction[];\n  try {\n    cachedActions = CraftingActionsRegistry.importFromCraftOpt(JSON.parse(cache.current.actionsString) as string[]);\n  } catch(e) {}\n  const [actions, set_actions] = useState(cachedActions);\n\n  const scrollingBarRef = useRef(undefined as undefined | HTMLDivElement);\n\n  useEffect(() => {\n\n    const values = queryString.parse(location.search, {\n      arrayFormat: 'comma'\n    });\n\n    // recipe stuff\n    const rrl = parseInt(values.rrl + '');\n    if (!isNaN(rrl)) {\n      set_recipeRLvl(rrl);\n    }\n    const rl = parseInt(values.rl + '');\n    if (!isNaN(rl)) {\n      set_recipeLvl(rl);\n    }\n    const rp = parseInt(values.rp + '');\n    if (!isNaN(rp)) {\n      set_recipeProg(rp);\n    }\n    const rq = parseInt(values.rq + '');\n    if (!isNaN(rq)) {\n      set_recipeQual(rq);\n    }\n    const rd = parseInt(values.rd + '');\n    if (!isNaN(rd)) {\n      set_recipeDur(rd);\n    }\n    const rscr = parseInt(values.rscr + '');\n    if (!isNaN(rscr)) {\n      set_recipeSugCraft(rscr);\n    }\n    const rsco = parseInt(values.rsco + '');\n    if (!isNaN(rsco)) {\n      set_recipeSugControl(rsco);\n    }\n\n    // player stuff\n    const ji = parseInt(values.ji + '');\n    if (!isNaN(ji)) {\n      set_jobId(ji);\n    }\n    const jcr = parseInt(values.jcr + '');\n    if (!isNaN(jcr)) {\n      set_jobCraftsmanship(jcr);\n    }\n    const jco = parseInt(values.jco + '');\n    if (!isNaN(jco)) {\n      set_jobControl(jco);\n    }\n    const jcp = parseInt(values.jcp + '');\n    if (!isNaN(jcp)) {\n      set_jobCP(jcp);\n    }\n    const jl = parseInt(values.jl + '');\n    if (!isNaN(jl)) {\n      set_jobLvl(jl);\n    }\n    const jis = parseInt(values.jis + '') ;\n    if (!isNaN(jis)) {\n      set_jobIsSpecialist(jis === 1);\n    }\n    if (values && values.yact) {\n      const passedActions = (values.yact + '').split(',').map(actIndex => {\n        return allActions[parseInt(actIndex)];\n      });\n      set_actions(passedActions);\n    } else if (values && values.zact) {\n      const acts = (values.zact + '').split(',');\n      const passedActions = CraftingActionsRegistry.createFromIds(acts.map(act => parseInt(act)));\n      set_actions(passedActions);\n    }\n  }, [location.search]);\n\n  // store these in localStorage... good idea?\n  useEffect(() => {\n    const localStorageCache = {\n      recipeRLvl,\n      recipeLvl,\n      recipeProg,\n      recipeQual,\n      recipeDur,\n      recipeSugCraft,\n      recipeSugControl,\n      jobId,\n      jobCraftsmanship,\n      jobControl,\n      jobCP,\n      jobLvl,\n      jobIsSpecialist,\n      actionsString: CraftingActionsRegistry.exportToCraftOpt(CraftingActionsRegistry.serializeRotation(actions)),\n    };\n\n    localStorage.setItem(LOCALSTORAGECACHE_KEY, JSON.stringify(localStorageCache));\n  }, [\n    recipeProg,\n    recipeRLvl,\n    recipeLvl,\n    recipeQual,\n    recipeDur,\n    recipeSugCraft,\n    recipeSugControl,\n    jobId,\n    jobCraftsmanship,\n    jobControl,\n    jobCP,\n    jobLvl,\n    jobIsSpecialist,\n    actions\n  ]);\n  useEffect(() => {\n    set_testRecipe(tr => {\n      return {\n        ...tr,\n        job: jobId,\n        lvl: recipeLvl,\n        durability: recipeDur,\n        progress: recipeProg,\n        quality: recipeQual,\n        rlvl: recipeRLvl,\n        suggestedControl: recipeSugControl,\n        suggestedCraftsmanship: recipeSugCraft,\n      };\n    });\n  }, [\n    recipeDur,\n    recipeProg,\n    recipeQual,\n    recipeLvl,\n    recipeRLvl,\n    recipeSugControl,\n    recipeSugCraft,\n    jobId,\n    jobLvl,\n  ])\n\n  const [states, set_states] = useState([defaultState.current]);\n  const [statedActions, set_statedActions] = useState([] as CraftingAction[]);\n  const [successStates, set_successStates] = useState([] as boolean[]);\n\n  useEffect(() => {\n    if (actions.length < 1) {\n      if (statedActions.length > 0) {\n        set_statedActions([]);\n      }\n      if (states.length !== 1 && states[0] !== defaultState.current) {\n        set_states([defaultState.current]);\n      }\n      return;\n    }\n    // find how many actions match the saved one\n    let x;\n    let allGood = true;\n    for (x = 0; x < Math.max(actions.length, statedActions.length); x++) {\n      if (actions[x] !== statedActions[x]) {\n        allGood = false;\n        break;\n      }\n    }\n\n    if (didStatsChange(stats, states[states.length - 1].stats) || didRecipeChange(testRecipe, states[states.length - 1].recipe)) {\n      x = 0;\n      allGood = false;\n    }\n\n    // fix simulated data starting from step x\n    const newStatedActions = statedActions.slice(0, x);\n    const newStates = states.slice(0, x + 1);\n    newStates[0] = {\n      ...defaultState.current,\n      cp: jobCP,\n      stats,\n      recipe: testRecipe\n    };\n    if (allGood) {\n      return;\n    }\n    for (let y = x; y < actions.length; y++) {\n      newStatedActions[y] = actions[y];\n      const sim = new Simulation(\n        testRecipe,\n        newStatedActions,\n        stats,\n      );\n      sim.run(true);\n      newStates[y + 1] = {\n        progress: sim.progression,\n        quality: sim.quality,\n        cp: sim.availableCP,\n        durability: sim.durability,\n        buffs: [...sim.buffs],\n        stats,\n        recipe: testRecipe\n      };\n\n      if (y === actions.length - 1) {\n        const newSuccessStates = sim.steps.map(step => step.success === true);\n        set_successStates(newSuccessStates);\n      }\n    }\n    set_statedActions(newStatedActions);\n    set_states(newStates);\n  }, [\n    actions,\n    statedActions,\n    states,\n    stats,\n    testRecipe,\n    jobCP,\n  ]);\n\n  const clickAction = (action: CraftingAction) => {\n    return () => {\n      requestAnimationFrame(() => {\n        if (scrollingBarRef.current) {\n          scrollingBarRef.current.scrollTo({\n            behavior: 'smooth',\n            left: scrollingBarRef.current.scrollWidth\n          });\n        }\n      });\n      set_actions([...actions, action]);\n    };\n  };\n\n\n  const [draggingIndex, set_draggingIndex] = useState(undefined as undefined | number);\n  const [draggedOverIndex, set_draggedOverIndex] = useState(undefined as undefined | number);\n\n  const clickJobAction = (index: number) => {\n    return () => {\n      set_actions([\n        ...actions.slice(0, index),\n        ...actions.slice(index + 1)\n      ]);\n    };\n  };\n\n  const clickJobButton = (jobId: number) => {\n    return () => {\n      set_jobId(jobId);\n    };\n  };\n\n  const clearActions = () => {\n    set_actions([]);\n  };\n\n  const moveActionFromTo = (indexFrom: number, indexTo: number) => {\n    const newActions = [...actions];\n    const draggedAction = newActions.splice(indexFrom, 1)[0];\n    newActions.splice(indexTo, 0, draggedAction);\n    set_actions(newActions);\n  };\n\n  const addNewActionAtIndex = (action: CraftingAction, indexTo: number) => {\n    const newActions = [...actions];\n    newActions.splice(indexTo, 0, action);\n    set_actions(newActions);\n  };\n\n  const [newActionDrag, set_newActionDrag] = useState(undefined as undefined | CraftingAction);\n  const OnActionDragEnd = () => {\n    set_newActionDrag(undefined);\n    set_draggedOverIndex(undefined);\n    set_draggingIndex(undefined);\n  };\n  const OnActionDragStart = (index: number) => {\n    return (e: React.DragEvent) => {\n      set_draggingIndex(index);\n    };\n  };\n  const OnActionDragOver = (index: number) => {\n    return (e: React.DragEvent) => {\n      e.preventDefault();\n      set_draggedOverIndex(index);\n    };\n  };\n  const OnActionDrop = (index: number) => {\n    return (e: React.DragEvent) => {\n      e.preventDefault();\n      set_newActionDrag(undefined);\n      set_draggedOverIndex(undefined);\n      set_draggingIndex(undefined);\n      if (newActionDrag) {\n        addNewActionAtIndex(newActionDrag, index);\n        return;\n      }\n      if (typeof draggingIndex === 'undefined' || draggingIndex === index) {\n        return;\n      }\n      moveActionFromTo(draggingIndex, index);\n    };\n  };\n\n  const OnNewActionDragStart = (act: CraftingAction) => {\n    return (e: React.DragEvent) => {\n      set_newActionDrag(act);\n    };\n  };\n  const OnNewActionDragEnd = () => {\n    set_newActionDrag(undefined);\n    set_draggedOverIndex(undefined);\n    set_draggingIndex(undefined);\n  };\n\n  const colWidth = 40;\n\n  // mobile stuff\n  const OnActionTouchStart = (e: React.TouchEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    if (e.touches.length < 1) {\n      return;\n    }\n    const x = e.touches[0].clientX - rect.left;\n    const actionIndex = Math.floor(x / colWidth);\n    set_draggingIndex(actionIndex);\n\n    e.preventDefault();\n    return false;\n  };\n  const OnActionTouchMove = (e: React.TouchEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    if (e.touches.length < 1) {\n      return;\n    }\n    const x = e.touches[0].clientX - rect.left;\n    const actionIndex = Math.floor(x / colWidth);\n    set_draggedOverIndex(actionIndex);\n\n    e.preventDefault();\n    return false;\n  };\n  const OnActionTouchEnd = (e: React.TouchEvent<HTMLDivElement>) => {\n    const indexFrom = draggingIndex;\n    const indexTo = draggedOverIndex;\n    if (typeof indexFrom === 'number' && typeof indexTo === 'number') {\n      moveActionFromTo(indexFrom, indexTo);\n    }\n    set_newActionDrag(undefined);\n    set_draggedOverIndex(undefined);\n    set_draggingIndex(undefined);\n  };\n  const OnActionContextMenu = (e: React.MouseEvent<HTMLImageElement>) => {\n    e.preventDefault();\n  };\n\n  const actionBarRef = useRef(null as null | HTMLDivElement);\n  const onAllTouchMove = (e: React.TouchEvent<HTMLDivElement>) => {\n    if (e.touches.length < 1 || !actionBarRef.current || !newActionDrag) {\n      return;\n    }\n    const { clientX, clientY } = e.touches[0];\n    const rect = actionBarRef.current.getBoundingClientRect();\n    if (clientY < rect.top || clientY > rect.top + rect.height) {\n      return;\n    }\n    const x = clientX - rect.left;\n    const actionIndex = Math.floor(x / colWidth);\n    set_draggedOverIndex(actionIndex);\n  };\n  const OnNewActionTouchStart = (act: CraftingAction) => {\n    return (e: React.TouchEvent<HTMLDivElement>) => {\n      set_newActionDrag(act);\n    };\n  };\n  const OnNewActionTouchEnd = (e: React.TouchEvent<HTMLImageElement>) => {\n    if (newActionDrag) {\n      if (draggedOverIndex !== undefined) {\n        addNewActionAtIndex(newActionDrag, draggedOverIndex);\n      } else {\n        addNewActionAtIndex(newActionDrag, actions.length);\n      }\n    }\n    set_newActionDrag(undefined);\n    set_draggedOverIndex(undefined);\n    set_draggingIndex(undefined);\n    e.preventDefault();\n    return false;\n  }\n\n  // share stuff\n  const [shareUrl, set_shareUrl] = useState('');\n  const showShareUrl = () => {\n    const url = window.location.href.split('?')[0];\n\n    const yacts = actions.filter(a => a).map(a => {\n      const matchingAction = allActions.find(ac => {\n        return a.getId(jobId) === ac.getId(jobId);\n      })\n      return matchingAction ? allActions.indexOf(matchingAction) : -1;\n    });\n\n    const newShareUrl = `${url}?${queryString.stringify({\n      rl: recipeLvl,\n      rrl: recipeRLvl,\n      rp: recipeProg,\n      rq: recipeQual,\n      rd: recipeDur,\n      rscr: recipeSugCraft,\n      rsco: recipeSugControl,\n      jcr: jobCraftsmanship,\n      jco: jobControl,\n      jcp: jobCP,\n      jl: jobLvl,\n      jis: jobIsSpecialist ? '1' : '0',\n      yact: yacts,\n    }, {\n      arrayFormat: 'comma'\n    })}`\n\n    if (newShareUrl === shareUrl) {\n      set_shareUrl('');\n    } else {\n      set_shareUrl(newShareUrl);\n    }\n\n    set_exportString('');\n  };\n\n  const focusShareField = (e: React.MouseEvent<HTMLInputElement>) => {\n    if (e.currentTarget) {\n      e.currentTarget.setSelectionRange(0, e.currentTarget.value.length);\n    }\n  };\n\n  const [exportString, set_exportString] = useState('');\n  const showExportString = () => {\n    const newExportString = CraftingActionsRegistry.exportToCraftOpt(CraftingActionsRegistry.serializeRotation(actions));\n    if (newExportString === exportString) {\n      set_exportString('');\n    } else {\n      set_exportString(newExportString);\n    }\n\n    set_shareUrl('');\n  };\n\n  const requestImportString = () => {\n    const importString = prompt('Enter Teamcraft export string below:');\n    if (importString) {\n      const newActions = CraftingActionsRegistry.importFromCraftOpt(JSON.parse(importString) as string[]);\n      set_actions(newActions);\n    }\n  };\n\n  const [buffLineTooltip, set_buffLineTooltip] = useState('');\n  const [buffLineTooltipPosition, set_buffLineTooltipPosition] = useState([0, 0]);\n  const showBuffLineTooltip = (buffId: number) => {\n    return () => {\n      set_buffLineTooltip(buffLineNames[buffId] || '');\n    };\n  };\n  const hideBuffLineTooltip = () => {\n    set_buffLineTooltip('');\n  };\n  const updateBuffLineTooltipPosition = (e: React.MouseEvent<HTMLDivElement>) => {\n    const { clientX, clientY } = e;\n    const el = e.currentTarget;\n    const rect = el.getBoundingClientRect();\n    const { left, top } = rect;\n    set_buffLineTooltipPosition([clientX - left + 5, clientY - top + 5]);\n  };\n\n  const setScrollingBarRef = (el: HTMLDivElement) => {\n    if (el) {\n      scrollingBarRef.current = el;\n    }\n  };\n\n  const latestState = states[states.length - 1];\n  const showTraditionalBars = false;\n\n  return <div onTouchMove={onAllTouchMove}>\n    {showTraditionalBars && <Bars\n      currentProgress={latestState.progress}\n      maxProgress={testRecipe.progress}\n      currentQuality={latestState.quality}\n      maxQuality={testRecipe.quality}\n      currentDurability={latestState.durability}\n      maxDurability={testRecipe.durability}\n      currentCP={latestState.cp}\n      maxCP={jobCP}\n    />}\n\n    <ScrollingBar ref={setScrollingBarRef}>\n      <Chart\n        colWidth={colWidth}\n        rowHeight={40}\n        domain={[0, testRecipe.progress]}\n        data={states.map(state => state.progress)}\n        mode={ChartMode.UPWARDS}\n        color=\"#6e9a1b\"\n        bgColor=\"#9eca4b\"\n        label=\"Progress\"\n      />\n      <Chart\n        colWidth={colWidth}\n        rowHeight={40}\n        domain={[0, testRecipe.quality]}\n        data={states.map(state => state.quality)}\n        mode={ChartMode.DOWNWARDS}\n        color=\"#50a1bf\"\n        bgColor=\"#80d1ef\"\n        label=\"Quality\"\n      />\n\n      <IQBed states={states} colWidth={colWidth}/>\n\n      <ActionBar\n        onTouchStart={OnActionTouchStart}\n        onTouchMove={OnActionTouchMove}\n        onTouchEnd={OnActionTouchEnd}\n        ref={actionBarRef}\n      >\n        {actions.map((action, index) => {\n          const isDragged = draggingIndex === index;\n          const isFailed = successStates[index] === false;\n          const hasBorderLeft = (index === draggedOverIndex) && ((newActionDrag !== undefined) || (draggingIndex !== undefined && draggedOverIndex < draggingIndex));\n          return <DraggedImage\n            alt={CraftingActionsRegistry.serializeRotation([action]).join('')}\n            title={CraftingActionsRegistry.serializeRotation([action]).join('')}\n            key={`${index} ${action.getId(jobId)}`}\n            draggable={true}\n            onDragStart={OnActionDragStart(index)}\n            onDragOver={OnActionDragOver(index)}\n            onDragEnd={OnActionDragEnd}\n            onDrop={OnActionDrop(index)}\n            src={process.env.PUBLIC_URL + (Icons as any)[action.getId(jobId)]}\n            onClick={clickJobAction(index)}\n            style={{\n              width: `${colWidth}px`,\n              borderLeft: hasBorderLeft ? 'solid 10px transparent' : '',\n              borderRight: draggingIndex !== undefined && index === draggedOverIndex && draggedOverIndex > draggingIndex ? 'solid 10px transparent' : '',\n            }}\n            isDragged={isDragged}\n            isFailed={isFailed}\n            onContextMenu={OnActionContextMenu}\n          />\n        })}\n      </ActionBar>\n      <BuffLines onMouseMove={updateBuffLineTooltipPosition}>\n        {buffLineTooltip && <BuffLineTooltip\n          style={{\n            top: `${buffLineTooltipPosition[1]}px`,\n            left: `${buffLineTooltipPosition[0]}px`,\n          }}\n        >{buffLineTooltip}</BuffLineTooltip>}\n        <BuffTimeline\n          states={states}\n          colWidth={colWidth}\n          showBuffLineTooltip={showBuffLineTooltip}\n          hideBuffLineTooltip={hideBuffLineTooltip}\n        />\n      </BuffLines>\n      <Chart\n        colWidth={colWidth}\n        rowHeight={40}\n        domain={[0, testRecipe.durability]}\n        data={states.map(state => state.durability)}\n        mode={ChartMode.UPWARDS}\n        color=\"#ccc\"\n        bgColor=\"#eee\"\n        label=\"Durability\"\n      />\n      <Chart\n        colWidth={colWidth}\n        rowHeight={40}\n        domain={[0, jobCP]}\n        data={states.map(state => state.cp)}\n        mode={ChartMode.DOWNWARDS}\n        color=\"#bf7ed9\"\n        bgColor=\"#efaeff\"\n        label=\"CP\"\n      />\n    </ScrollingBar>\n    <div>\n      {actionsByType.map((someActions, typeIndex) => <ActionTypeSet key={typeIndex}>\n        {someActions.map((i, index) => <ActionPalletteImage\n          alt={CraftingActionsRegistry.serializeRotation([i]).join('')}\n          title={CraftingActionsRegistry.serializeRotation([i]).join('')}\n          key={index}\n          draggable={true}\n          onDragStart={OnNewActionDragStart(i)}\n          onDragEnd={OnNewActionDragEnd}\n          src={process.env.PUBLIC_URL + (Icons as any)[i.getId(jobId)]}\n          onClick={clickAction(i)}\n          isDragged={i === newActionDrag}\n          onContextMenu={OnActionContextMenu}\n          onTouchStart={OnNewActionTouchStart(i)}\n          onTouchEnd={OnNewActionTouchEnd}\n        />)}\n      </ActionTypeSet>)}\n    </div>\n    <div>\n      {jobs.map((n, i) => n && <JobButton\n        active={jobId === i}\n        key={i}\n        onClick={clickJobButton(i)}>\n        {n}\n      </JobButton>)}\n    </div>\n    <LazyStats>\n      <label>\n        <input type=\"text\" value={jobCraftsmanship} onChange={(e: React.ChangeEvent<HTMLInputElement>) => set_jobCraftsmanship(parseInt(e.currentTarget.value) || 0)}/>\n        Craftsmanship\n      </label>\n      <label>\n        <input type=\"text\" value={jobControl} onChange={(e: React.ChangeEvent<HTMLInputElement>) => set_jobControl(parseInt(e.currentTarget.value) || 0)}/>\n        Control\n      </label>\n      <label>\n        <input type=\"text\" value={jobCP} onChange={(e: React.ChangeEvent<HTMLInputElement>) => set_jobCP(parseInt(e.currentTarget.value) || 0)}/>\n        CP\n      </label>\n      <label>\n        <input type=\"checkbox\" checked={jobIsSpecialist} onChange={(e: React.ChangeEvent<HTMLInputElement>) => set_jobIsSpecialist(e.currentTarget.checked)}/>\n        Specialist\n      </label>\n      <label>\n        <input type=\"text\" value={recipeProg} onChange={(e: React.ChangeEvent<HTMLInputElement>) => set_recipeProg(parseInt(e.currentTarget.value) || 0)}/>\n        Recipe Difficulty\n      </label>\n      <label>\n        <input type=\"text\" value={recipeQual} onChange={(e: React.ChangeEvent<HTMLInputElement>) => set_recipeQual(parseInt(e.currentTarget.value) || 0)}/>\n        Recipe Quality\n      </label>\n      <label>\n        <input type=\"text\" value={recipeDur} onChange={(e: React.ChangeEvent<HTMLInputElement>) => set_recipeDur(parseInt(e.currentTarget.value) || 0)}/>\n        Recipe Durability\n      </label>\n      <label>\n        <input type=\"text\" value={recipeRLvl} onChange={(e: React.ChangeEvent<HTMLInputElement>) => set_recipeRLvl(parseInt(e.currentTarget.value) || 0)}/>\n        Recipe Level\n      </label>\n      <label>\n        <input type=\"text\" value={recipeLvl} onChange={(e: React.ChangeEvent<HTMLInputElement>) => set_recipeLvl(parseInt(e.currentTarget.value) || 0)}/>\n        Craft Level\n      </label>\n      <label>\n        <input type=\"text\" value={recipeSugCraft} onChange={(e: React.ChangeEvent<HTMLInputElement>) => set_recipeSugCraft(parseInt(e.currentTarget.value) || 0)}/>\n        Craftsmanship Recommended\n      </label>\n      <label>\n        <input type=\"text\" value={recipeSugControl} onChange={(e: React.ChangeEvent<HTMLInputElement>) => set_recipeSugControl(parseInt(e.currentTarget.value) || 0)}/>\n        Control Recommended\n      </label>\n    </LazyStats>\n    <JobButton onClick={clearActions} active={true}>Clear</JobButton>\n    <JobButton onClick={showShareUrl} active={true}>Share</JobButton>\n    {shareUrl && <ShareInput onClick={focusShareField} type=\"text\" value={shareUrl} readOnly/>}\n    <JobButton onClick={showExportString} active={true}>Export</JobButton>\n    {exportString && <ShareInput onClick={focusShareField} type=\"text\" value={exportString} readOnly/>}\n    <JobButton onClick={requestImportString} active={true}>Import</JobButton>\n  </div>;\n};\n\nexport default SimComponent;\n\nconst didStatsChange = (stats1: CrafterStats, stats2: CrafterStats) => {\n  return stats1.cp !== stats2.cp\n    || stats1.craftsmanship !== stats2.craftsmanship\n    || stats1._control !== stats2._control\n    || stats1.level !== stats2.level\n    || stats1.specialist !== stats2.specialist\n};\n\nconst didRecipeChange = (recipe1: Craft, recipe2: Craft) => {\n  return recipe1.progress !== recipe2.progress\n    || recipe1.quality !== recipe2.quality\n    || recipe1.lvl !== recipe2.lvl\n    || recipe1.rlvl !== recipe2.rlvl\n    || recipe1.durability !== recipe2.durability\n    || recipe1.suggestedControl !== recipe2.suggestedControl\n    || recipe1.suggestedCraftsmanship !== recipe2.suggestedCraftsmanship;\n};\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom'\n\nimport styled from 'styled-components/macro';\n\nimport Sim from './components/Sim';\n\nconst Wrapper = styled.div`\n  padding-bottom: 30vh;\n`;\nconst FootNote = styled.div`\n  font-size: 10px;\n`;\n\n// https://nubleh.github.io/ffxiv/craft/?jco=1800&jcp=489&jcr=1800&jis=0&jl=80&rd=80&rl=80&rp=3943&rq=20287&rsco=0&rscr=1866&rrl=430\nconst App: React.FC = () => {\n\n  return (\n    <Router>\n      <Wrapper>\n        <Route path=\"/\" component={Sim}/>\n        <FootNote>\n          This is a WIP thing made for fun.\n          <br/>There are probably bugs everywhere, simulation is likely to be inaccurate.\n          <br/>This thing uses the crafting simulator library made by <a href=\"https://github.com/ffxiv-teamcraft/simulator/\" target=\"_blank\" rel=\"noopener noreferrer\">ffxiv-teamcraft</a>\n        </FootNote>\n      </Wrapper>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}