{"version":3,"sources":["components/Sim/Chart.tsx","components/Sim/Icons.tsx","components/Sim/IQBed.tsx","components/Sim/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ChartMode","Icons","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","276","277","278","279","283","284","285","286","287","4574","4575","4576","4577","4578","4579","4580","4581","4597","4598","4599","4600","4601","4602","4603","4604","4607","4608","4609","4610","4611","4612","4613","4614","4615","4616","4617","4618","4619","4620","4621","4622","100001","100002","100003","100004","100005","100007","100008","100010","100015","100016","100017","100018","100019","100021","100022","100023","100030","100031","100032","100033","100034","100035","100037","100038","100039","100040","100045","100046","100047","100048","100049","100051","100052","100053","100060","100061","100062","100063","100064","100065","100067","100068","100069","100070","100075","100076","100077","100078","100079","100080","100081","100082","100083","100090","100091","100092","100093","100094","100096","100097","100098","100099","100105","100106","100107","100108","100109","100110","100111","100112","100113","100128","100129","100130","100131","100132","100133","100134","100135","100136","100137","100138","100139","100140","100141","100142","100143","100144","100145","100146","100147","100148","100149","100150","100151","100152","100153","100154","100156","100157","100158","100159","100160","100161","100162","100163","100164","100165","100166","100167","100168","100169","100170","100171","100172","100174","100175","100176","100178","100179","100180","100181","100182","100183","100184","100185","100186","100187","100188","100189","100190","100192","100193","100194","100195","100196","100197","100198","100199","100200","100201","100202","100203","100204","100205","100206","100207","100208","100209","100210","100211","100212","100213","100214","100215","100216","100217","100218","100219","100220","100221","100222","100223","100224","100225","100226","100227","100228","100229","100230","100231","100232","100233","100234","100235","100236","100237","100238","100239","100240","100241","100242","100243","100244","100245","100246","100247","100248","100249","100250","100251","100252","100253","100254","100255","100256","100257","100258","100259","100260","100261","100262","100263","100264","100265","100266","100267","100268","100269","100270","100271","100272","100273","100274","100275","100276","100277","100278","100279","100280","100281","100282","100283","100284","100285","100286","100287","100288","100289","100290","100291","100292","100293","100294","100295","100296","100297","100298","100299","100300","100301","100302","100303","100304","100305","100306","100307","100308","100309","100310","100311","100312","100313","100314","100315","100316","100317","100318","100319","100320","100321","100322","100323","100324","100325","100326","100327","100328","100329","100330","100331","100332","100333","100334","100335","100336","100337","100338","100339","100340","100341","100342","100343","100344","100345","100346","ChartBar","styled","div","withConfig","displayName","componentId","Chart","props","colWidth","rowHeight","domain","data","mode","color","label","bgColor","react_default","a","createElement","style","verticalAlign","DOWNWARDS","background","width","length","height","xmlns","UPWARDS","d","concat","map","value","index","others","progressEnd","progressStart","join","fill","qualityEnd","qualityStart","bottom","Math","min","top","IQLine","IQBed","states","IQStacks","slice","st","IQ","buffs","find","buff","stacks","IQLines","start","forEach","stack","stackIndex","push","end","IQBed_IQLine","IQStack","IQStackIndex","leaves","x","j","leafColor","key","stroke","_","leafIndex","xx","yy","y","IQLineIndex","lineThickness","gap","strokeWidth","jobs","buffLineColors","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","buffLineNames","actionsByType","ActionType","PROGRESSION","CP_RECOVERY","OTHER","QUALITY","REPAIR","BUFF","SPECIALTY","type","CraftingActionsRegistry","getActionsByType","allActions","ALL_ACTIONS","act","action","JobButton","_ref","active","css","_templateObject","rotate","keyframes","_templateObject2","ActionBar","BuffLines","BuffLineTooltip","DraggedImage","img","_ref2","isDragged","_templateObject3","_ref3","isFailed","_templateObject4","ScrollingBar","ActionTypeSet","ActionPalletteImage","_ref4","_templateObject5","ShareInput","input","SimComponent","location","_useState","useState","_useState2","Object","slicedToArray","recipeRLvl","set_recipeRLvl","_useState3","_useState4","recipeLvl","set_recipeLvl","_useState5","_useState6","recipeProg","set_recipeProg","_useState7","_useState8","recipeQual","set_recipeQual","_useState9","_useState10","recipeDur","set_recipeDur","_useState11","_useState12","recipeSugCraft","set_recipeSugCraft","_useState13","_useState14","recipeSugControl","set_recipeSugControl","_useState15","_useState16","jobId","set_jobId","_useState17","_useState18","jobCraftsmanship","set_jobCraftsmanship","_useState19","_useState20","jobControl","set_jobControl","_useState21","_useState22","jobCP","set_jobCP","_useState23","_useState24","jobLvl","set_jobLvl","_useState25","_useState26","jobIsSpecialist","set_jobIsSpecialist","stats","CrafterStats","_useState27","progress","quality","cp","durability","_useState28","defaultState","set_defaultState","_useState29","_useState30","actions","set_actions","scrollingBarRef","useRef","undefined","useEffect","values","queryString","parse","search","arrayFormat","rrl","parseInt","isNaN","rl","rp","rq","rd","df","objectSpread","rscr","rsco","ji","jcr","jco","jcp","jl","jis","yact","passedActions","split","actIndex","zact","acts","createFromIds","_useState31","job","lvl","rlvl","materialQualityFactor","id","suggestedControl","suggestedCraftsmanship","quickSynth","ingredients","hq","_useState32","testRecipe","set_testRecipe","tr","_useState33","_useState34","set_states","_useState35","_useState36","statedActions","set_statedActions","_useState37","_useState38","successStates","set_successStates","allGood","max","newStatedActions","newStates","sim","Simulation","run","progression","availableCP","toConsumableArray","newSuccessStates","steps","step","success","_useState39","_useState40","draggingIndex","set_draggingIndex","_useState41","_useState42","draggedOverIndex","set_draggedOverIndex","clickJobAction","clickJobButton","_useState43","_useState44","newActionDrag","set_newActionDrag","OnActionDragEnd","OnActionDragStart","e","OnActionDragOver","preventDefault","OnActionDrop","newActions","targetIndex","splice","draggedAction","OnNewActionDragEnd","_useState45","_useState46","shareUrl","set_shareUrl","focusShareField","currentTarget","setSelectionRange","_useState47","_useState48","exportString","set_exportString","buffLines","state","stateIndex","filter","buffIndex","filteredBuffs","thisBuff","existingBuff","b","buffId","points","startX","buffLineThickness","startY","endX","endY","maxBuffHeight","apply","_useState49","_useState50","buffLineTooltip","set_buffLineTooltip","_useState51","_useState52","buffLineTooltipPosition","set_buffLineTooltipPosition","hideBuffLineTooltip","ref","el","current","Sim_Chart","Sim_IQBed","hasBorderLeft","alt","serializeRotation","title","getId","draggable","onDragStart","onDragOver","onDragEnd","onDrop","src","process","onClick","borderLeft","borderRight","onMouseMove","clientX","clientY","rect","getBoundingClientRect","left","buffLine","point","pointIndex","pointD","prevPoint","buffLineSpacing","onMouseOver","onMouseOut","url","window","href","yacts","matchingAction","ac","indexOf","newShareUrl","stringify","readOnly","newExportString","exportToCraftOpt","importString","prompt","importFromCraftOpt","JSON","n","i","someActions","typeIndex","requestAnimationFrame","scrollTo","behavior","scrollWidth","Wrapper","FootNote","App","react_router_dom","react_router","path","component","Sim","target","rel","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6JAIYA,uHCJCC,EAAQ,CACnBC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,IAAO,uBACPC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,KAAQ,uBACRC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACVC,OAAU,uBACV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","file":"static/js/main.fd5ec4a1.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\n\nimport styled, { css, keyframes } from 'styled-components/macro';\n\nexport enum ChartMode {\n  UPWARDS = 0,\n  DOWNWARDS = 1,\n}\n\nconst ChartBar = styled.div`\n  height: 40px;\n  padding: 0 10px;\n  position: relative;\n  white-space: nowrap;\n\n  > svg {\n    transition: width 0.2s;\n  }\n\n  > span {\n    font-size: 8px;\n    position: relative;\n    padding: 0 4px;\n    transform: translateY(-50%);\n  }\n\n  & + & > svg {\n    border-top: solid 1px #000;\n  }\n`;\n\ninterface ChartProps {\n  colWidth: number\n  rowHeight: number\n  domain: number[]\n  data: number[]\n  mode: ChartMode\n  color: string\n  label: string\n  bgColor: string\n}\nconst Chart = (props: ChartProps) => {\n  const {\n    colWidth,\n    rowHeight,\n    domain,\n    data,\n    mode,\n    color,\n    label,\n    bgColor\n  } = props;\n\n  return <ChartBar>\n    <svg style={{\n      verticalAlign: mode === ChartMode.DOWNWARDS ? 'bottom' : 'top',\n      background: bgColor\n    }} width={(data.length - 1) * colWidth} height={rowHeight} xmlns=\"http://www.w3.org/2000/svg\">\n      {mode === ChartMode.UPWARDS && <path d={`\n        M 0 40\n        L 0 ${rowHeight - (rowHeight * data[0] / domain[1])}\n        ${data.map((value, index, others) => {\n          if (index < 1) {\n            return '';\n          }\n          const progressEnd = rowHeight - (rowHeight * (value / domain[1]));\n          const progressStart = rowHeight - (rowHeight * (others[index - 1] / domain[1]));\n          return `C ${(index - 1) * colWidth + colWidth / 2} ${progressStart}\n                    ${(index - 1) * colWidth + colWidth / 2} ${progressEnd}\n                    ${(index - 1) * colWidth + colWidth} ${progressEnd}`;\n        }).join(\"\\n\")}\n        L ${(data.length) * colWidth} ${rowHeight}\n      `} fill={color}/>}\n      {mode === ChartMode.DOWNWARDS && <path d={`\n        M 0 0\n        L 0 ${(rowHeight * data[0] / domain[1])}\n        ${data.map((value, index, others) => {\n          if (index < 1) {\n            return '';\n          }\n          const qualityEnd = (rowHeight * (value / domain[1]));\n          const qualityStart = (rowHeight * (others[index - 1] / domain[1]))\n          return `C ${(index - 1) * colWidth + colWidth / 2} ${qualityStart}\n                    ${(index - 1) * colWidth + colWidth / 2} ${qualityEnd}\n                    ${(index - 1) * colWidth + colWidth} ${qualityEnd}`;\n        }).join(\"\\n\")}\n        L ${(data.length) * colWidth} 0\n      `} fill={color}/>}\n    </svg>\n    {mode === ChartMode.UPWARDS && <span style={{\n      verticalAlign: 'bottom',\n      bottom: `${Math.min(rowHeight, rowHeight*data[data.length - 1]/domain[1])}px`,\n    }}>{data[data.length - 1]}/{domain[1]} {label}</span>}\n    {mode === ChartMode.DOWNWARDS && <span style={{\n      verticalAlign: 'top',\n      top: `${Math.min(40, 40*data[data.length - 1]/domain[1])}px`,\n    }}>{data[data.length - 1]}/{domain[1]} {label}</span>}\n  </ChartBar>;\n};\n\nexport default Chart;\n","export const Icons = {\n  \"244\": \"/i/001000/001953.png\",\n  \"245\": \"/i/001000/001953.png\",\n  \"246\": \"/i/001000/001953.png\",\n  \"247\": \"/i/001000/001953.png\",\n  \"248\": \"/i/001000/001953.png\",\n  \"249\": \"/i/001000/001953.png\",\n  \"250\": \"/i/001000/001953.png\",\n  \"251\": \"/i/001000/001953.png\",\n  \"252\": \"/i/001000/001951.png\",\n  \"253\": \"/i/001000/001951.png\",\n  \"254\": \"/i/001000/001951.png\",\n  \"255\": \"/i/001000/001951.png\",\n  \"256\": \"/i/001000/001951.png\",\n  \"257\": \"/i/001000/001951.png\",\n  \"258\": \"/i/001000/001951.png\",\n  \"259\": \"/i/001000/001951.png\",\n  \"260\": \"/i/001000/001955.png\",\n  \"261\": \"/i/001000/001955.png\",\n  \"262\": \"/i/001000/001955.png\",\n  \"263\": \"/i/001000/001955.png\",\n  \"264\": \"/i/001000/001955.png\",\n  \"265\": \"/i/001000/001955.png\",\n  \"266\": \"/i/001000/001955.png\",\n  \"267\": \"/i/001000/001955.png\",\n  \"276\": \"/i/001000/001506.png\",\n  \"277\": \"/i/001000/001556.png\",\n  \"278\": \"/i/001000/001668.png\",\n  \"279\": \"/i/001000/001706.png\",\n  \"283\": \"/i/001000/001571.png\",\n  \"284\": \"/i/001000/001672.png\",\n  \"285\": \"/i/001000/001721.png\",\n  \"286\": \"/i/001000/001822.png\",\n  \"287\": \"/i/001000/001872.png\",\n  \"4574\": \"/i/001000/001971.png\",\n  \"4575\": \"/i/001000/001971.png\",\n  \"4576\": \"/i/001000/001971.png\",\n  \"4577\": \"/i/001000/001971.png\",\n  \"4578\": \"/i/001000/001971.png\",\n  \"4579\": \"/i/001000/001971.png\",\n  \"4580\": \"/i/001000/001971.png\",\n  \"4581\": \"/i/001000/001971.png\",\n  \"4597\": \"/i/001000/001979.png\",\n  \"4598\": \"/i/001000/001979.png\",\n  \"4599\": \"/i/001000/001979.png\",\n  \"4600\": \"/i/001000/001979.png\",\n  \"4601\": \"/i/001000/001979.png\",\n  \"4602\": \"/i/001000/001979.png\",\n  \"4603\": \"/i/001000/001979.png\",\n  \"4604\": \"/i/001000/001979.png\",\n  \"4607\": \"/i/001000/001974.png\",\n  \"4608\": \"/i/001000/001974.png\",\n  \"4609\": \"/i/001000/001974.png\",\n  \"4610\": \"/i/001000/001974.png\",\n  \"4611\": \"/i/001000/001974.png\",\n  \"4612\": \"/i/001000/001974.png\",\n  \"4613\": \"/i/001000/001974.png\",\n  \"4614\": \"/i/001000/001974.png\",\n  \"4615\": \"/i/001000/001978.png\",\n  \"4616\": \"/i/001000/001978.png\",\n  \"4617\": \"/i/001000/001978.png\",\n  \"4618\": \"/i/001000/001978.png\",\n  \"4619\": \"/i/001000/001978.png\",\n  \"4620\": \"/i/001000/001978.png\",\n  \"4621\": \"/i/001000/001978.png\",\n  \"4622\": \"/i/001000/001978.png\",\n  \"100001\": \"/i/001000/001501.png\",\n  \"100002\": \"/i/001000/001502.png\",\n  \"100003\": \"/i/001000/001952.png\",\n  \"100004\": \"/i/001000/001516.png\",\n  \"100005\": \"/i/001000/001956.png\",\n  \"100007\": \"/i/001000/001515.png\",\n  \"100008\": \"/i/001000/001517.png\",\n  \"100010\": \"/i/001000/001954.png\",\n  \"100015\": \"/i/001000/001551.png\",\n  \"100016\": \"/i/001000/001552.png\",\n  \"100017\": \"/i/001000/001952.png\",\n  \"100018\": \"/i/001000/001566.png\",\n  \"100019\": \"/i/001000/001956.png\",\n  \"100021\": \"/i/001000/001565.png\",\n  \"100022\": \"/i/001000/001567.png\",\n  \"100023\": \"/i/001000/001954.png\",\n  \"100030\": \"/i/001000/001601.png\",\n  \"100031\": \"/i/001000/001602.png\",\n  \"100032\": \"/i/001000/001952.png\",\n  \"100033\": \"/i/001000/001619.png\",\n  \"100034\": \"/i/001000/001616.png\",\n  \"100035\": \"/i/001000/001956.png\",\n  \"100037\": \"/i/001000/001615.png\",\n  \"100038\": \"/i/001000/001617.png\",\n  \"100039\": \"/i/001000/001622.png\",\n  \"100040\": \"/i/001000/001954.png\",\n  \"100045\": \"/i/001000/001701.png\",\n  \"100046\": \"/i/001000/001702.png\",\n  \"100047\": \"/i/001000/001952.png\",\n  \"100048\": \"/i/001000/001716.png\",\n  \"100049\": \"/i/001000/001956.png\",\n  \"100051\": \"/i/001000/001715.png\",\n  \"100052\": \"/i/001000/001717.png\",\n  \"100053\": \"/i/001000/001954.png\",\n  \"100060\": \"/i/001000/001751.png\",\n  \"100061\": \"/i/001000/001752.png\",\n  \"100062\": \"/i/001000/001952.png\",\n  \"100063\": \"/i/001000/001768.png\",\n  \"100064\": \"/i/001000/001765.png\",\n  \"100065\": \"/i/001000/001956.png\",\n  \"100067\": \"/i/001000/001764.png\",\n  \"100068\": \"/i/001000/001766.png\",\n  \"100069\": \"/i/001000/001771.png\",\n  \"100070\": \"/i/001000/001954.png\",\n  \"100075\": \"/i/001000/001651.png\",\n  \"100076\": \"/i/001000/001652.png\",\n  \"100077\": \"/i/001000/001952.png\",\n  \"100078\": \"/i/001000/001665.png\",\n  \"100079\": \"/i/001000/001956.png\",\n  \"100080\": \"/i/001000/001664.png\",\n  \"100081\": \"/i/001000/001666.png\",\n  \"100082\": \"/i/001000/001954.png\",\n  \"100083\": \"/i/001000/001673.png\",\n  \"100090\": \"/i/001000/001801.png\",\n  \"100091\": \"/i/001000/001802.png\",\n  \"100092\": \"/i/001000/001952.png\",\n  \"100093\": \"/i/001000/001816.png\",\n  \"100094\": \"/i/001000/001956.png\",\n  \"100096\": \"/i/001000/001815.png\",\n  \"100097\": \"/i/001000/001817.png\",\n  \"100098\": \"/i/001000/001819.png\",\n  \"100099\": \"/i/001000/001954.png\",\n  \"100105\": \"/i/001000/001851.png\",\n  \"100106\": \"/i/001000/001852.png\",\n  \"100107\": \"/i/001000/001952.png\",\n  \"100108\": \"/i/001000/001868.png\",\n  \"100109\": \"/i/001000/001865.png\",\n  \"100110\": \"/i/001000/001956.png\",\n  \"100111\": \"/i/001000/001864.png\",\n  \"100112\": \"/i/001000/001866.png\",\n  \"100113\": \"/i/001000/001954.png\",\n  \"100128\": \"/i/001000/001524.png\",\n  \"100129\": \"/i/001000/001574.png\",\n  \"100130\": \"/i/001000/001625.png\",\n  \"100131\": \"/i/001000/001676.png\",\n  \"100132\": \"/i/001000/001724.png\",\n  \"100133\": \"/i/001000/001774.png\",\n  \"100134\": \"/i/001000/001825.png\",\n  \"100135\": \"/i/001000/001875.png\",\n  \"100136\": \"/i/001000/001876.png\",\n  \"100137\": \"/i/001000/001959.png\",\n  \"100138\": \"/i/001000/001959.png\",\n  \"100139\": \"/i/001000/001959.png\",\n  \"100140\": \"/i/001000/001959.png\",\n  \"100141\": \"/i/001000/001959.png\",\n  \"100142\": \"/i/001000/001959.png\",\n  \"100143\": \"/i/001000/001959.png\",\n  \"100144\": \"/i/001000/001959.png\",\n  \"100145\": \"/i/001000/001960.png\",\n  \"100146\": \"/i/001000/001960.png\",\n  \"100147\": \"/i/001000/001960.png\",\n  \"100148\": \"/i/001000/001960.png\",\n  \"100149\": \"/i/001000/001960.png\",\n  \"100150\": \"/i/001000/001960.png\",\n  \"100151\": \"/i/001000/001960.png\",\n  \"100152\": \"/i/001000/001960.png\",\n  \"100153\": \"/i/001000/001963.png\",\n  \"100154\": \"/i/001000/001963.png\",\n  \"100156\": \"/i/001000/001963.png\",\n  \"100157\": \"/i/001000/001963.png\",\n  \"100158\": \"/i/001000/001963.png\",\n  \"100159\": \"/i/001000/001963.png\",\n  \"100160\": \"/i/001000/001963.png\",\n  \"100161\": \"/i/001000/001964.png\",\n  \"100162\": \"/i/001000/001964.png\",\n  \"100163\": \"/i/001000/001964.png\",\n  \"100164\": \"/i/001000/001964.png\",\n  \"100165\": \"/i/001000/001964.png\",\n  \"100166\": \"/i/001000/001964.png\",\n  \"100167\": \"/i/001000/001964.png\",\n  \"100168\": \"/i/001000/001964.png\",\n  \"100169\": \"/i/001000/001962.png\",\n  \"100170\": \"/i/001000/001962.png\",\n  \"100171\": \"/i/001000/001962.png\",\n  \"100172\": \"/i/001000/001962.png\",\n  \"100174\": \"/i/001000/001962.png\",\n  \"100175\": \"/i/001000/001962.png\",\n  \"100176\": \"/i/001000/001962.png\",\n  \"100178\": \"/i/001000/001677.png\",\n  \"100179\": \"/i/001000/001969.png\",\n  \"100180\": \"/i/001000/001969.png\",\n  \"100181\": \"/i/001000/001969.png\",\n  \"100182\": \"/i/001000/001969.png\",\n  \"100183\": \"/i/001000/001969.png\",\n  \"100184\": \"/i/001000/001969.png\",\n  \"100185\": \"/i/001000/001969.png\",\n  \"100186\": \"/i/001000/001969.png\",\n  \"100187\": \"/i/001000/001961.png\",\n  \"100188\": \"/i/001000/001961.png\",\n  \"100189\": \"/i/001000/001961.png\",\n  \"100190\": \"/i/001000/001961.png\",\n  \"100192\": \"/i/001000/001961.png\",\n  \"100193\": \"/i/001000/001961.png\",\n  \"100194\": \"/i/001000/001961.png\",\n  \"100195\": \"/i/001000/001973.png\",\n  \"100196\": \"/i/001000/001973.png\",\n  \"100197\": \"/i/001000/001973.png\",\n  \"100198\": \"/i/001000/001973.png\",\n  \"100199\": \"/i/001000/001973.png\",\n  \"100200\": \"/i/001000/001973.png\",\n  \"100201\": \"/i/001000/001973.png\",\n  \"100202\": \"/i/001000/001973.png\",\n  \"100203\": \"/i/001000/001972.png\",\n  \"100204\": \"/i/001000/001972.png\",\n  \"100205\": \"/i/001000/001972.png\",\n  \"100206\": \"/i/001000/001972.png\",\n  \"100207\": \"/i/001000/001972.png\",\n  \"100208\": \"/i/001000/001972.png\",\n  \"100209\": \"/i/001000/001972.png\",\n  \"100210\": \"/i/001000/001972.png\",\n  \"100211\": \"/i/001000/001970.png\",\n  \"100212\": \"/i/001000/001970.png\",\n  \"100213\": \"/i/001000/001970.png\",\n  \"100214\": \"/i/001000/001970.png\",\n  \"100215\": \"/i/001000/001970.png\",\n  \"100216\": \"/i/001000/001970.png\",\n  \"100217\": \"/i/001000/001970.png\",\n  \"100218\": \"/i/001000/001970.png\",\n  \"100219\": \"/i/001000/001534.png\",\n  \"100220\": \"/i/001000/001583.png\",\n  \"100221\": \"/i/001000/001634.png\",\n  \"100222\": \"/i/001000/001685.png\",\n  \"100223\": \"/i/001000/001733.png\",\n  \"100224\": \"/i/001000/001783.png\",\n  \"100225\": \"/i/001000/001834.png\",\n  \"100226\": \"/i/001000/001885.png\",\n  \"100227\": \"/i/001000/001535.png\",\n  \"100228\": \"/i/001000/001584.png\",\n  \"100229\": \"/i/001000/001635.png\",\n  \"100230\": \"/i/001000/001686.png\",\n  \"100231\": \"/i/001000/001734.png\",\n  \"100232\": \"/i/001000/001784.png\",\n  \"100233\": \"/i/001000/001835.png\",\n  \"100234\": \"/i/001000/001886.png\",\n  \"100235\": \"/i/001000/001536.png\",\n  \"100236\": \"/i/001000/001585.png\",\n  \"100237\": \"/i/001000/001636.png\",\n  \"100238\": \"/i/001000/001687.png\",\n  \"100239\": \"/i/001000/001735.png\",\n  \"100240\": \"/i/001000/001785.png\",\n  \"100241\": \"/i/001000/001836.png\",\n  \"100242\": \"/i/001000/001887.png\",\n  \"100243\": \"/i/001000/001537.png\",\n  \"100244\": \"/i/001000/001586.png\",\n  \"100245\": \"/i/001000/001637.png\",\n  \"100246\": \"/i/001000/001688.png\",\n  \"100247\": \"/i/001000/001736.png\",\n  \"100248\": \"/i/001000/001786.png\",\n  \"100249\": \"/i/001000/001837.png\",\n  \"100250\": \"/i/001000/001888.png\",\n  \"100251\": \"/i/001000/001965.png\",\n  \"100252\": \"/i/001000/001965.png\",\n  \"100253\": \"/i/001000/001965.png\",\n  \"100254\": \"/i/001000/001965.png\",\n  \"100255\": \"/i/001000/001965.png\",\n  \"100256\": \"/i/001000/001965.png\",\n  \"100257\": \"/i/001000/001965.png\",\n  \"100258\": \"/i/001000/001965.png\",\n  \"100259\": \"/i/001000/001966.png\",\n  \"100260\": \"/i/001000/001966.png\",\n  \"100261\": \"/i/001000/001966.png\",\n  \"100262\": \"/i/001000/001966.png\",\n  \"100263\": \"/i/001000/001966.png\",\n  \"100264\": \"/i/001000/001966.png\",\n  \"100265\": \"/i/001000/001966.png\",\n  \"100266\": \"/i/001000/001966.png\",\n  \"100267\": \"/i/001000/001967.png\",\n  \"100268\": \"/i/001000/001967.png\",\n  \"100269\": \"/i/001000/001967.png\",\n  \"100270\": \"/i/001000/001967.png\",\n  \"100271\": \"/i/001000/001967.png\",\n  \"100272\": \"/i/001000/001967.png\",\n  \"100273\": \"/i/001000/001967.png\",\n  \"100274\": \"/i/001000/001967.png\",\n  \"100275\": \"/i/001000/001968.png\",\n  \"100276\": \"/i/001000/001968.png\",\n  \"100277\": \"/i/001000/001968.png\",\n  \"100278\": \"/i/001000/001968.png\",\n  \"100279\": \"/i/001000/001968.png\",\n  \"100280\": \"/i/001000/001968.png\",\n  \"100281\": \"/i/001000/001968.png\",\n  \"100282\": \"/i/001000/001968.png\",\n  \"100283\": \"/i/001000/001981.png\",\n  \"100284\": \"/i/001000/001981.png\",\n  \"100285\": \"/i/001000/001981.png\",\n  \"100286\": \"/i/001000/001981.png\",\n  \"100287\": \"/i/001000/001981.png\",\n  \"100288\": \"/i/001000/001981.png\",\n  \"100289\": \"/i/001000/001981.png\",\n  \"100290\": \"/i/001000/001981.png\",\n  \"100291\": \"/i/001000/001980.png\",\n  \"100292\": \"/i/001000/001980.png\",\n  \"100293\": \"/i/001000/001980.png\",\n  \"100294\": \"/i/001000/001980.png\",\n  \"100295\": \"/i/001000/001980.png\",\n  \"100296\": \"/i/001000/001980.png\",\n  \"100297\": \"/i/001000/001980.png\",\n  \"100298\": \"/i/001000/001980.png\",\n  \"100299\": \"/i/001000/001507.png\",\n  \"100300\": \"/i/001000/001557.png\",\n  \"100301\": \"/i/001000/001607.png\",\n  \"100302\": \"/i/001000/001657.png\",\n  \"100303\": \"/i/001000/001707.png\",\n  \"100304\": \"/i/001000/001757.png\",\n  \"100305\": \"/i/001000/001807.png\",\n  \"100306\": \"/i/001000/001857.png\",\n  \"100307\": \"/i/001000/001976.png\",\n  \"100308\": \"/i/001000/001976.png\",\n  \"100309\": \"/i/001000/001976.png\",\n  \"100310\": \"/i/001000/001976.png\",\n  \"100311\": \"/i/001000/001976.png\",\n  \"100312\": \"/i/001000/001976.png\",\n  \"100313\": \"/i/001000/001976.png\",\n  \"100314\": \"/i/001000/001976.png\",\n  \"100315\": \"/i/001000/001514.png\",\n  \"100316\": \"/i/001000/001564.png\",\n  \"100317\": \"/i/001000/001614.png\",\n  \"100318\": \"/i/001000/001663.png\",\n  \"100319\": \"/i/001000/001714.png\",\n  \"100320\": \"/i/001000/001763.png\",\n  \"100321\": \"/i/001000/001814.png\",\n  \"100322\": \"/i/001000/001863.png\",\n  \"100323\": \"/i/001000/001503.png\",\n  \"100324\": \"/i/001000/001553.png\",\n  \"100325\": \"/i/001000/001603.png\",\n  \"100326\": \"/i/001000/001653.png\",\n  \"100327\": \"/i/001000/001703.png\",\n  \"100328\": \"/i/001000/001753.png\",\n  \"100329\": \"/i/001000/001803.png\",\n  \"100330\": \"/i/001000/001853.png\",\n  \"100331\": \"/i/001000/001977.png\",\n  \"100332\": \"/i/001000/001977.png\",\n  \"100333\": \"/i/001000/001977.png\",\n  \"100334\": \"/i/001000/001977.png\",\n  \"100335\": \"/i/001000/001977.png\",\n  \"100336\": \"/i/001000/001977.png\",\n  \"100337\": \"/i/001000/001977.png\",\n  \"100338\": \"/i/001000/001977.png\",\n  \"100339\": \"/i/001000/001975.png\",\n  \"100340\": \"/i/001000/001975.png\",\n  \"100341\": \"/i/001000/001975.png\",\n  \"100342\": \"/i/001000/001975.png\",\n  \"100343\": \"/i/001000/001975.png\",\n  \"100344\": \"/i/001000/001975.png\",\n  \"100345\": \"/i/001000/001975.png\",\n  \"100346\": \"/i/001000/001975.png\"\n}","import React, { useEffect, useState, useRef } from 'react';\n\nimport styled, { css, keyframes } from 'styled-components/macro';\n\nimport { CraftState } from './index';\n\nconst IQLine = styled.div`\n  padding: 0 10px;\n  position: relative;\n  bottom: -10px;\n\n  > svg {\n    height: 40px;\n    display: block;\n\n    > path {\n      cursor: pointer;\n      stroke: #6e9a1b;\n    }\n  }\n`;\n\ninterface IQBedProps {\n  states: CraftState[]\n  colWidth: number\n}\nconst IQBed = (props: IQBedProps) => {\n  const { states, colWidth } = props;\n  const lineThickness = 3;\n  const lineSpacing = 6;\n  const IQStacks = states.slice(1).map(st => {\n    const { buffs } = st;\n    const IQ = buffs.find(buff => buff.buff === 0);\n    return IQ ? IQ.stacks : 0;\n  });\n  const IQLines: Array<{\n    start: number\n    end: number\n  }> = [];\n  let start = -1;\n  IQStacks.forEach((stack, stackIndex) => {\n    if (stack > 0 && start < 0) {\n      start = stackIndex;\n      IQLines.push({\n        start,\n        end: -1\n      });\n    }\n    if (start > -1 && stack < 1) {\n      IQLines[IQLines.length - 1].end = stackIndex;\n      start = -1;\n    }\n  });\n  return <IQLine>\n    <svg style={{\n      width: `${(states.length - 1) * colWidth}px`,\n    }}>\n      {IQStacks.map((IQStack, IQStackIndex) => {\n        const leaves: number[] = [];\n        const leafWidth = 6;\n        const leafHeight = 4;\n        const x = 20 + IQStackIndex * colWidth;\n        const y = 40 - lineSpacing;\n        for (let j = 0; j < IQStack; j++) {\n          leaves.push(1);\n        }\n        const leafColor = leaves.length >= 11 ? '#dcac2a' : '#3e6a00';\n        return <g\n          key={IQStackIndex}\n        >\n          <path\n            d={`\n              M ${x + leafWidth} ${y}\n              L ${x + leafWidth} ${y - IQStack * leafHeight * 0.5}\n            `}\n            stroke=\"#6e9a1b\"\n            fill=\"transparent\"\n          />;\n          {leaves.map((_, leafIndex) => {\n            const xx = x + (leafIndex % 2) * leafWidth;\n            const yy = (y - leafHeight * 1.5) - (leafIndex * leafHeight * 0.5);\n            const d = leafIndex >= 10 ? `\n              M ${xx + 0.5 * leafWidth} ${yy + 0.75 * leafHeight}\n              C ${xx + 0.75 * leafWidth} ${yy + 0.75 * leafHeight}\n                ${xx + leafWidth} ${yy + 0.9 * leafHeight}\n                ${xx + leafWidth} ${yy + leafHeight}\n              C ${xx + leafWidth} ${yy + 0.5 * leafHeight}\n                ${xx + 0.75 * leafWidth} ${yy}\n                ${xx + 0.5 * leafWidth} ${yy}\n              C ${xx + 0.25 * leafWidth} ${yy}\n                ${xx} ${yy - 0.15 * leafHeight}\n                ${xx} ${yy - 0.25 * leafHeight}\n              C ${xx} ${yy + 0.25 * leafHeight}\n                ${xx + 0.25 * leafWidth} ${yy + 0.75 * leafHeight}\n                ${xx + 0.5 * leafWidth} ${yy + 0.75 * leafHeight}\n            ` : `\n              M ${xx} ${yy + leafHeight}\n              C ${xx} ${yy + 0.9 * leafHeight}\n                ${xx + 0.25 * leafWidth} ${yy + 0.75 * leafHeight}\n                ${xx + 0.5 * leafWidth} ${yy + 0.75 * leafHeight}\n              C ${xx + 0.75 * leafWidth} ${yy + 0.75 * leafHeight}\n                ${xx + leafWidth} ${yy + 0.9 * leafHeight}\n                ${xx + leafWidth} ${yy + leafHeight}\n              C ${xx + leafWidth} ${yy + 0.5 * leafHeight}\n                ${xx + 0.75 * leafWidth} ${yy}\n                ${xx + 0.5 * leafWidth} ${yy}\n              C ${xx + 0.25 * leafWidth} ${yy}\n                ${xx} ${yy + 0.5 * leafHeight}\n                ${xx} ${yy + leafHeight}\n            `;\n            return <path\n              d={d}\n              key={leafIndex}\n              stroke=\"transparent\"\n              fill={leafColor}\n            />;\n          })}\n        </g>;\n      })}\n      {IQLines.map((IQLine, IQLineIndex) => {\n        const start = 20 + IQLine.start * colWidth + lineThickness / 2;\n        const end = IQLine.end < 0 ? (states.length - 1) * colWidth : IQLine.end * colWidth;\n        const gap = lineSpacing;\n        return <path\n          key={IQLineIndex}\n          d={`\n            M ${start} 40\n            C ${start} ${40 - gap / 2}\n              ${start + gap / 2} ${40 - gap}\n              ${start + gap} ${40 - gap}\n            ${IQLine.end < 0 ? `\n              L ${end} ${40 - gap}\n            ` : `\n              L ${end + gap} ${40 - gap}\n              C ${end + gap * 1.5} ${40 - gap}\n                ${end + gap * 2} ${40 - gap / 2}\n                ${end + gap * 2} 40\n            `}\n          `}\n          fill=\"transparent\"\n          strokeWidth=\"3\"\n          stroke={'#ccc'}\n        />\n      })}\n    </svg>\n  </IQLine>;\n};\n\nexport default IQBed;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport queryString from 'query-string'\n\nimport styled, { css, keyframes } from 'styled-components/macro';\n\nimport {\n  ActionType,\n  CraftingAction,\n  CraftingActionsRegistry,\n  Simulation,\n  Craft,\n  CrafterStats,\n  EffectiveBuff,\n} from '@ffxiv-teamcraft/simulator';\n\nimport { Icons } from './Icons';\nimport Bars from './Bars';\nimport Chart, { ChartMode } from './Chart';\nimport IQBed from './IQBed';\n\nconst jobs = [\n  '', '', '', '', '', '', '', '',\n  'CRP',\n  'BSM',\n  'ARM',\n  'GSM',\n  'LTW',\n  'WVR',\n  'ALC',\n  'CUL'\n];\n\nconst buffLineColors: { [key: number]: string } = {\n  /*\n    INNER_QUIET = 0,\n    STEADY_HAND = 1,\n    STEADY_HAND_II = 2,\n    WASTE_NOT = 3,\n    WASTE_NOT_II = 4,\n    STROKE_OF_GENIUS = 5,\n    INITIAL_PREPARATIONS = 6,\n    COMFORT_ZONE = 7,\n    WHISTLE_WHILE_YOU_WORK = 8,\n    HEART_OF_CRAFTER = 9,\n    MANIPULATION = 10,\n    MANIPULATION_II = 11,\n    GREAT_STRIDES = 12,\n    INNOVATION = 13,\n    INGENUITY = 14,\n    INGENUITY_II = 15,\n    MAKERS_MARK = 16,\n    NAME_OF_THE_ELEMENTS = 17,\n    RECLAIM = 18,\n    REUSE = 19\n  */\n  0: '#deae6d',\n  1: '#ab6e59', \n  2: '#ab6e59', \n  3: '#6a6a69',\n  4: '#6a6a69',\n  5: '#6d7d69',\n  6: '#1777da',\n  7: '#db75ed',\n  8: '#e1be4d',\n  9: '#6ee626',\n  10: '#68ccac',\n  11: '#68ccac',\n  12: '#c35289',\n  13: '#2675c5',\n  14: '#c5a666',\n  15: '#c5a666',\n  16: '#2b7d5c',\n  17: '#3bac4a',\n  18: '#72aae7',\n  19: '#f7de63',\n};\nconst buffLineNames: { [key: number]: string } = {\n  0: 'Inner Quiet',\n  1: 'Steady Hand', \n  2: 'Steady Hand II', \n  3: 'Waste Not',\n  4: 'Waste Not II',\n  5: 'Stroke Of Genius',\n  6: 'Initial Preparations',\n  7: 'Comfort Zone',\n  8: 'Whistle While You Work',\n  9: 'Heart Of Crafter',\n  10: 'Manipulation',\n  11: 'Manipulation II',\n  12: 'Great Strides',\n  13: 'Innovation',\n  14: 'Ingenuity',\n  15: 'Ingenuity II',\n  16: 'Maker\\'s Mark',\n  17: 'Name Of The Elements',\n  18: 'Reclaim',\n  19: 'Reuse',\n};\n\nconst actionsByType = [\n  ActionType.PROGRESSION,\n  ActionType.CP_RECOVERY,\n  ActionType.OTHER,\n  ActionType.QUALITY,\n  ActionType.REPAIR,\n  ActionType.BUFF,\n  ActionType.SPECIALTY,\n].map(type => CraftingActionsRegistry.getActionsByType(type));\nconst allActions = CraftingActionsRegistry.ALL_ACTIONS.map(act => act.action);\n\ninterface JobButtonProps {\n  active?: boolean\n}\nconst JobButton = styled.div`\n  padding: 4px 8px;\n  display: inline-block;\n  cursor: pointer;\n  background: #f7f7f7;\n  border-radius: 4px;\n  box-sizing: border-box;\n  margin: 4px;\n  border: solid 1px transparent;\n  margin-top: 20px;\n\n  ${({ active }: JobButtonProps) => active && css`\n  border: solid 1px #ccc;\n  `}\n\n  &:hover {\n    background: #eee;\n  }\n\n  &:active {\n    transform: translateY(1px);\n    user-select: none;\n  }\n`;\n\nconst rotate = keyframes`\n  from {\n    transform: translateY(-5px) scale(1.15) rotate(-4deg);\n  }\n\n  to {\n    transform: translateY(-5px) scale(1.15) rotate(3deg);\n  }\n`;\nconst ActionBar = styled.div`\n  padding: 10px 10px;\n  white-space: nowrap;\n\n  > img, > div {\n    vertical-align: middle;\n  }\n\n  &::before {\n    content: '';\n    display: inline-block;\n    vertical-align: middle;\n    height: 40px;\n  }\n\n  > img {\n    cursor: grab;\n    transition: border 0.1s linear, transform 0.1s;\n\n    &:hover {\n      transform: translateY(-2px) scale(1.05);\n    }\n\n    &:active {\n      cursor: grabbing;\n    }\n  }\n`;\n\nconst BuffLines = styled.div`\n  padding: 0 10px;\n  position: relative;\n  top: -10px;\n\n  > svg {\n    min-height: 15px;\n\n    path {\n      cursor: pointer;\n      &:hover {\n        stroke: black;\n      }\n    }\n  }\n`;\nconst BuffLineTooltip = styled.div`\n  background: #fff;\n  padding: 10px 20px;\n  border-radius: 4px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);\n  position: absolute;\n  pointer-events: none;\n  z-index: 2;\n`;\n\ninterface DraggedImageProps {\n  isDragged?: boolean\n  isFailed?: boolean\n}\nconst DraggedImage = styled.img`\n  border: solid 0px transparent;\n  ${({ isDragged }: DraggedImageProps) => isDragged && css`\n    animation: ${rotate} 1s infinite alternate;\n    opacity: 0.6;\n  `}\n  ${({ isFailed }: DraggedImageProps) => isFailed && css`\n    opacity: 0.2;\n  `}\n`;\n\nconst ScrollingBar = styled.div`\n  overflow: auto;\n  overflow-y: hidden;\n  overflow-x: auto;\n  padding: 1vw;\n  padding-top: 12px;\n  position: sticky;\n  top: 0;\n  background: #fff;\n  box-shadow: 0 3px 3px rgba(0, 0, 0, 0.2);\n  z-index: 3;\n`;\n\nconst ActionTypeSet = styled.div`\n  display: inline-block;\n  padding: 4px 8px;\n  margin: 4px;\n  background: #f5f5f5;\n  border-radius: 4px;\n`;\n\ninterface ActionPalletteImage {\n  isDragged?: boolean\n}\nconst ActionPalletteImage = styled.img`\n  transition: transform 0.5s;\n  cursor: pointer;\n  transition: transform 0.2s;\n  ${({ isDragged }: DraggedImageProps) => isDragged && css`\n    &, &:active {\n      transition: transform 0.1s;\n      transform: scale(0) !important;\n    }\n  `}\n\n  &:hover {\n    transform: scale(0.95);\n  }\n\n  &:active {\n    transform: scale(0.9);\n    transition-duration: 0.1s;\n  }\n`;\n\nconst ShareInput = styled.input`\n  width: 50vw;\n  padding: 4px 8px;\n  border-radius: 4px;\n  border: solid 1px #eee;\n`;\n\nexport interface CraftState {\n  progress: number\n  quality: number\n  cp: number\n  durability: number\n  buffs: EffectiveBuff[]\n}\n\nconst SimComponent = (props: RouteComponentProps) => {\n  const { location } = props;\n\n  // recipe parameters\n  const [recipeRLvl, set_recipeRLvl] = useState(430);\n  const [recipeLvl, set_recipeLvl] = useState(80);\n  const [recipeProg, set_recipeProg] = useState(1900);\n  const [recipeQual, set_recipeQual] = useState(15000);\n  const [recipeDur, set_recipeDur] = useState(80);\n  const [recipeSugCraft, set_recipeSugCraft] = useState(1866);\n  const [recipeSugControl, set_recipeSugControl] = useState(1733);\n\n  // player parameters\n  const [jobId, set_jobId] = useState(8);\n  const [jobCraftsmanship, set_jobCraftsmanship] = useState(1800);\n  const [jobControl, set_jobControl] = useState(1800);\n  const [jobCP, set_jobCP] = useState(489);\n  const [jobLvl, set_jobLvl] = useState(80);\n  const [jobIsSpecialist, set_jobIsSpecialist] = useState(true);\n  const stats = new CrafterStats(\n    jobId,\n    jobCraftsmanship,\n    jobControl,\n    jobCP,\n    jobIsSpecialist,\n    jobLvl,\n    [jobLvl, jobLvl, jobLvl, jobLvl, jobLvl, jobLvl, jobLvl, jobLvl]\n  );\n\n  const [defaultState, set_defaultState] = useState({\n    progress: 0,\n    quality: 0,\n    cp: stats.cp,\n    durability: recipeDur,\n    buffs: [] as EffectiveBuff[]\n  } as CraftState);\n\n  const [actions, set_actions] = useState([] as CraftingAction[]);\n\n  const scrollingBarRef = useRef(undefined as undefined | HTMLDivElement);\n\n  useEffect(() => {\n    const values = queryString.parse(location.search, {\n      arrayFormat: 'comma'\n    });\n\n    // recipe stuff\n    const rrl = parseInt(values.rrl + '');\n    if (!isNaN(rrl)) {\n      set_recipeRLvl(rrl);\n    }\n    const rl = parseInt(values.rl + '');\n    if (!isNaN(rl)) {\n      set_recipeLvl(rl);\n    }\n    const rp = parseInt(values.rp + '');\n    if (!isNaN(rp)) {\n      set_recipeProg(rp);\n    }\n    const rq = parseInt(values.rq + '');\n    if (!isNaN(rq)) {\n      set_recipeQual(rq);\n    }\n    const rd = parseInt(values.rd + '');\n    if (!isNaN(rd)) {\n      set_recipeDur(rd);\n      set_defaultState(df => {\n        return {\n          ...df,\n          durability: rd\n        };\n      });\n    }\n    const rscr = parseInt(values.rscr + '');\n    if (!isNaN(rscr)) {\n      set_recipeSugCraft(rscr);\n    }\n    const rsco = parseInt(values.rsco + '');\n    if (!isNaN(rsco)) {\n      set_recipeSugControl(rsco);\n    }\n\n    // player stuff\n    const ji = parseInt(values.ji + '');\n    if (!isNaN(ji)) {\n      set_jobId(ji);\n    }\n    const jcr = parseInt(values.jcr + '');\n    if (!isNaN(jcr)) {\n      set_jobCraftsmanship(jcr);\n    }\n    const jco = parseInt(values.jco + '');\n    if (!isNaN(jco)) {\n      set_jobControl(jco);\n    }\n    const jcp = parseInt(values.jcp + '');\n    if (!isNaN(jcp)) {\n      set_jobCP(jcp);\n    }\n    const jl = parseInt(values.jl + '');\n    if (!isNaN(jl)) {\n      set_jobLvl(jl);\n    }\n    const jis = parseInt(values.jis + '') ;\n    if (!isNaN(jis)) {\n      set_jobIsSpecialist(jis === 1);\n    }\n    if (values && values.yact) {\n      const passedActions = (values.yact + '').split(',').map(actIndex => {\n        return allActions[parseInt(actIndex)];\n      });\n      set_actions(passedActions);\n    } else if (values && values.zact) {\n      const acts = (values.zact + '').split(',');\n      const passedActions = CraftingActionsRegistry.createFromIds(acts.map(act => parseInt(act)));\n      set_actions(passedActions);\n    }\n  }, [location.search]);\n\n  const [testRecipe, set_testRecipe] = useState({\n    job: jobId,\n    lvl: jobLvl,\n    durability: recipeDur,\n    progress: recipeProg,\n    quality: recipeQual,\n    rlvl: recipeRLvl,\n    materialQualityFactor: 75,\n    id: '0',\n    suggestedControl: 1733,\n    suggestedCraftsmanship: 1866,\n    quickSynth: 1,\n    ingredients: [],\n    hq: 1,\n  } as Craft);\n  useEffect(() => {\n    set_testRecipe(tr => {\n      return {\n        ...tr,\n        job: jobId,\n        lvl: jobLvl,\n        durability: recipeDur,\n        progress: recipeProg,\n        quality: recipeQual,\n        rlvl: recipeRLvl,\n      };\n    });\n  }, [\n    recipeDur,\n    recipeProg,\n    recipeQual,\n    recipeLvl,\n    recipeRLvl,\n    jobId,\n    jobLvl,\n  ])\n\n  const [states, set_states] = useState([defaultState]);\n  const [statedActions, set_statedActions] = useState([] as CraftingAction[]);\n  const [successStates, set_successStates] = useState([] as boolean[]);\n\n  useEffect(() => {\n    if (actions.length < 1) {\n      if (statedActions.length > 0) {\n        set_statedActions([]);\n      }\n      if (states.length !== 1 && states[0] !== defaultState) {\n        set_states([defaultState]);\n      }\n      return;\n    }\n    // find how many actions match the saved one\n    let x;\n    let allGood = true;\n    for (x = 0; x < Math.max(actions.length, statedActions.length); x++) {\n      if (actions[x] !== statedActions[x]) {\n        allGood = false;\n        break;\n      }\n    }\n    // fix simulated data starting from step x\n    const newStatedActions = statedActions.slice(0, x);\n    const newStates = states.slice(0, x + 1);\n    if (allGood) {\n      return;\n    }\n    for (let y = x; y < actions.length; y++) {\n      newStatedActions[y] = actions[y];\n      const sim = new Simulation(\n        testRecipe,\n        newStatedActions,\n        stats,\n      );\n      sim.run(true);\n      newStates[y + 1] = {\n        progress: sim.progression,\n        quality: sim.quality,\n        cp: sim.availableCP,\n        durability: sim.durability,\n        buffs: [...sim.buffs]\n      };\n\n      if (y === actions.length - 1) {\n        const newSuccessStates = sim.steps.map(step => step.success === true);\n        set_successStates(newSuccessStates);\n      }\n    }\n    set_statedActions(newStatedActions);\n    set_states(newStates);\n  }, [\n    actions,\n    defaultState,\n    statedActions,\n    states,\n    stats,\n    testRecipe,\n  ]);\n\n  const clickAction = (action: CraftingAction) => {\n    return () => {\n      requestAnimationFrame(() => {\n        if (scrollingBarRef.current) {\n          scrollingBarRef.current.scrollTo({\n            behavior: 'smooth',\n            left: scrollingBarRef.current.scrollWidth\n          });\n        }\n      });\n      set_actions([...actions, action]);\n    };\n  };\n\n\n  const [draggingIndex, set_draggingIndex] = useState(undefined as undefined | number);\n  const [draggedOverIndex, set_draggedOverIndex] = useState(undefined as undefined | number);\n\n  const clickJobAction = (index: number) => {\n    return () => {\n      set_actions([\n        ...actions.slice(0, index),\n        ...actions.slice(index + 1)\n      ]);\n    };\n  };\n\n  const clickJobButton = (jobId: number) => {\n    return () => {\n      set_jobId(jobId);\n    };\n  };\n\n  const clearActions = () => {\n    set_actions([]);\n  };\n\n  const latestState = states[states.length - 1];\n\n  const [newActionDrag, set_newActionDrag] = useState(undefined as undefined | CraftingAction);\n  const OnActionDragEnd = () => {\n    set_newActionDrag(undefined);\n    set_draggedOverIndex(undefined);\n    set_draggingIndex(undefined);\n  };\n  const OnActionDragStart = (index: number) => {\n    return (e: React.DragEvent) => {\n      set_draggingIndex(index);\n    };\n  };\n  const OnActionDragOver = (index: number) => {\n    return (e: React.DragEvent) => {\n      e.preventDefault();\n      set_draggedOverIndex(index);\n    };\n  };\n  const OnActionDrop = (index: number) => {\n    return (e: React.DragEvent) => {\n      e.preventDefault();\n      set_newActionDrag(undefined);\n      set_draggedOverIndex(undefined);\n      set_draggingIndex(undefined);\n      if (newActionDrag) {\n        const newActions = [...actions];\n        const targetIndex = index;\n        newActions.splice(targetIndex, 0, newActionDrag);\n        set_actions(newActions);\n        return;\n      }\n      if (typeof draggingIndex === 'undefined' || draggingIndex === index) {\n        return;\n      }\n      const newActions = [...actions];\n      const draggedAction = newActions.splice(draggingIndex, 1)[0];\n      const targetIndex = index;\n      newActions.splice(targetIndex, 0, draggedAction);\n      set_actions(newActions);\n    };\n  };\n\n  const OnNewActionDragStart = (act: CraftingAction) => {\n    return (e: React.DragEvent) => {\n      set_newActionDrag(act);\n    };\n  };\n  const OnNewActionDragEnd = () => {\n    set_newActionDrag(undefined);\n    set_draggedOverIndex(undefined);\n    set_draggingIndex(undefined);\n  };\n\n  const [shareUrl, set_shareUrl] = useState('');\n  const showShareUrl = () => {\n    const url = window.location.href.split('?')[0];\n\n    const yacts = actions.filter(a => a).map(a => {\n      const matchingAction = allActions.find(ac => {\n        return a.getId(jobId) === ac.getId(jobId);\n      })\n      return matchingAction ? allActions.indexOf(matchingAction) : -1;\n    });\n\n    const newShareUrl = `${url}?${queryString.stringify({\n      rl: recipeLvl,\n      rrl: recipeRLvl,\n      rp: recipeProg,\n      rq: recipeQual,\n      rd: recipeDur,\n      rscr: recipeSugCraft,\n      rsco: recipeSugControl,\n      jcr: jobCraftsmanship,\n      jco: jobControl,\n      jcp: jobCP,\n      jl: jobLvl,\n      jis: jobIsSpecialist ? '1' : '0',\n      yact: yacts,\n    }, {\n      arrayFormat: 'comma'\n    })}`\n\n    if (newShareUrl === shareUrl) {\n      set_shareUrl('');\n    } else {\n      set_shareUrl(newShareUrl);\n    }\n\n    set_exportString('');\n  };\n\n  const focusShareField = (e: React.MouseEvent<HTMLInputElement>) => {\n    if (e.currentTarget) {\n      e.currentTarget.setSelectionRange(0, e.currentTarget.value.length);\n    }\n  };\n\n  const [exportString, set_exportString] = useState('');\n  const showExportString = () => {\n    const newExportString = CraftingActionsRegistry.exportToCraftOpt(CraftingActionsRegistry.serializeRotation(actions));\n    if (newExportString === exportString) {\n      set_exportString('');\n    } else {\n      set_exportString(newExportString);\n    }\n\n    set_shareUrl('');\n  };\n\n  const requestImportString = () => {\n    const importString = prompt('Enter Teamcraft export string below:');\n    if (importString) {\n      const newActions = CraftingActionsRegistry.importFromCraftOpt(JSON.parse(importString) as string[]);\n      set_actions(newActions);\n    }\n  };\n\n  const buffLines: Array<{\n    buffId: number\n    points: Array<number[] | null | undefined>\n  }> = [];\n  const buffLineThickness = 3;\n  const buffLineGap = 3;\n  const buffLineTopGap = 5;\n  const buffLineSpacing = buffLineThickness + buffLineGap;\n  states.slice(1).forEach((state, stateIndex) => {\n    const { buffs } = state;\n    buffs.filter(buff => buff.buff !== 0).forEach((buff, buffIndex, filteredBuffs) => {\n      const existingBuff = buffLines.find(b => b.buffId === buff.buff);\n      let thisBuff: {\n        buffId: number\n        points: Array<number[] | null | undefined>\n      };\n      if (existingBuff) {\n        thisBuff = existingBuff;\n      } else {\n        thisBuff = {\n          buffId: buff.buff,\n          points: []\n        };\n        buffLines.push(thisBuff);\n      }\n      const startX = 20 + stateIndex * 40 + buffLineSpacing;\n      const startY = buffLineTopGap + ((filteredBuffs.length - 1) * buffLineSpacing + (buffLineThickness)) - (buffIndex * buffLineSpacing);\n      const endX = 20 + (stateIndex * 40) + 40 - buffLineSpacing;\n      const endY = startY;\n      thisBuff.points[stateIndex] = [startX, startY, endX, endY];\n    });\n  });\n  const maxBuffHeight = Math.max(...states.map(st => st.buffs.length));\n\n  const [buffLineTooltip, set_buffLineTooltip] = useState('');\n  const [buffLineTooltipPosition, set_buffLineTooltipPosition] = useState([0, 0]);\n  const showBuffLineTooltip = (buffId: number) => {\n    return () => {\n      set_buffLineTooltip(buffLineNames[buffId] || '');\n    };\n  };\n  const hideBuffLineTooltip = () => {\n    set_buffLineTooltip('');\n  };\n  const updateBuffLineTooltipPosition = (e: React.MouseEvent<HTMLDivElement>) => {\n    const { clientX, clientY } = e;\n    const el = e.currentTarget;\n    const rect = el.getBoundingClientRect();\n    const { left, top } = rect;\n    set_buffLineTooltipPosition([clientX - left + 5, clientY - top + 5]);\n  };\n\n  const setScrollingBarRef = (el: HTMLDivElement) => {\n    if (el) {\n      scrollingBarRef.current = el;\n    }\n  };\n\n  const colWidth = 40;\n\n  return <div>\n    {/* <Bars\n      currentProgress={latestState.progress}\n      maxProgress={testRecipe.progress}\n      currentQuality={latestState.quality}\n      maxQuality={testRecipe.quality}\n      currentDurability={latestState.durability}\n      maxDurability={testRecipe.durability}\n      currentCP={latestState.cp}\n      maxCP={jobCP}\n    /> */}\n\n    <ScrollingBar ref={setScrollingBarRef}>\n      <Chart\n        colWidth={colWidth}\n        rowHeight={40}\n        domain={[0, testRecipe.progress]}\n        data={states.map(state => state.progress)}\n        mode={ChartMode.UPWARDS}\n        color=\"#6e9a1b\"\n        bgColor=\"#9eca4b\"\n        label=\"Progress\"\n      />\n      <Chart\n        colWidth={colWidth}\n        rowHeight={40}\n        domain={[0, testRecipe.quality]}\n        data={states.map(state => state.quality)}\n        mode={ChartMode.DOWNWARDS}\n        color=\"#50a1bf\"\n        bgColor=\"#80d1ef\"\n        label=\"Quality\"\n      />\n\n      <IQBed states={states} colWidth={colWidth}/>\n\n      <ActionBar>\n        {actions.map((action, index) => {\n          const isDragged = draggingIndex === index;\n          const isFailed = successStates[index] === false;\n          const hasBorderLeft = (index === draggedOverIndex) && ((newActionDrag !== undefined) || (draggingIndex !== undefined && draggedOverIndex < draggingIndex));\n          return <DraggedImage\n            alt={CraftingActionsRegistry.serializeRotation([action]).join('')}\n            title={CraftingActionsRegistry.serializeRotation([action]).join('')}\n            key={`${index} ${action.getId(jobId)}`}\n            draggable={true}\n            onDragStart={OnActionDragStart(index)}\n            onDragOver={OnActionDragOver(index)}\n            onDragEnd={OnActionDragEnd}\n            onDrop={OnActionDrop(index)}\n            src={process.env.PUBLIC_URL + (Icons as any)[action.getId(jobId)]}\n            onClick={clickJobAction(index)}\n            style={{\n              width: `${colWidth}px`,\n              borderLeft: hasBorderLeft ? 'solid 10px transparent' : '',\n              borderRight: draggingIndex !== undefined && index === draggedOverIndex && draggedOverIndex > draggingIndex ? 'solid 10px transparent' : '',\n            }}\n            isDragged={isDragged}\n            isFailed={isFailed}\n          />\n        })}\n      </ActionBar>\n      <BuffLines onMouseMove={updateBuffLineTooltipPosition}>\n        {buffLineTooltip && <BuffLineTooltip\n          style={{\n            top: `${buffLineTooltipPosition[1]}px`,\n            left: `${buffLineTooltipPosition[0]}px`,\n          }}\n        >{buffLineTooltip}</BuffLineTooltip>}\n        <svg style={{\n          width: `${(actions.length) * 40}px`,\n          height: `${(maxBuffHeight * buffLineSpacing) + buffLineTopGap}px`\n        }}>\n          {buffLines.map(buffLine => {\n            const d = buffLine.points.map((point, pointIndex, points) => {\n              let pointD = '';\n              const prevPoint = points[pointIndex - 1];\n              if (point && !prevPoint) {\n                pointD += `\n                  M ${point[0] - (buffLineSpacing / 2)} 0\n                  C ${point[0] - (buffLineSpacing / 2)} ${point[1] / 2}\n                    ${point[0] - (buffLineSpacing / 4)} ${point[1]}\n                    ${point[0]} ${point[1]}\n                  L ${point[2]} ${point[3]}\n                `;\n              }\n              if (point && prevPoint) {\n                pointD += `\n                  M ${prevPoint[2]} ${prevPoint[3]}\n                  C ${point[0] - (point[0] - prevPoint[2]) / 2} ${prevPoint[3]}\n                    ${point[0] - (point[0] - prevPoint[2]) / 2} ${point[1]}\n                    ${point[0]} ${point[1]}\n                  L ${point[2]} ${point[3]}\n                `;\n              }\n              return pointD;\n            }).join(' ');\n            return <path\n              onMouseOver={showBuffLineTooltip(buffLine.buffId)}\n              onMouseOut={hideBuffLineTooltip}\n              key={buffLine.buffId}\n              d={d}\n              fill=\"transparent\"\n              strokeWidth=\"3\"\n              stroke={buffLineColors[buffLine.buffId] || '#ccc'}\n            />;\n          })}\n        </svg>\n      </BuffLines>\n      <Chart\n        colWidth={colWidth}\n        rowHeight={40}\n        domain={[0, testRecipe.durability]}\n        data={states.map(state => state.durability)}\n        mode={ChartMode.UPWARDS}\n        color=\"#ccc\"\n        bgColor=\"#eee\"\n        label=\"Durability\"\n      />\n      <Chart\n        colWidth={colWidth}\n        rowHeight={40}\n        domain={[0, jobCP]}\n        data={states.map(state => state.cp)}\n        mode={ChartMode.DOWNWARDS}\n        color=\"#bf7ed9\"\n        bgColor=\"#efaeff\"\n        label=\"CP\"\n      />\n    </ScrollingBar>\n    <JobButton onClick={clearActions} active={true}>Clear</JobButton>\n    <JobButton onClick={showShareUrl} active={true}>Share</JobButton>\n    {shareUrl && <ShareInput onClick={focusShareField} type=\"text\" value={shareUrl} readOnly/>}\n    <JobButton onClick={showExportString} active={true}>Export</JobButton>\n    {exportString && <ShareInput onClick={focusShareField} type=\"text\" value={exportString} readOnly/>}\n    <JobButton onClick={requestImportString} active={true}>Import</JobButton>\n    <div>\n      {jobs.map((n, i) => n && <JobButton\n        active={jobId === i}\n        key={i}\n        onClick={clickJobButton(i)}>\n        {n}\n      </JobButton>)}\n    </div>\n    <div>\n      {actionsByType.map((someActions, typeIndex) => <ActionTypeSet key={typeIndex}>\n        {someActions.map((i, index) => <ActionPalletteImage\n          alt={CraftingActionsRegistry.serializeRotation([i]).join('')}\n          title={CraftingActionsRegistry.serializeRotation([i]).join('')}\n          key={index}\n          draggable={true}\n          onDragStart={OnNewActionDragStart(i)}\n          onDragEnd={OnNewActionDragEnd}\n          src={process.env.PUBLIC_URL + (Icons as any)[i.getId(jobId)]}\n          onClick={clickAction(i)}\n          isDragged={i === newActionDrag}\n        />)}\n      </ActionTypeSet>)}\n    </div>\n  </div>;\n};\n\nexport default SimComponent;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom'\n\nimport styled from 'styled-components/macro';\n\nimport Sim from './components/Sim';\n\nconst Wrapper = styled.div`\n  padding-bottom: 30vh;\n`;\nconst FootNote = styled.div`\n  font-size: 10px;\n`;\n\n// https://nubleh.github.io/ffxiv/craft/?jco=1800&jcp=489&jcr=1800&jis=0&jl=80&rd=80&rl=80&rp=3943&rq=20287&rsco=0&rscr=1866&rrl=430\nconst App: React.FC = () => {\n\n  return (\n    <Router>\n      <Wrapper>\n        <Route path=\"/\" component={Sim}/>\n        <FootNote>\n          This is a WIP thing made for fun.\n          <br/>There are probably bugs everywhere, simulation is likely to be inaccurate.\n          <br/>This thing uses the crafting simulator library made by <a href=\"https://github.com/ffxiv-teamcraft/simulator/\" target=\"_blank\" rel=\"noopener noreferrer\">ffxiv-teamcraft</a>\n        </FootNote>\n      </Wrapper>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}